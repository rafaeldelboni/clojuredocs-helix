[{"arglist-strs":["[reader]","[opts reader]","[reader eof-error? eof opts]"],"doc":"Reads the first object from an cljs.tools.reader.reader-types/IPushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\n   If no reader is provided, *in* will be used.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   cljs.tools.reader.edn/read doesn't depend on dynamic Vars, all configuration\n   is done by passing an opt map.\n\n   opts is a map that can include the following keys:\n   :eof - value to return on end-of-file. When not supplied, eof throws an exception.\n   :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\n              When not supplied, only the default-data-readers will be used.\n   :default - A function of two args, that will, if present and no reader is found for a tag,\n              be called with the tag and the value.","end-row":42,"filename":"clojure/edn.cljs","fixed-arities":[1,4,2],"name":"read","ns":"clojure.edn","row":20},{"arglist-strs":["[s]","[opts s]"],"doc":"Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   opts is a map as per cljs.tools.reader.edn/read","end-row":55,"filename":"clojure/edn.cljs","fixed-arities":[1,2],"name":"read-string","ns":"clojure.edn","row":44}]
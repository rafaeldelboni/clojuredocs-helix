[{"fixed-arities":[2],"end-row":43,"ns":"cljs.module-graph","name":"find-sources-for-module-entry","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[entry sources]"],"doc":"Given an entry as a symbol, find all matching inputs in sources. If the\n  symbol ends in a *, then the symbol will be treated as a wildcard. This\n  function returns a set and is not order preserving. If there are no matches\n  returns nil.","row":16},{"fixed-arities":[1],"end-row":56,"ns":"cljs.module-graph","name":"normalize","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Normalize compiler :modules. All symbols in a module :entries will be\n  converted into munged strings.","row":47},{"fixed-arities":[1],"end-row":63,"ns":"cljs.module-graph","name":"add-cljs-base","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Adds :cljs-base module to compiler :modules if not already present.","row":58},{"fixed-arities":[1],"end-row":74,"ns":"cljs.module-graph","name":"add-cljs-base-dep","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Adds :cljs-base to any module in compiler :modules with an empty :depends-on.","row":65},{"fixed-arities":[2],"end-row":86,"ns":"cljs.module-graph","name":"depth-of","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[module-name modules]"],"doc":"Compute the depth of module-name based on dependency information in\n   compiler :modules.","row":76},{"fixed-arities":[1],"end-row":95,"ns":"cljs.module-graph","name":"annotate-depths","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Annotate all modules in compiler :modules with depth information.","row":88},{"arglist-strs":["[input]"],"end-row":100,"filename":"cljs/module_graph.cljc","fixed-arities":[1],"lang":"clj","name":"normalize-input","ns":"cljs.module-graph","row":97},{"fixed-arities":[1],"end-row":116,"ns":"cljs.module-graph","name":"index-inputs","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[inputs]"],"doc":"Index compiler inputs by :provides. If an input has multiple entries\n  in :provides will result in multiple entries in the map. The keys will be munged\n  strings not symbols.","row":102},{"arglist-strs":["[indexed path seen validated]"],"end-row":132,"filename":"cljs/module_graph.cljc","fixed-arities":[4],"lang":"clj","name":"validate-inputs*","ns":"cljs.module-graph","row":118},{"fixed-arities":[1,3],"end-row":145,"ns":"cljs.module-graph","name":"validate-inputs","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[inputs]","[inputs path seen]"],"doc":"Throws on the presence of circular dependencies","row":134},{"fixed-arities":[3],"end-row":157,"ns":"cljs.module-graph","name":"deps-for","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[x graph deps-key]"],"doc":"Return all dependencies for x in a graph using deps-key.","row":147},{"fixed-arities":[2],"end-row":162,"ns":"cljs.module-graph","name":"deps-for-entry","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[entry indexed-inputs]"],"doc":"Return all dependencies for an entry using a compiler inputs index.","row":159},{"fixed-arities":[2],"end-row":167,"ns":"cljs.module-graph","name":"deps-for-module","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[module modules]"],"doc":"Return all dependencies of a module using compiler :modules.","row":164},{"fixed-arities":[2],"end-row":178,"ns":"cljs.module-graph","name":"deepest-common-parent","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules all-modules]"],"doc":"Given a set of modules and a compiler :modules graph, compute the deepest\n  common parent module.","row":169},{"fixed-arities":[2],"end-row":186,"ns":"cljs.module-graph","name":"canonical-name","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[entry indexed-inputs]"],"doc":"Given an entry use indexed-inputs to return the canonical name. Throws if\n   entry cannot be found.","row":180},{"fixed-arities":[2],"end-row":204,"ns":"cljs.module-graph","name":"validate-modules","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules indexed-inputs]"],"doc":"Check that a compiler :modules map does not contain user supplied duplicates.\n   Throws if modules fails validation.","row":188},{"fixed-arities":[2],"end-row":248,"ns":"cljs.module-graph","name":"inputs->assigned-modules","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[inputs modules]"],"doc":"Given compiler inputs assign each to a single module. This is done by first\n  starting with :entries. Dependencies for every entry in a module are also added\n  to that module. Inputs may of course be assigned to several modules initially\n  but we must eventually choose one. User supplied module :entries are respected\n  but all other input assignments are computed automatically via\n  deepest-common-parent. This function returns a map assigning all inputs (indexed\n  by munged name) to a single module. Any orphan inputs will be assigned to\n  :cljs-base.","row":206},{"fixed-arities":[2],"end-row":272,"ns":"cljs.module-graph","name":"expand-modules","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules inputs]"],"doc":"Given compiler :modules and a dependency sorted list of compiler inputs return\n   a complete :modules map where all depended upon inputs are assigned.","row":250},{"fixed-arities":[2],"end-row":294,"ns":"cljs.module-graph","name":"topo-sort","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[graph edges-key]"],"doc":"Topologically sort a graph using the given edges-key.","row":282},{"arglist-strs":["[modules-with-base]"],"end-row":298,"filename":"cljs/module_graph.cljc","fixed-arities":[1],"lang":"clj","name":"sort-modules","ns":"cljs.module-graph","row":296},{"end-row":313,"filename":"cljs/module_graph.cljc","lang":"clj","name":"ms","ns":"cljs.module-graph","row":301},{"arglist-strs":["[f0 f1]"],"end-row":319,"filename":"cljs/module_graph.cljc","fixed-arities":[2],"lang":"clj","name":"parent?","ns":"cljs.module-graph","row":316},{"arglist-strs":["[{:keys [lib-path] :as ijs} {:keys [output-dir] :as opts}]"],"end-row":331,"filename":"cljs/module_graph.cljc","fixed-arities":[2],"lang":"clj","name":"maybe-add-out-file","ns":"cljs.module-graph","row":325},{"fixed-arities":[3],"end-row":380,"ns":"cljs.module-graph","name":"modules->module-uris","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules inputs {:keys [optimizations asset-path output-dir] :as opts}]"],"doc":"Given a :modules map, a dependency sorted list of compiler inputs, and\n   compiler options return a Closure module uris map. This map will include\n   all inputs by leveraging expand-modules.","row":333},{"fixed-arities":[1],"end-row":390,"ns":"cljs.module-graph","name":"modules->module-infos","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Given a :modules map return a Closure module info map which maps modules\n   to depended upon modules.","row":382},{"fixed-arities":[2],"end-row":402,"ns":"cljs.module-graph","name":"module-for","lang":"clj","filename":"cljs/module_graph.cljc","arglist-strs":["[entry modules]"],"doc":"Given an entry find the module it belongs to.","row":392},{"fixed-arities":[2],"end-row":43,"ns":"cljs.module-graph","name":"find-sources-for-module-entry","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[entry sources]"],"doc":"Given an entry as a symbol, find all matching inputs in sources. If the\n  symbol ends in a *, then the symbol will be treated as a wildcard. This\n  function returns a set and is not order preserving. If there are no matches\n  returns nil.","row":16},{"fixed-arities":[1],"end-row":56,"ns":"cljs.module-graph","name":"normalize","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Normalize compiler :modules. All symbols in a module :entries will be\n  converted into munged strings.","row":47},{"fixed-arities":[1],"end-row":63,"ns":"cljs.module-graph","name":"add-cljs-base","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Adds :cljs-base module to compiler :modules if not already present.","row":58},{"fixed-arities":[1],"end-row":74,"ns":"cljs.module-graph","name":"add-cljs-base-dep","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Adds :cljs-base to any module in compiler :modules with an empty :depends-on.","row":65},{"fixed-arities":[2],"end-row":86,"ns":"cljs.module-graph","name":"depth-of","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[module-name modules]"],"doc":"Compute the depth of module-name based on dependency information in\n   compiler :modules.","row":76},{"fixed-arities":[1],"end-row":95,"ns":"cljs.module-graph","name":"annotate-depths","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Annotate all modules in compiler :modules with depth information.","row":88},{"arglist-strs":["[input]"],"end-row":100,"filename":"cljs/module_graph.cljc","fixed-arities":[1],"lang":"cljs","name":"normalize-input","ns":"cljs.module-graph","row":97},{"fixed-arities":[1],"end-row":116,"ns":"cljs.module-graph","name":"index-inputs","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[inputs]"],"doc":"Index compiler inputs by :provides. If an input has multiple entries\n  in :provides will result in multiple entries in the map. The keys will be munged\n  strings not symbols.","row":102},{"arglist-strs":["[indexed path seen validated]"],"end-row":132,"filename":"cljs/module_graph.cljc","fixed-arities":[4],"lang":"cljs","name":"validate-inputs*","ns":"cljs.module-graph","row":118},{"fixed-arities":[1,3],"end-row":145,"ns":"cljs.module-graph","name":"validate-inputs","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[inputs]","[inputs path seen]"],"doc":"Throws on the presence of circular dependencies","row":134},{"fixed-arities":[3],"end-row":157,"ns":"cljs.module-graph","name":"deps-for","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[x graph deps-key]"],"doc":"Return all dependencies for x in a graph using deps-key.","row":147},{"fixed-arities":[2],"end-row":162,"ns":"cljs.module-graph","name":"deps-for-entry","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[entry indexed-inputs]"],"doc":"Return all dependencies for an entry using a compiler inputs index.","row":159},{"fixed-arities":[2],"end-row":167,"ns":"cljs.module-graph","name":"deps-for-module","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[module modules]"],"doc":"Return all dependencies of a module using compiler :modules.","row":164},{"fixed-arities":[2],"end-row":178,"ns":"cljs.module-graph","name":"deepest-common-parent","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules all-modules]"],"doc":"Given a set of modules and a compiler :modules graph, compute the deepest\n  common parent module.","row":169},{"fixed-arities":[2],"end-row":186,"ns":"cljs.module-graph","name":"canonical-name","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[entry indexed-inputs]"],"doc":"Given an entry use indexed-inputs to return the canonical name. Throws if\n   entry cannot be found.","row":180},{"fixed-arities":[2],"end-row":204,"ns":"cljs.module-graph","name":"validate-modules","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules indexed-inputs]"],"doc":"Check that a compiler :modules map does not contain user supplied duplicates.\n   Throws if modules fails validation.","row":188},{"fixed-arities":[2],"end-row":248,"ns":"cljs.module-graph","name":"inputs->assigned-modules","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[inputs modules]"],"doc":"Given compiler inputs assign each to a single module. This is done by first\n  starting with :entries. Dependencies for every entry in a module are also added\n  to that module. Inputs may of course be assigned to several modules initially\n  but we must eventually choose one. User supplied module :entries are respected\n  but all other input assignments are computed automatically via\n  deepest-common-parent. This function returns a map assigning all inputs (indexed\n  by munged name) to a single module. Any orphan inputs will be assigned to\n  :cljs-base.","row":206},{"fixed-arities":[2],"end-row":272,"ns":"cljs.module-graph","name":"expand-modules","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules inputs]"],"doc":"Given compiler :modules and a dependency sorted list of compiler inputs return\n   a complete :modules map where all depended upon inputs are assigned.","row":250},{"fixed-arities":[2],"end-row":294,"ns":"cljs.module-graph","name":"topo-sort","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[graph edges-key]"],"doc":"Topologically sort a graph using the given edges-key.","row":282},{"arglist-strs":["[modules-with-base]"],"end-row":298,"filename":"cljs/module_graph.cljc","fixed-arities":[1],"lang":"cljs","name":"sort-modules","ns":"cljs.module-graph","row":296},{"end-row":313,"filename":"cljs/module_graph.cljc","lang":"cljs","name":"ms","ns":"cljs.module-graph","row":301},{"arglist-strs":["[f0 f1]"],"end-row":319,"filename":"cljs/module_graph.cljc","fixed-arities":[2],"lang":"cljs","name":"parent?","ns":"cljs.module-graph","row":316},{"arglist-strs":["[{:keys [lib-path] :as ijs} {:keys [output-dir] :as opts}]"],"end-row":331,"filename":"cljs/module_graph.cljc","fixed-arities":[2],"lang":"cljs","name":"maybe-add-out-file","ns":"cljs.module-graph","row":325},{"fixed-arities":[3],"end-row":380,"ns":"cljs.module-graph","name":"modules->module-uris","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules inputs {:keys [optimizations asset-path output-dir] :as opts}]"],"doc":"Given a :modules map, a dependency sorted list of compiler inputs, and\n   compiler options return a Closure module uris map. This map will include\n   all inputs by leveraging expand-modules.","row":333},{"fixed-arities":[1],"end-row":390,"ns":"cljs.module-graph","name":"modules->module-infos","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[modules]"],"doc":"Given a :modules map return a Closure module info map which maps modules\n   to depended upon modules.","row":382},{"fixed-arities":[2],"end-row":402,"ns":"cljs.module-graph","name":"module-for","lang":"cljs","filename":"cljs/module_graph.cljc","arglist-strs":["[entry modules]"],"doc":"Given an entry find the module it belongs to.","row":392}]
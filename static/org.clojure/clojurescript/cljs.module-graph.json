[{"fixed-arities":[2],"end-row":162,"meta":{},"name-end-col":21,"index":0,"name-end-row":159,"name-row":159,"ns":"cljs.module-graph","name":"deps-for-entry","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L159","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":74,"arglist-strs":["[entry indexed-inputs]"],"doc":"Return all dependencies for an entry using a compiler inputs index.","row":159},{"fixed-arities":[1],"end-row":56,"meta":{},"name-end-col":16,"index":0,"name-end-row":47,"name-row":47,"ns":"cljs.module-graph","name":"normalize","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L47","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":17,"arglist-strs":["[modules]"],"doc":"Normalize compiler :modules. All symbols in a module :entries will be\n  converted into munged strings.","row":47},{"fixed-arities":[2],"end-row":178,"meta":{},"name-end-col":28,"index":0,"name-end-row":169,"name-row":169,"ns":"cljs.module-graph","name":"deepest-common-parent","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L169","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":24,"arglist-strs":["[modules all-modules]"],"doc":"Given a set of modules and a compiler :modules graph, compute the deepest\n  common parent module.","row":169},{"fixed-arities":[1],"end-row":100,"meta":{},"name-end-col":22,"index":0,"name-end-row":97,"name-row":97,"ns":"cljs.module-graph","name":"normalize-input","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L97","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":66,"arglist-strs":["[input]"],"row":97},{"fixed-arities":[2],"end-row":331,"meta":{},"name-end-col":25,"index":0,"name-end-row":325,"name-row":325,"ns":"cljs.module-graph","name":"maybe-add-out-file","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L325","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":13,"arglist-strs":["[{:keys [lib-path] :as ijs} {:keys [output-dir] :as opts}]"],"row":325},{"fixed-arities":[2],"end-row":248,"meta":{},"name-end-col":31,"index":0,"name-end-row":206,"name-row":206,"ns":"cljs.module-graph","name":"inputs->assigned-modules","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L206","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":38,"arglist-strs":["[inputs modules]"],"doc":"Given compiler inputs assign each to a single module. This is done by first\n  starting with :entries. Dependencies for every entry in a module are also added\n  to that module. Inputs may of course be assigned to several modules initially\n  but we must eventually choose one. User supplied module :entries are respected\n  but all other input assignments are computed automatically via\n  deepest-common-parent. This function returns a map assigning all inputs (indexed\n  by munged name) to a single module. Any orphan inputs will be assigned to\n  :cljs-base.","row":206},{"fixed-arities":[2],"end-row":186,"meta":{},"name-end-col":21,"index":0,"name-end-row":180,"name-row":180,"ns":"cljs.module-graph","name":"canonical-name","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L180","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":92,"arglist-strs":["[entry indexed-inputs]"],"doc":"Given an entry use indexed-inputs to return the canonical name. Throws if\n   entry cannot be found.","row":180},{"fixed-arities":[1],"end-row":74,"meta":{},"name-end-col":24,"index":0,"name-end-row":65,"name-row":65,"ns":"cljs.module-graph","name":"add-cljs-base-dep","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L65","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":17,"arglist-strs":["[modules]"],"doc":"Adds :cljs-base to any module in compiler :modules with an empty :depends-on.","row":65},{"fixed-arities":[2],"end-row":319,"meta":{},"name-end-col":14,"index":0,"name-end-row":316,"name-row":316,"ns":"cljs.module-graph","name":"parent?","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L316","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":38,"arglist-strs":["[f0 f1]"],"row":316},{"fixed-arities":[1],"end-row":116,"meta":{},"name-end-col":19,"index":0,"name-end-row":102,"name-row":102,"ns":"cljs.module-graph","name":"index-inputs","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L102","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":16,"arglist-strs":["[inputs]"],"doc":"Index compiler inputs by :provides. If an input has multiple entries\n  in :provides will result in multiple entries in the map. The keys will be munged\n  strings not symbols.","row":102},{"fixed-arities":[2],"end-row":272,"meta":{},"name-end-col":21,"index":0,"name-end-row":250,"name-row":250,"ns":"cljs.module-graph","name":"expand-modules","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L250","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":15,"arglist-strs":["[modules inputs]"],"doc":"Given compiler :modules and a dependency sorted list of compiler inputs return\n   a complete :modules map where all depended upon inputs are assigned.","row":250},{"fixed-arities":[4],"end-row":132,"meta":{},"name-end-col":23,"index":0,"name-end-row":118,"name-row":118,"ns":"cljs.module-graph","name":"validate-inputs*","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L118","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":32,"arglist-strs":["[indexed path seen validated]"],"row":118},{"fixed-arities":[1],"end-row":298,"meta":{},"name-end-col":19,"index":0,"name-end-row":296,"name-row":296,"ns":"cljs.module-graph","name":"sort-modules","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L296","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":48,"arglist-strs":["[modules-with-base]"],"row":296},{"fixed-arities":[1],"end-row":95,"meta":{},"name-end-col":22,"index":0,"name-end-row":88,"name-row":88,"ns":"cljs.module-graph","name":"annotate-depths","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L88","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":17,"arglist-strs":["[modules]"],"doc":"Annotate all modules in compiler :modules with depth information.","row":88},{"fixed-arities":[3],"end-row":380,"meta":{},"name-end-col":27,"index":0,"name-end-row":333,"name-row":333,"ns":"cljs.module-graph","name":"modules->module-uris","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L333","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":23,"arglist-strs":["[modules inputs {:keys [optimizations asset-path output-dir] :as opts}]"],"doc":"Given a :modules map, a dependency sorted list of compiler inputs, and\n   compiler options return a Closure module uris map. This map will include\n   all inputs by leveraging expand-modules.","row":333},{"fixed-arities":[2],"end-row":402,"meta":{},"name-end-col":17,"index":0,"name-end-row":392,"name-row":392,"ns":"cljs.module-graph","name":"module-for","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L392","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":15,"arglist-strs":["[entry modules]"],"doc":"Given an entry find the module it belongs to.","row":392},{"fixed-arities":[2],"end-row":294,"meta":{},"name-end-col":16,"index":0,"name-end-row":282,"name-row":282,"ns":"cljs.module-graph","name":"topo-sort","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L282","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":56,"arglist-strs":["[graph edges-key]"],"doc":"Topologically sort a graph using the given edges-key.","row":282},{"fixed-arities":[1,3],"end-row":145,"meta":{},"name-end-col":22,"index":0,"name-end-row":134,"name-row":134,"ns":"cljs.module-graph","name":"validate-inputs","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L134","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":43,"arglist-strs":["[inputs]","[inputs path seen]"],"doc":"Throws on the presence of circular dependencies","row":134},{"fixed-arities":[2],"end-row":167,"meta":{},"name-end-col":22,"index":0,"name-end-row":164,"name-row":164,"ns":"cljs.module-graph","name":"deps-for-module","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L164","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":41,"arglist-strs":["[module modules]"],"doc":"Return all dependencies of a module using compiler :modules.","row":164},{"fixed-arities":[2],"end-row":43,"meta":{},"name-end-col":36,"index":0,"name-end-row":16,"name-row":16,"ns":"cljs.module-graph","name":"find-sources-for-module-entry","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L16","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":21,"arglist-strs":["[entry sources]"],"doc":"Given an entry as a symbol, find all matching inputs in sources. If the\n  symbol ends in a *, then the symbol will be treated as a wildcard. This\n  function returns a set and is not order preserving. If there are no matches\n  returns nil.","row":16},{"fixed-arities":[3],"end-row":157,"meta":{},"name-end-col":25,"index":0,"name-end-row":147,"name-row":147,"ns":"cljs.module-graph","name":"deps-for","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L147","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":17,"end-col":48,"arglist-strs":["[x graph deps-key]"],"doc":"Return all dependencies for x in a graph using deps-key.","row":147},{"end-row":313,"meta":{},"name-end-col":10,"index":0,"name-end-row":301,"name-row":301,"ns":"cljs.module-graph","name":"ms","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L301","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":3,"name-col":8,"end-col":43,"row":301},{"fixed-arities":[1],"end-row":63,"meta":{},"name-end-col":20,"index":0,"name-end-row":58,"name-row":58,"ns":"cljs.module-graph","name":"add-cljs-base","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L58","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":28,"arglist-strs":["[modules]"],"doc":"Adds :cljs-base module to compiler :modules if not already present.","row":58},{"fixed-arities":[1],"end-row":390,"meta":{},"name-end-col":28,"index":0,"name-end-row":382,"name-row":382,"ns":"cljs.module-graph","name":"modules->module-infos","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L382","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":20,"arglist-strs":["[modules]"],"doc":"Given a :modules map return a Closure module info map which maps modules\n   to depended upon modules.","row":382},{"fixed-arities":[2],"end-row":86,"meta":{},"name-end-col":15,"index":0,"name-end-row":76,"name-row":76,"ns":"cljs.module-graph","name":"depth-of","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L76","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":63,"arglist-strs":["[module-name modules]"],"doc":"Compute the depth of module-name based on dependency information in\n   compiler :modules.","row":76},{"fixed-arities":[2],"end-row":204,"meta":{},"name-end-col":23,"index":0,"name-end-row":188,"name-row":188,"ns":"cljs.module-graph","name":"validate-modules","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/module_graph.cljc#L188","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/module_graph.cljc","col":1,"name-col":7,"end-col":58,"arglist-strs":["[modules indexed-inputs]"],"doc":"Check that a compiler :modules map does not contain user supplied duplicates.\n   Throws if modules fails validation.","row":188}]
[{"doc":"Constant for Euler's number e, the base for natural logarithms.\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/E","end-row":10,"filename":"cljs/math.cljs","name":"E","ns":"cljs.math","row":5},{"doc":"Constant for pi, the ratio of the circumference of a circle to its diameter.\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/PI","end-row":17,"filename":"cljs/math.cljs","name":"PI","ns":"cljs.math","row":12},{"doc":"Constant used to convert an angular value in degrees to the equivalent in radians","end-row":23,"filename":"cljs/math.cljs","name":"DEGREES-TO-RADIANS","ns":"cljs.math","private":true,"row":19},{"doc":"Constant used to convert an angular value in radians to the equivalent in degrees","end-row":29,"filename":"cljs/math.cljs","name":"RADIANS-TO-DEGREES","ns":"cljs.math","private":true,"row":25},{"end-row":31,"filename":"cljs/math.cljs","name":"TWO-TO-THE-52","ns":"cljs.math","private":true,"row":31},{"end-row":33,"filename":"cljs/math.cljs","name":"SIGNIFICAND-WIDTH32","ns":"cljs.math","private":true,"row":33},{"end-row":35,"filename":"cljs/math.cljs","name":"EXP-BIAS","ns":"cljs.math","private":true,"row":35},{"end-row":37,"filename":"cljs/math.cljs","name":"EXP-BITMASK32","ns":"cljs.math","private":true,"row":37},{"end-row":39,"filename":"cljs/math.cljs","name":"EXP-MAX","ns":"cljs.math","private":true,"row":39},{"end-row":41,"filename":"cljs/math.cljs","name":"EXP-MIN","ns":"cljs.math","private":true,"row":41},{"fixed-arities":[0],"end-row":54,"private":true,"ns":"cljs.math","name":"get-little-endian","filename":"cljs/math.cljs","arglist-strs":["[]"],"doc":"Tests the platform for endianness. Returns true when little-endian, false otherwise.","row":47},{"end-row":56,"filename":"cljs/math.cljs","name":"little-endian?","ns":"cljs.math","private":true,"row":56},{"doc":"offset of hi integers in 64-bit values","end-row":59,"filename":"cljs/math.cljs","name":"HI","ns":"cljs.math","private":true,"row":59},{"doc":"offset of hi integers in 64-bit values","end-row":61,"filename":"cljs/math.cljs","name":"LO","ns":"cljs.math","private":true,"row":61},{"end-row":63,"filename":"cljs/math.cljs","name":"INT32-MASK","ns":"cljs.math","private":true,"row":63},{"end-row":65,"filename":"cljs/math.cljs","name":"INT32-NON-SIGN-BIT","ns":"cljs.math","private":true,"row":65},{"end-row":67,"filename":"cljs/math.cljs","name":"INT32-NON-SIGN-BITS","ns":"cljs.math","private":true,"row":67},{"fixed-arities":[2],"end-row":78,"private":true,"ns":"cljs.math","name":"u<","filename":"cljs/math.cljs","arglist-strs":["[a b]"],"doc":"unsigned less-than comparator for 32-bit values","row":69},{"arglist-strs":["[a]"],"doc":"Returns the sine of an angle.\n  If a is ##NaN, ##-Inf, ##Inf => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sin","end-row":86,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"sin","ns":"cljs.math","row":80},{"arglist-strs":["[a]"],"doc":"Returns the cosine of an angle.\n  If a is ##NaN, ##-Inf, ##Inf => ##NaN\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cos","end-row":93,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"cos","ns":"cljs.math","row":88},{"arglist-strs":["[a]"],"doc":"Returns the tangent of an angle.\n  If a is ##NaN, ##-Inf, ##Inf => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tan","end-row":101,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"tan","ns":"cljs.math","row":95},{"arglist-strs":["[a]"],"doc":"Returns the arc sine of an angle, in the range -pi/2 to pi/2.\n  If a is ##NaN or |a|>1 => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/asin","end-row":109,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"asin","ns":"cljs.math","row":103},{"arglist-strs":["[a]"],"doc":"Returns the arc cosine of a, in the range 0.0 to pi.\n  If a is ##NaN or |a|>1 => ##NaN\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/acos","end-row":116,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"acos","ns":"cljs.math","row":111},{"arglist-strs":["[a]"],"doc":"Returns the arc tangent of a, in the range of -pi/2 to pi/2.\n  If a is ##NaN => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan","end-row":124,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"atan","ns":"cljs.math","row":118},{"arglist-strs":["[deg]"],"doc":"Converts an angle in degrees to an approximate equivalent angle in radians.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#toRadians-double-","end-row":131,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"to-radians","ns":"cljs.math","row":126},{"arglist-strs":["[r]"],"doc":"Converts an angle in radians to an approximate equivalent angle in degrees.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#toDegrees-double-","end-row":138,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"to-degrees","ns":"cljs.math","row":133},{"arglist-strs":["[a]"],"doc":"Returns Euler's number e raised to the power of a.\n  If a is ##NaN => ##NaN\n  If a is ##Inf => ##Inf\n  If a is ##-Inf => +0.0\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/exp","end-row":147,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"exp","ns":"cljs.math","row":140},{"arglist-strs":["[a]"],"doc":"Returns the natural logarithm (base e) of a.\n  If a is ##NaN or negative => ##NaN\n  If a is ##Inf => ##Inf\n  If a is zero => ##-Inf\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log","end-row":156,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"log","ns":"cljs.math","row":149},{"arglist-strs":["[a]"],"doc":"Returns the logarithm (base 10) of a.\n  If a is ##NaN or negative => ##NaN\n  If a is ##Inf => ##Inf\n  If a is zero => ##-Inf\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log10","end-row":165,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"log10","ns":"cljs.math","row":158},{"arglist-strs":["[a]"],"doc":"Returns the positive square root of a.\n  If a is ##NaN or negative => ##NaN\n  If a is ##Inf => ##Inf\n  If a is zero => a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt","end-row":174,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"sqrt","ns":"cljs.math","row":167},{"arglist-strs":["[a]"],"doc":"Returns the cube root of a.\n  If a is ##NaN => ##NaN\n  If a is ##Inf or ##-Inf => a\n  If a is zero => zero with sign matching a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt","end-row":183,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"cbrt","ns":"cljs.math","row":176},{"fixed-arities":[1],"end-row":203,"private":true,"ns":"cljs.math","name":"fabs","filename":"cljs/math.cljs","arglist-strs":["[x]"],"doc":"Internal function to convert doubles to absolute values.\n  This duplicates the C implementations in Java, in case there is are corner-case differences.","row":185},{"end-row":218,"filename":"cljs/math.cljs","name":"Zero","ns":"cljs.math","private":true,"row":205},{"end-row":220,"filename":"cljs/math.cljs","name":"xpos","ns":"cljs.math","private":true,"row":220},{"end-row":221,"filename":"cljs/math.cljs","name":"ypos","ns":"cljs.math","private":true,"row":221},{"end-row":222,"filename":"cljs/math.cljs","name":"HI-x","ns":"cljs.math","private":true,"row":222},{"end-row":223,"filename":"cljs/math.cljs","name":"LO-x","ns":"cljs.math","private":true,"row":223},{"end-row":224,"filename":"cljs/math.cljs","name":"HI-y","ns":"cljs.math","private":true,"row":224},{"end-row":225,"filename":"cljs/math.cljs","name":"LO-y","ns":"cljs.math","private":true,"row":225},{"fixed-arities":[2],"end-row":239,"private":true,"ns":"cljs.math","name":"ilogb","filename":"cljs/math.cljs","arglist-strs":["[hx lx]"],"doc":"internal function for ilogb(x)","row":227},{"fixed-arities":[3],"end-row":250,"private":true,"ns":"cljs.math","name":"setup-hl","filename":"cljs/math.cljs","arglist-strs":["[i h l]"],"doc":"internal function to setup and align integer words","row":241},{"fixed-arities":[2],"end-row":333,"private":true,"ns":"cljs.math","name":"IEEE-fmod","filename":"cljs/math.cljs","arglist-strs":["[x y]"],"doc":"Return x mod y in exact arithmetic. Method: shift and subtract.\n  Reimplements __ieee754_fmod from the JDK.\n  Ported from: https://github.com/openjdk/jdk/blob/master/src/java.base/share/native/libfdlibm/e_fmod.c\n  bit-shift-left and bit-shift-right convert numbers to signed 32-bit\n  Fortunately the values that are shifted are expected to be 32 bit signed.","row":252},{"arglist-strs":["[dividend divisor]"],"doc":"Returns the remainder per IEEE 754 such that\n    remainder = dividend - divisor * n\n   where n is the integer closest to the exact value of dividend / divisor.\n   If two integers are equally close, then n is the even one.\n   If the remainder is zero, sign will match dividend.\n   If dividend or divisor is ##NaN, or dividend is ##Inf or ##-Inf, or divisor is zero => ##NaN\n   If dividend is finite and divisor is infinite => dividend\n\n   Method: based on fmod return x-[x/p]chopped*p exactlp.\n   Ported from: https://github.com/openjdk/jdk/blob/master/src/java.base/share/native/libfdlibm/e_remainder.c\n   See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#IEEEremainder-double-double-","end-row":411,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"IEEE-remainder","ns":"cljs.math","row":335},{"arglist-strs":["[a]"],"doc":"Returns the smallest double greater than or equal to a, and equal to a\n  mathematical integer.\n  If a is ##NaN or ##Inf or ##-Inf or already equal to an integer => a\n  Note that if a is `nil` then an exception will be thrown. This matches Clojure, rather than js/Math.ceil\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil","end-row":423,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"ceil","ns":"cljs.math","row":413},{"arglist-strs":["[a]"],"doc":"Returns the largest double less than or equal to a, and equal to a\n  mathematical integer.\n  If a is ##NaN or ##Inf or ##-Inf or already equal to an integer => a\n  If a is less than zero but greater than -1.0 => -0.0\n  Note that if a is `nil` then an exception will be thrown. This matches Clojure, rather than js/Math.floor\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor","end-row":436,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"floor","ns":"cljs.math","row":425},{"arglist-strs":["[magnitude sign]"],"doc":"Returns a double with the magnitude of the first argument and the sign of\n  the second.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#copySign-double-double-","end-row":463,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"copy-sign","ns":"cljs.math","row":438},{"arglist-strs":["[a]"],"doc":"Returns the double closest to a and equal to a mathematical integer.\n  If two values are equally close, return the even one.\n  If a is ##NaN or ##Inf or ##-Inf or zero => a\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#rint-double-","end-row":476,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"rint","ns":"cljs.math","row":465},{"arglist-strs":["[y x]"],"doc":"Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).\n  Computes the phase theta by computing an arc tangent of y/x in the range of -pi to pi.\n  For more details on special cases, see:\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan","end-row":484,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"atan2","ns":"cljs.math","row":478},{"arglist-strs":["[a b]"],"doc":"Returns the value of a raised to the power of b.\n  For more details on special cases, see:\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow","end-row":491,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"pow","ns":"cljs.math","row":486},{"arglist-strs":["[a]"],"doc":"Returns the closest long to a. If equally close to two values, return the one\n  closer to ##Inf.\n  If a is ##NaN => 0\n  If a is ##-Inf => js/Number.MIN_SAFE_INTEGER\n  If a is ##Inf => js/Number.MAX_SAFE_INTEGER\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round","end-row":506,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"round","ns":"cljs.math","row":493},{"arglist-strs":["[]"],"doc":"Returns a positive double between 0.0 and 1.0, chosen pseudorandomly with\n  approximately random distribution. Not cryptographically secure. The seed is chosen internally\n  and cannot be selected.\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random","end-row":514,"filename":"cljs/math.cljs","fixed-arities":[0],"name":"random","ns":"cljs.math","row":508},{"arglist-strs":["[x y]"],"doc":"Returns the sum of x and y, throws an exception on overflow. ","end-row":523,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"add-exact","ns":"cljs.math","row":516},{"arglist-strs":["[x y]"],"doc":"Returns the difference of x and y, throws ArithmeticException on overflow. ","end-row":532,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"subtract-exact","ns":"cljs.math","row":525},{"arglist-strs":["[x y]"],"doc":"Returns the product of x and y, throws ArithmeticException on overflow. ","end-row":541,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"multiply-exact","ns":"cljs.math","row":534},{"arglist-strs":["[a]"],"doc":"Returns a incremented by 1, throws ArithmeticException on overflow.","end-row":549,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"increment-exact","ns":"cljs.math","row":543},{"arglist-strs":["[a]"],"doc":"Returns a decremented by 1, throws ArithmeticException on overflow. ","end-row":557,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"decrement-exact","ns":"cljs.math","row":551},{"arglist-strs":["[a]"],"doc":"Returns the negation of a, throws ArithmeticException on overflow. ","end-row":565,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"negate-exact","ns":"cljs.math","row":559},{"arglist-strs":["[a b]"],"end-row":569,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"xor","ns":"cljs.math","private":true,"row":567},{"arglist-strs":["[x y]"],"doc":"Integer division that rounds to negative infinity (as opposed to zero).\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#floorDiv-long-long-","end-row":582,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"floor-div","ns":"cljs.math","row":571},{"arglist-strs":["[x y]"],"doc":"Integer modulus x - (floorDiv(x, y) * y). Sign matches y and is in the\n  range -|y| < r < |y|.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#floorMod-long-long-","end-row":597,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"floor-mod","ns":"cljs.math","row":584},{"arglist-strs":["[d]"],"doc":"Returns the exponent of d.\n  If d is ##NaN, ##Inf, ##-Inf => max_Float64_exponent + 1\n  If d is zero or subnormal => min_Float64_exponent - 1\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#getExponent-double-","end-row":614,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"get-exponent","ns":"cljs.math","row":599},{"fixed-arities":[2],"end-row":626,"private":true,"ns":"cljs.math","name":"hi-lo->double","filename":"cljs/math.cljs","arglist-strs":["[h l]"],"doc":"Converts a pair of 32 bit integers into an IEEE-754 64 bit floating point number.\n  h is the high 32 bits, l is the low 32 bits.","row":616},{"fixed-arities":[1],"end-row":634,"private":true,"ns":"cljs.math","name":"power-of-two","filename":"cljs/math.cljs","arglist-strs":["[n]"],"doc":"returns a floating point power of two in the normal range","row":628},{"arglist-strs":["[d]"],"doc":"Returns the size of an ulp (unit in last place) for d.\n  If d is ##NaN => ##NaN\n  If d is ##Inf or ##-Inf => ##Inf\n  If d is zero => Number/MIN_VALUE\n  If d is +/- Number/MAX_VALUE => 2^971\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#ulp-double-","end-row":659,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"ulp","ns":"cljs.math","row":636},{"arglist-strs":["[d]"],"doc":"Returns the signum function of d - zero for zero, 1.0 if >0, -1.0 if <0.\n  If d is ##NaN => ##NaN\n  If d is ##Inf or ##-Inf => sign of d\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#signum-double-","end-row":670,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"signum","ns":"cljs.math","row":661},{"arglist-strs":["[x]"],"doc":"Returns the hyperbolic sine of x, (e^x - e^-x)/2.\n  If x is ##NaN => ##NaN\n  If x is ##Inf or ##-Inf or zero => x\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh","end-row":678,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"sinh","ns":"cljs.math","row":672},{"arglist-strs":["[x]"],"doc":"Returns the hyperbolic cosine of x, (e^x + e^-x)/2.\n  If x is ##NaN => ##NaN\n  If x is ##Inf or ##-Inf => ##Inf\n  If x is zero => 1.0\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh","end-row":687,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"cosh","ns":"cljs.math","row":680},{"arglist-strs":["[x]"],"doc":"Returns the hyperbolic tangent of x, sinh(x)/cosh(x).\n  If x is ##NaN => ##NaN\n  If x is zero => zero, with same sign\n  If x is ##Inf => +1.0\n  If x is ##-Inf => -1.0\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh","end-row":697,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"tanh","ns":"cljs.math","row":689},{"arglist-strs":["[x y]"],"doc":"Returns sqrt(x^2 + y^2) without intermediate underflow or overflow.\n  If x or y is ##Inf or ##-Inf => ##Inf\n  If x or y is ##NaN and neither is ##Inf or ##-Inf => ##NaN\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/hypot","end-row":705,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"hypot","ns":"cljs.math","row":699},{"arglist-strs":["[x]"],"doc":"Returns e^x - 1. Near 0, expm1(x)+1 is more accurate to e^x than exp(x).\n  If x is ##NaN => ##NaN\n  If x is ##Inf => #Inf\n  If x is ##-Inf => -1.0\n  If x is zero => x\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/expm1","end-row":715,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"expm1","ns":"cljs.math","row":707},{"arglist-strs":["[x]"],"doc":"Returns ln(1+x). For small values of x, log1p(x) is more accurate than\n  log(1.0+x).\n  If x is ##NaN or ##-Inf or < -1 => ##NaN\n  If x is -1 => ##-Inf\n  If x is ##Inf => ##Inf\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p","end-row":725,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"log1p","ns":"cljs.math","row":717},{"fixed-arities":[4],"end-row":740,"private":true,"ns":"cljs.math","name":"add64","filename":"cljs/math.cljs","arglist-strs":["[hx lx hy ly]"],"doc":"Takes the high and low words for 2 different 64 bit integers, and adds them.\n  This handles overflow from the low-order words into the high order words.","row":727},{"arglist-strs":["[start direction]"],"doc":"Returns the adjacent floating point number to start in the direction of\n  the second argument. If the arguments are equal, the second is returned.\n  If either arg is #NaN => #NaN\n  If both arguments are signed zeros => direction\n  If start is +-Number/MIN_VALUE and direction would cause a smaller magnitude\n    => zero with sign matching start\n  If start is ##Inf or ##-Inf and direction would cause a smaller magnitude\n    => Number/MAX_VALUE with same sign as start\n  If start is equal to +=Number/MAX_VALUE and direction would cause a larger magnitude\n    => ##Inf or ##-Inf with sign matching start\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextAfter-double-double-","end-row":788,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"next-after","ns":"cljs.math","row":742},{"arglist-strs":["[d]"],"doc":"Returns the adjacent double of d in the direction of ##Inf.\n  If d is ##NaN => ##NaN\n  If d is ##Inf => ##Inf\n  If d is zero => Number/MIN_VALUE\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextUp-double-","end-row":814,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"next-up","ns":"cljs.math","row":790},{"arglist-strs":["[d]"],"doc":"Returns the adjacent double of d in the direction of ##-Inf.\n  If d is ##NaN => ##NaN\n  If d is ##Inf => Number/MAX_VALUE\n  If d is zero => -Number/MIN_VALUE\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextDown-double-","end-row":839,"filename":"cljs/math.cljs","fixed-arities":[1],"name":"next-down","ns":"cljs.math","row":816},{"end-row":841,"filename":"cljs/math.cljs","name":"MAX_SCALE","ns":"cljs.math","private":true,"row":841},{"end-row":843,"filename":"cljs/math.cljs","name":"two-to-the-double-scale-up","ns":"cljs.math","private":true,"row":843},{"end-row":845,"filename":"cljs/math.cljs","name":"two-to-the-double-scale-down","ns":"cljs.math","private":true,"row":845},{"arglist-strs":["[d scaleFactor]"],"doc":"Returns d * 2^scaleFactor, scaling by a factor of 2. If the exponent\n  is between min_Float64_exponent and max_Float64_exponent.\n  scaleFactor is an integer\n  If d is ##NaN => ##NaN\n  If d is ##Inf or ##-Inf => ##Inf or ##-Inf respectively\n  If d is zero => zero of same sign as d\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextDown-double-","end-row":869,"filename":"cljs/math.cljs","fixed-arities":[2],"name":"scalb","ns":"cljs.math","row":847}]
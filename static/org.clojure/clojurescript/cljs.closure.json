[{"end-row":58,"filename":"cljs/closure.clj","name":"GITLIBS-CACHE-DIR","ns":"cljs.closure","private":true,"row":52},{"fixed-arities":[0],"end-row":63,"private":true,"ns":"cljs.closure","name":"gitlibs-cache-dir","filename":"cljs/closure.clj","arglist-strs":["[]"],"doc":"Returns the gitlibs cache dir, a string.","row":60},{"fixed-arities":[1],"end-row":70,"private":true,"ns":"cljs.closure","name":"gitlibs-src?","filename":"cljs/closure.clj","arglist-strs":["[file]"],"doc":"Returns true if the file comes from the gitlibs cache.","row":65},{"end-row":72,"filename":"cljs/closure.clj","name":"name-chars","ns":"cljs.closure","row":72},{"arglist-strs":["[]"],"end-row":75,"filename":"cljs/closure.clj","fixed-arities":[0],"name":"random-char","ns":"cljs.closure","row":74},{"arglist-strs":["[length]"],"end-row":78,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"random-string","ns":"cljs.closure","row":77},{"fixed-arities":[3,2],"end-row":104,"private":true,"ns":"cljs.closure","name":"sym->var","filename":"cljs/closure.clj","arglist-strs":["[sym kw]","[sym kw ex-data]"],"doc":"Converts a namespaced symbol to a var, loading the requisite namespace if\n  needed. For use with a function defined under a keyword in opts. The kw and\n  ex-data arguments are used to form exceptions.","row":80},{"fixed-arities":[2],"end-row":111,"private":true,"ns":"cljs.closure","name":"opts-fn","filename":"cljs/closure.clj","arglist-strs":["[kw opts]"],"doc":"Extracts a function from opts, by default expecting a function value, but\n  converting from a namespaced symbol if needed.","row":106},{"end-row":116,"filename":"cljs/closure.clj","name":"js-source-file","ns":"cljs.closure","row":116},{"end-row":142,"filename":"cljs/closure.clj","name":"check-level","ns":"cljs.closure","row":139},{"end-row":197,"filename":"cljs/closure.clj","name":"warning-types","ns":"cljs.closure","row":144},{"doc":"Set of all known compiler options.","end-row":213,"filename":"cljs/closure.clj","name":"known-opts","ns":"cljs.closure","row":199},{"end-row":221,"filename":"cljs/closure.clj","name":"string->charset","ns":"cljs.closure","row":215},{"arglist-strs":["[charset]"],"end-row":234,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"to-charset","ns":"cljs.closure","row":223},{"end-row":239,"filename":"cljs/closure.clj","name":"lang-level","ns":"cljs.closure","row":236},{"arglist-strs":["[key]"],"end-row":242,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"expand-lang-key","ns":"cljs.closure","row":241},{"arglist-strs":["[key]"],"end-row":255,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"lang-key->lang-mode","ns":"cljs.closure","row":244},{"arglist-strs":["[opts compiler-options]"],"doc":"TODO: Add any other options that we would like to support.","end-row":323,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"set-options","ns":"cljs.closure","row":257},{"arglist-strs":["[opts]"],"doc":"Create a CompilerOptions object and set options from opts map.","end-row":361,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"make-options","ns":"cljs.closure","row":325},{"arglist-strs":["[{:keys [externs use-only-custom-externs target ups-externs infer-externs] :as opts}]"],"doc":"Externs are JavaScript files which contain empty definitions of\n  functions which will be provided by the environment. Any function in\n  an extern file will not be renamed during optimization.\n\n  Options may contain an :externs key with a list of file paths to\n  load. The :use-only-custom-externs flag may be used to indicate that\n  the default externs should be excluded.","end-row":402,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"load-externs","ns":"cljs.closure","row":363},{"arglist-strs":["[]"],"end-row":407,"filename":"cljs/closure.clj","fixed-arities":[0],"name":"make-closure-compiler","ns":"cljs.closure","row":404},{"arglist-strs":["[result]"],"end-row":418,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"report-failure","ns":"cljs.closure","row":409},{"end-row":427,"filename":"cljs/closure.clj","name":"ISourceMap","ns":"cljs.closure","row":425},{"arglist-strs":["[this]"],"doc":"Return the CLJS source url","end-row":426,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"-source-url","ns":"cljs.closure","row":426},{"arglist-strs":["[this]"],"doc":"Return the CLJS compiler generated JS source mapping","end-row":427,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"-source-map","ns":"cljs.closure","row":427},{"end-row":497,"filename":"cljs/closure.clj","name":"JavaScriptFile","ns":"cljs.closure","row":481},{"arglist-strs":["[foreign url source-url provides requires lines source-map]"],"end-row":497,"filename":"cljs/closure.clj","fixed-arities":[7],"name":"->JavaScriptFile","ns":"cljs.closure","row":481},{"arglist-strs":["[m]"],"end-row":497,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"map->JavaScriptFile","ns":"cljs.closure","row":481},{"arglist-strs":["[foreign url provides requires]","[foreign url source-url provides requires lines source-map]"],"end-row":504,"filename":"cljs/closure.clj","fixed-arities":[7,4],"name":"javascript-file","ns":"cljs.closure","row":499},{"arglist-strs":["[m]"],"end-row":531,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"map->javascript-file","ns":"cljs.closure","row":506},{"arglist-strs":["[f]"],"doc":"Read a JavaScript file returning a map of file information.","end-row":538,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"read-js","ns":"cljs.closure","row":533},{"end-row":545,"filename":"cljs/closure.clj","name":"Inputs","ns":"cljs.closure","row":544},{"arglist-strs":["[this]"],"doc":"Returns the file paths to the source inputs","end-row":545,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"-paths","ns":"cljs.closure","row":545},{"end-row":555,"filename":"cljs/closure.clj","name":"Compilable","ns":"cljs.closure","row":553},{"arglist-strs":["[this opts]"],"doc":"Returns one or more IJavaScripts.","end-row":554,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"-compile","ns":"cljs.closure","row":554},{"arglist-strs":["[this opts]"],"doc":"Returns one or more IJavascripts, without compiling them.","end-row":555,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"-find-sources","ns":"cljs.closure","row":555},{"arglist-strs":["[paths]"],"doc":"Takes a coll of inputs as strings or files and returns a\n  single Inputs and Compilable object.","end-row":571,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"compilable-input-paths","ns":"cljs.closure","row":557},{"arglist-strs":["[forms]","[forms opts]"],"doc":"Compile a sequence of forms to a JavaScript source string.","end-row":585,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"compile-form-seq","ns":"cljs.closure","row":573},{"arglist-strs":["[m]"],"doc":"Given a map with at least a :file key, return a map with\n   {:file .. :provides .. :requires ..}.\n\n   Compiled files are cached so they will only be read once.","end-row":600,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"compiled-file","ns":"cljs.closure","row":587},{"arglist-strs":["[compilable opts]"],"doc":"Given a Compilable, compile it and return an IJavaScript.","end-row":605,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile","ns":"cljs.closure","row":602},{"end-row":608,"filename":"cljs/closure.clj","name":"USER-HOME-WRITABLE","ns":"cljs.closure","private":true,"row":607},{"arglist-strs":["[opts]"],"end-row":614,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"aot-cache?","ns":"cljs.closure","private":true,"row":610},{"arglist-strs":["[cache-path cacheable source-file opts]"],"end-row":628,"filename":"cljs/closure.clj","fixed-arities":[4],"name":"copy-from-cache","ns":"cljs.closure","private":true,"row":616},{"arglist-strs":["[compilable opts]"],"doc":"Given a Compilable, find sources and return a sequence of IJavaScript.","end-row":633,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"find-sources","ns":"cljs.closure","row":630},{"arglist-strs":["[file {:keys [output-file] :as opts}]"],"doc":"Compile a single cljs file. If no output-file is specified, returns\n  a string of compiled JavaScript. With an output-file option, the\n  compiled JavaScript will written to this location and the function\n  returns a JavaScriptFile. In either case the return value satisfies\n  IJavaScript.","end-row":661,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile-file","ns":"cljs.closure","row":635},{"arglist-strs":["[src-dir opts]"],"doc":"Recursively compile all cljs files under the given source\n  directory. Return a list of JavaScriptFiles.","end-row":669,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile-dir","ns":"cljs.closure","row":663},{"arglist-strs":["[url]"],"doc":"Given the URL of a file within a jar, return the path of the file\n  from the root of the jar.","end-row":675,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"path-from-jarfile","ns":"cljs.closure","row":671},{"arglist-strs":["[url out-dir]","[url out-dir opts]"],"doc":"Copy a file contained within a jar to disk. Return the created file.","end-row":692,"filename":"cljs/closure.clj","fixed-arities":[3,2],"name":"jar-file-to-disk","ns":"cljs.closure","row":677},{"arglist-strs":["[jar-file {:keys [output-file] :as opts}]"],"doc":"Compile a file from a jar if necessary. Returns IJavaScript.","end-row":720,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile-from-jar","ns":"cljs.closure","row":694},{"arglist-strs":["[this opts]"],"end-row":723,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"find-jar-sources","ns":"cljs.closure","row":722},{"arglist-strs":["[opts requires]"],"doc":"Given a sequence of Closure namespace strings, return the list of\n  all dependencies. The returned list includes all Google and\n  third-party library dependencies.\n\n  Third-party libraries are configured using the :libs option where\n  the value is a list of directories containing third-party\n  libraries.","end-row":818,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"js-dependencies","ns":"cljs.closure","row":798},{"arglist-strs":["[compiled]"],"doc":"If a compiled entity is the cljs.js namespace, explicitly\n  add the cljs.core macros namespace dependency to it.","end-row":844,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"add-core-macros-if-cljs-js","ns":"cljs.closure","row":836},{"arglist-strs":["[opts {:keys [relative-path uri]}]"],"doc":"Return an IJavaScript for this file. Compiled output will be\n   written to the working directory.","end-row":852,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"get-compiled-cljs","ns":"cljs.closure","row":846},{"arglist-strs":["[ns]"],"doc":"Given a namespace return the corresponding source with either a .cljs or\n  .cljc extension.","end-row":867,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"cljs-source-for-namespace","ns":"cljs.closure","row":854},{"arglist-strs":["[ns compiler-env]"],"doc":"Given a namespace and compilation environment return the relative path and\n  uri of the corresponding source regardless of the source language extension:\n  .cljs, .cljc, .js","end-row":899,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"source-for-namespace","ns":"cljs.closure","row":869},{"arglist-strs":["[opts requires]"],"doc":"Given a list of all required namespaces, return a list of\n  IJavaScripts which are the cljs dependencies. The returned list will\n  not only include the explicitly required files but any transitive\n  dependencies as well. JavaScript files will be compiled to the\n  working directory if they do not already exist.\n\n  Only load dependencies from the classpath.","end-row":926,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"cljs-dependencies","ns":"cljs.closure","row":901},{"arglist-strs":["[requires]"],"doc":"Given set of cljs namespace symbols, find IJavaScript objects for the namespaces.","end-row":957,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"find-cljs-dependencies","ns":"cljs.closure","row":937},{"fixed-arities":[1],"end-row":963,"private":true,"ns":"cljs.closure","name":"constants-filename","filename":"cljs/closure.clj","arglist-strs":["[opts]"],"doc":"Returns the filename of the constants table.","row":959},{"fixed-arities":[1],"end-row":969,"private":true,"ns":"cljs.closure","name":"constants-javascript-file","filename":"cljs/closure.clj","arglist-strs":["[opts]"],"doc":"Returns the constants table as a JavaScriptFile.","row":965},{"arglist-strs":["[opts & inputs]"],"doc":"DEPRECATED: Given one or more IJavaScript objects in dependency order, produce\n  a new sequence of IJavaScript objects which includes the input list\n  plus all dependencies in dependency order.","end-row":998,"filename":"cljs/closure.clj","name":"add-dependencies","ns":"cljs.closure","row":971},{"fixed-arities":[1],"end-row":1017,"private":true,"ns":"cljs.closure","name":"module-entries","filename":"cljs/closure.clj","arglist-strs":["[compile-opts]"],"doc":"Return the module entries of `compile-opts` as a set.","row":1010},{"arglist-strs":["[inputs]","[inputs compile-opts]"],"doc":"Given list of IJavaScript objects, produce a new sequence of IJavaScript objects\n  of all dependencies of inputs.","end-row":1030,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"add-dependency-sources","ns":"cljs.closure","row":1019},{"arglist-strs":["[inputs]"],"end-row":1039,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-unprovided","ns":"cljs.closure","row":1032},{"arglist-strs":["[deque input-set compiled opts failed]"],"end-row":1065,"filename":"cljs/closure.clj","fixed-arities":[5],"name":"compile-task","ns":"cljs.closure","row":1041},{"arglist-strs":["[inputs compiler-stats opts]"],"end-row":1085,"filename":"cljs/closure.clj","fixed-arities":[3],"name":"parallel-compile-sources","ns":"cljs.closure","row":1067},{"arglist-strs":["[inputs opts]","[inputs compiler-stats opts]"],"doc":"Takes dependency ordered list of IJavaScript compatible maps from parse-ns\n  and compiles them.","end-row":1105,"filename":"cljs/closure.clj","fixed-arities":[3,2],"name":"compile-sources","ns":"cljs.closure","row":1087},{"arglist-strs":["[inputs]"],"end-row":1109,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"remove-goog-base","ns":"cljs.closure","row":1107},{"arglist-strs":["[inputs]"],"end-row":1114,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"add-goog-base","ns":"cljs.closure","row":1111},{"arglist-strs":["[inputs opts]"],"doc":"Given list of IJavaScript objects, add foreign-deps, constants-table\n   IJavaScript objects to the list.","end-row":1132,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"add-js-sources","ns":"cljs.closure","row":1116},{"arglist-strs":["[inputs opts]"],"doc":"Add :preloads to a given set of inputs (IJavaScript). Returns a new\n  list of inputs where the preloaded namespaces and their deps come immediately after\n  cljs.core or the constants table depending on the optimization setting. Any\n  files needing copying or compilation will be compiled and/or copied to the\n  appropiate location.","end-row":1164,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"add-preloads","ns":"cljs.closure","row":1134},{"arglist-strs":["[paths]"],"end-row":1175,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"preamble-from-paths","ns":"cljs.closure","row":1171},{"arglist-strs":["[{:keys [target preamble hashbang]}]"],"end-row":1180,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"make-preamble","ns":"cljs.closure","row":1177},{"end-row":1185,"filename":"cljs/closure.clj","name":"javascript-name","ns":"cljs.closure","row":1185},{"arglist-strs":["[provides]"],"doc":"Given a vector of provides, builds required goog.provide statements","end-row":1200,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"build-provides","ns":"cljs.closure","row":1197},{"arglist-strs":["[modules]","[modules opts]"],"doc":"Ensure that compiler :modules map has :cljs-base module with defined\n  :output-to. If :output-to not provided will default to :output-dir location\n  and the name of the file will be \"cljs_base.js.\"","end-row":1221,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"ensure-cljs-base-module","ns":"cljs.closure","row":1208},{"fixed-arities":[2],"end-row":1240,"private":true,"ns":"cljs.closure","name":"const-expr-form","filename":"cljs/closure.clj","arglist-strs":["[compiler-state sym]"],"doc":"Returns the :const-expr form for `sym` from `compiler-state`.","row":1236},{"arglist-strs":["[inputs {:keys [modules] :as opts}]"],"doc":"Special compilation pass for cljs.loader namespace. cljs.loader must be\n  compiled last after all inputs. This is because all inputs must be known and\n  they must already be sorted in dependency order.","end-row":1266,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile-loader","ns":"cljs.closure","row":1242},{"arglist-strs":["[sources opts]"],"doc":"Given a list of IJavaScript sources in dependency order and compiler options\n   return a dependency sorted list of module name / description tuples. The\n   module descriptions will be augmented with a :closure-module entry holding\n   the Closure JSChunk. Each module description will also be augmented with\n   a :foreign-deps vector containing foreign IJavaScript sources in dependency\n   order.","end-row":1335,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"build-modules","ns":"cljs.closure","row":1268},{"arglist-strs":["[sm-json sources name opts]"],"doc":"Given a JSON parsed Google Closure JavaScript to JavaScript source map,\n   the entire list of original IJavaScript sources output a merged JavaScript\n   to ClojureScript source map file with the given file name. opts should\n   supply :preamble-line-count and :foreign-deps-line-count if they are\n   relevant.","end-row":1419,"filename":"cljs/closure.clj","fixed-arities":[4],"name":"emit-optimized-source-map","ns":"cljs.closure","row":1363},{"arglist-strs":["[result opts]"],"end-row":1431,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"write-variable-maps","ns":"cljs.closure","row":1421},{"arglist-strs":["[opts & sources]"],"doc":"Use the Closure Compiler to optimize one or more Closure JSChunks. Returns\n   a dependency sorted list of module name and description tuples.","end-row":1482,"filename":"cljs/closure.clj","name":"optimize-modules","ns":"cljs.closure","row":1433},{"arglist-strs":["[sources]"],"end-row":1491,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"->js-source-files","ns":"cljs.closure","row":1484},{"arglist-strs":["[opts & sources]"],"doc":"Use the Closure Compiler to optimize one or more JavaScript files.","end-row":1529,"filename":"cljs/closure.clj","name":"optimize","ns":"cljs.closure","row":1493},{"arglist-strs":["[base input]"],"doc":"Generate a string which is the path to the input IJavaScript relative\n  to the specified base file.","end-row":1586,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"path-relative-to","ns":"cljs.closure","row":1575},{"arglist-strs":["[opts input]"],"doc":"Return a goog.addDependency string for an input.","end-row":1606,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"add-dep-string","ns":"cljs.closure","row":1588},{"arglist-strs":["[opts sources]"],"doc":"Return a deps file string for a sequence of inputs.","end-row":1611,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"deps-file","ns":"cljs.closure","row":1608},{"arglist-strs":["[js {:keys [elide-strict] :as opts}]"],"end-row":1621,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"elide-strict","ns":"cljs.closure","row":1619},{"arglist-strs":["[content out-file]"],"end-row":1633,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"fingerprint-out-file","ns":"cljs.closure","row":1623},{"arglist-strs":["[{:keys [output-to fingerprint] :as opts} js]"],"end-row":1652,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"output-one-file","ns":"cljs.closure","row":1635},{"arglist-strs":["[opts sources]"],"end-row":1655,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"output-deps-file","ns":"cljs.closure","row":1654},{"end-row":1657,"filename":"cljs/closure.clj","name":"foreign-deps-str","ns":"cljs.closure","row":1657},{"end-row":1657,"filename":"cljs/closure.clj","name":"add-header","ns":"cljs.closure","row":1657},{"end-row":1657,"filename":"cljs/closure.clj","name":"add-source-map-link","ns":"cljs.closure","row":1657},{"arglist-strs":["[syms]","[syms mode]"],"end-row":1667,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"preloads","ns":"cljs.closure","row":1659},{"arglist-strs":["[opts]"],"end-row":1670,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"bundle?","ns":"cljs.closure","row":1669},{"arglist-strs":["[dep]"],"end-row":1673,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"export-dep","ns":"cljs.closure","row":1672},{"arglist-strs":["[node-requires]"],"doc":"Returns the JavaScript code to support runtime require of bundled modules.","end-row":1683,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"npm-deps-js","ns":"cljs.closure","row":1675},{"arglist-strs":["[opts]"],"doc":"Output an entry point. In the non-modules case, opts is simply compiler\n  options. When emitting a module entry point, opts must contain :module-name.","end-row":1765,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"output-main-file","ns":"cljs.closure","row":1685},{"arglist-strs":["[modules fingerprint-info]"],"end-row":1776,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"fingerprinted-modules","ns":"cljs.closure","row":1767},{"arglist-strs":["[opts js-sources modules]"],"doc":"Given compiler options, original IJavaScript sources and a sequence of\n   module name and module description tuples output module sources to disk.\n   Modules description must define :output-to and supply :source entry with\n   the JavaScript source to write to disk.","end-row":1859,"filename":"cljs/closure.clj","fixed-arities":[3],"name":"output-modules","ns":"cljs.closure","row":1778},{"arglist-strs":["[{:keys [lib-path url provides] :as ijs}]"],"end-row":1868,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"lib-rel-path","ns":"cljs.closure","row":1861},{"arglist-strs":["[js]","[js opts]"],"doc":"Given a IJavaScript which points to a .js file either in memory, in a jar file,\n  or is a foreign lib, return the path relative to the output directory.","end-row":1890,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"rel-output-path","ns":"cljs.closure","row":1870},{"arglist-strs":["[js-modules opts]"],"end-row":1899,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"get-source-files","ns":"cljs.closure","row":1892},{"arglist-strs":["[opts]"],"end-row":1907,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"make-convert-js-module-options","ns":"cljs.closure","row":1901},{"arglist-strs":["[module-type]"],"end-row":1916,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"module-type->keyword","ns":"cljs.closure","row":1909},{"arglist-strs":["[closure-compiler inputs-by-name opts {:keys [file-min file provides requires] :as ijs}]"],"end-row":1954,"filename":"cljs/closure.clj","fixed-arities":[4],"name":"add-converted-source","ns":"cljs.closure","row":1918},{"fixed-arities":[1],"end-row":1973,"private":true,"ns":"cljs.closure","name":"package-json-entries","filename":"cljs/closure.clj","arglist-strs":["[opts]"],"doc":"Takes options and returns a sequence with the desired order of package.json\n   entries for the given :package-json-resolution mode. If no mode is provided,\n   defaults to :webpack (if no target is set) and :nodejs (if the target is\n   :nodejs).","row":1956},{"arglist-strs":["[]"],"end-row":1992,"filename":"cljs/closure.clj","fixed-arities":[0],"name":"sorting-dependency-options","ns":"cljs.closure","private":true,"row":1985},{"arglist-strs":["[js-modules opts]"],"doc":"Takes a list JavaScript modules as an IJavaScript and rewrites them into a Google\n  Closure-compatible form. Returns list IJavaScript with the converted module\n  code set as source.","end-row":2021,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"convert-js-modules","ns":"cljs.closure","row":1994},{"doc":"Takes an IJavaScript with the source code set as source, transforms the\n  source code and returns an IJavascript with the new code set as source.","end-row":2027,"filename":"cljs/closure.clj","name":"js-transforms","ns":"cljs.closure","row":2023},{"arglist-strs":["[url]"],"end-row":2041,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"url->nio-path","ns":"cljs.closure","row":2033},{"arglist-strs":["[source]"],"end-row":2049,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"add-goog-load","ns":"cljs.closure","row":2043},{"arglist-strs":["[]"],"end-row":2054,"filename":"cljs/closure.clj","fixed-arities":[0],"name":"es5-warnings","ns":"cljs.closure","row":2051},{"arglist-strs":["[]"],"end-row":2066,"filename":"cljs/closure.clj","fixed-arities":[0],"name":"transpile-options","ns":"cljs.closure","row":2056},{"arglist-strs":["[rsc opts]","[path source opts]"],"doc":"Transpile a single JavaScript file to JavaScript. Used to lower Closure\n  Library files written in more recent versions of the JavaScript standard.","end-row":2080,"filename":"cljs/closure.clj","fixed-arities":[3,2],"name":"closure-transpile","ns":"cljs.closure","row":2068},{"arglist-strs":["[{:keys [language-out] :or {language-out :es3} :as opts} rsc {:keys [module lang] :as js}]"],"end-row":2093,"filename":"cljs/closure.clj","fixed-arities":[3],"name":"transpile","ns":"cljs.closure","row":2083},{"arglist-strs":["[out-file]"],"end-row":2097,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"requires-transpile?","ns":"cljs.closure","row":2095},{"arglist-strs":["[opts {:keys [module lang]}]"],"end-row":2112,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"transpile?","ns":"cljs.closure","row":2111},{"arglist-strs":["[{:keys [optimizations] :as opts} js]"],"doc":"Write or copy a JavaScript file to output directory. Only write if the file\n   does not already exist. Return IJavaScript for the file on disk at the new\n   location.","end-row":2151,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"write-javascript","ns":"cljs.closure","row":2114},{"arglist-strs":["[js]"],"doc":"Returns true if IJavaScript instance needs to be written/copied to output\n  directory. True when in memory, in a JAR, or if foreign library.","end-row":2164,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"write-js?","ns":"cljs.closure","row":2153},{"arglist-strs":["[opts js]"],"doc":"Ensure that the given IJavaScript exists on disk in the output directory.\n   Return updated IJavaScript with the new location if necessary.","end-row":2189,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"source-on-disk","ns":"cljs.closure","row":2166},{"arglist-strs":["[{:keys [modules] :as opts} & sources]"],"doc":"Ensure that all JavaScript source files are on disk (not in jars),\n   write the goog deps file including only the libraries that are being\n   used and write the deps file for the current project.\n\n   The deps file for the current project will include third-party\n   libraries.","end-row":2242,"filename":"cljs/closure.clj","name":"output-unoptimized","ns":"cljs.closure","row":2202},{"arglist-strs":["[]","[classloader]"],"doc":"returns a merged map containing all upstream dependencies defined\n  by libraries on the classpath.","end-row":2257,"filename":"cljs/closure.clj","fixed-arities":[0,1],"name":"get-upstream-deps*","ns":"cljs.closure","row":2244},{"end-row":2259,"filename":"cljs/closure.clj","name":"get-upstream-deps","ns":"cljs.closure","row":2259},{"arglist-strs":["[opts js]"],"end-row":2262,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"add-header","ns":"cljs.closure","row":2261},{"arglist-strs":["[opts sources]"],"end-row":2272,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"foreign-deps-str","ns":"cljs.closure","row":2264},{"arglist-strs":["[{:keys [output-wrapper] :as opts} js]"],"end-row":2280,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"add-wrapper","ns":"cljs.closure","row":2274},{"arglist-strs":["[{:keys [source-map output-to] :as opts} js]"],"end-row":2287,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"add-source-map-link","ns":"cljs.closure","row":2282},{"arglist-strs":["[path]"],"end-row":2290,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"absolute-path?","ns":"cljs.closure","row":2289},{"arglist-strs":["[path]"],"end-row":2293,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"absolute-parent","ns":"cljs.closure","row":2292},{"arglist-strs":["[path-1 path-2]"],"doc":"Checks that path-1 and path-2 are siblings in the same logical directory.","end-row":2299,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"in-same-dir?","ns":"cljs.closure","row":2295},{"arglist-strs":["[dir path]"],"doc":"Checks that path names a file or directory that is the dir or a subdirectory there of.","end-row":2306,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"same-or-subdirectory-of?","ns":"cljs.closure","row":2301},{"arglist-strs":["[{:keys [output-to] :as opts}]"],"end-row":2314,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-output-to","ns":"cljs.closure","row":2308},{"arglist-strs":["[{:keys [output-dir] :as opts}]"],"end-row":2321,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-output-dir","ns":"cljs.closure","row":2316},{"arglist-strs":["[{:keys [output-to source-map output-dir optimizations] :as opts}]"],"doc":"When :source-map is specified in opts, ","end-row":2354,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-source-map","ns":"cljs.closure","row":2323},{"arglist-strs":["[{:keys [source-map-path] :as opts}]"],"end-row":2366,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-source-map-path","ns":"cljs.closure","row":2356},{"arglist-strs":["[{:keys [output-wrapper optimizations]}]"],"end-row":2370,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-output-wrapper","ns":"cljs.closure","row":2368},{"arglist-strs":["[{:keys [nodejs-rt optimizations] :as opts}]"],"end-row":2376,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-node-target","ns":"cljs.closure","row":2372},{"arglist-strs":["[{:keys [main] :as opts}]"],"end-row":2384,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-main","ns":"cljs.closure","row":2378},{"arglist-strs":["[{:keys [preloads optimizations] :as opts}]"],"end-row":2391,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-preloads","ns":"cljs.closure","row":2386},{"arglist-strs":["[{:keys [cache-analysis cache-analysis-format] :as opts}]"],"end-row":2398,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-cache-analysis-format","ns":"cljs.closure","row":2393},{"arglist-strs":["[{:keys [npm-deps]}]"],"end-row":2411,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"check-npm-deps","ns":"cljs.closure","row":2400},{"arglist-strs":["[js]"],"end-row":2415,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"foreign-source?","ns":"cljs.closure","row":2413},{"arglist-strs":["[libs]"],"doc":"EXPERIMENTAL. Given a set of libs expand any entries which only name\n   directories into a sequence of lib entries for all JS files recursively\n   found in that directory. All other options will be shared with the original\n   entry. The computed :provides assumes the specified directory is on the\n   classpath.","end-row":2449,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"expand-libs","ns":"cljs.closure","row":2417},{"end-row":2451,"filename":"cljs/closure.clj","name":"index-node-modules","ns":"cljs.closure","row":2451},{"arglist-strs":["[]","[{:keys [npm-deps]}]"],"end-row":2468,"filename":"cljs/closure.clj","fixed-arities":[0,1],"name":"compute-upstream-npm-deps","ns":"cljs.closure","row":2453},{"arglist-strs":["[opts]"],"end-row":2472,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"ensure-module-opts","ns":"cljs.closure","row":2470},{"arglist-strs":["[{:keys [target process-shim] :as opts}]"],"end-row":2478,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"shim-process?","ns":"cljs.closure","row":2474},{"arglist-strs":["[defines]"],"end-row":2484,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"normalize-closure-defines","ns":"cljs.closure","row":2480},{"arglist-strs":["[fns]"],"end-row":2506,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"resolve-warning-handlers","ns":"cljs.closure","row":2486},{"arglist-strs":["[{:keys [optimizations output-dir] :or {optimizations :none output-dir \"out\"} :as opts}]"],"end-row":2614,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"add-implicit-options","ns":"cljs.closure","row":2508},{"arglist-strs":["[proc]"],"end-row":2617,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"alive?","ns":"cljs.closure","private":true,"row":2616},{"arglist-strs":["[proc in out]"],"end-row":2632,"filename":"cljs/closure.clj","fixed-arities":[3],"name":"pipe","ns":"cljs.closure","private":true,"row":2619},{"arglist-strs":["[{:keys [deps-cmd npm-deps verbose] :or {deps-cmd \"npm\"} :as opts}]"],"end-row":2668,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"maybe-install-node-deps!","ns":"cljs.closure","row":2634},{"arglist-strs":["[entry]","[{:keys [file]} {:keys [target] :as opts}]"],"doc":"EXPERIMENTAL: return the foreign libs entries as computed by running\n   the module-deps package on the supplied JavaScript entry point. Assumes\n   that the `@cljs-oss/module-deps` NPM package is either locally or globally\n   installed.","end-row":2721,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"node-module-deps","ns":"cljs.closure","row":2670},{"arglist-strs":["[entries]","[entries opts]"],"doc":"EXPERIMENTAL: return the foreign libs entries as computed by running\n   the module-deps package on the supplied JavaScript entry points. Assumes\n   that the `@cljs-oss/module-deps` NPM package is either locally or globally\n   installed.","end-row":2733,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"node-inputs","ns":"cljs.closure","row":2723},{"arglist-strs":["[modules]","[modules opts]"],"end-row":2764,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"index-node-modules","ns":"cljs.closure","row":2735},{"fixed-arities":[2],"end-row":2867,"private":true,"ns":"cljs.closure","name":"node-file-seq->libs-spec*","filename":"cljs/closure.clj","arglist-strs":["[module-fseq opts]"],"doc":"Given a sequence of non-nested node_module paths where the extension ends in\n  `.js/.json`, return lib-spec maps for each path containing at least :file,\n   :module-type, and :provides.","row":2766},{"end-row":2869,"filename":"cljs/closure.clj","name":"node-file-seq->libs-spec","ns":"cljs.closure","row":2869},{"arglist-strs":["[]","[opts]"],"end-row":2878,"filename":"cljs/closure.clj","fixed-arities":[0,1],"name":"index-node-modules-dir","ns":"cljs.closure","row":2871},{"arglist-strs":["[{:keys [preprocess] :as js-module} opts]"],"doc":"Given js-module map, apply preprocessing defined by :preprocess value in the map.","end-row":2901,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"preprocess-js","ns":"cljs.closure","row":2880},{"arglist-strs":["[file-str]"],"end-row":2904,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"to-absolute-path","ns":"cljs.closure","private":true,"row":2903},{"arglist-strs":["[opts]"],"doc":"Given the current compiler options, converts JavaScript modules to Google\n  Closure modules and writes them to disk. Adds mapping from original module\n  namespace to new module namespace to compiler env. Returns modified compiler\n  options where new modules are passed with :libs option.","end-row":2975,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"process-js-modules","ns":"cljs.closure","row":2906},{"arglist-strs":["[compiler]"],"end-row":2979,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"load-data-readers!","ns":"cljs.closure","row":2977},{"arglist-strs":["[opts]"],"end-row":2984,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"add-externs-sources","ns":"cljs.closure","row":2981},{"arglist-strs":["[{:keys [npm-deps target] :as opts} js-sources compiler-env]"],"doc":"Given all Cljs sources (build inputs and dependencies in classpath)\n\n  - index all the node modules\n  - process the JS modules (preprocess + convert to Closure JS)\n  - save js-dependency-index for compilation","end-row":3041,"filename":"cljs/closure.clj","fixed-arities":[3],"name":"handle-js-modules","ns":"cljs.closure","row":2986},{"arglist-strs":["[{:keys [target target-fn] :as opts}]"],"end-row":3053,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"output-bootstrap","ns":"cljs.closure","row":3043},{"arglist-strs":["[inputs opts]"],"doc":"Compile inputs and all of their transitive dependencies including JS modules,\n   libs, and foreign libs. Duplicates the pipeline of build.","end-row":3069,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile-inputs","ns":"cljs.closure","row":3055},{"arglist-strs":["[ns opts]"],"doc":"Compiles a namespace and all of its transitive dependencies.\n   See compile-inputs.","end-row":3075,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"compile-ns","ns":"cljs.closure","row":3071},{"arglist-strs":["[opts]"],"end-row":3087,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"validate-opts","ns":"cljs.closure","row":3077},{"arglist-strs":["[opts]"],"end-row":3102,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"run-bundle-cmd","ns":"cljs.closure","row":3089},{"arglist-strs":["[opts]","[source opts]","[source opts compiler-env]"],"doc":"Given compiler options, produce runnable JavaScript. An optional source\n   parameter may be provided.","end-row":3267,"filename":"cljs/closure.clj","fixed-arities":[1,3,2],"name":"build","ns":"cljs.closure","row":3104},{"arglist-strs":["[ns-sym output-dir]"],"end-row":3290,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"target-file-for-cljs-ns","ns":"cljs.closure","row":3286},{"arglist-strs":["[ns-sym output-dir]"],"end-row":3296,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"mark-cljs-ns-for-recompile!","ns":"cljs.closure","row":3292},{"arglist-strs":["[state namespaces]"],"end-row":3304,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"cljs-dependents-for-macro-namespaces","ns":"cljs.closure","row":3298},{"arglist-strs":["[source opts]","[source opts compiler-env]","[source opts compiler-env quit]"],"doc":"Given a source directory, produce runnable JavaScript. Watch the source\n   directory for changes rebuilding when necessary. Takes the same arguments as\n   cljs.closure/build in addition to some watch-specific options:\n    - :watch-fn, a function of no arguments to run after a successful build. May\n                 be a function value or a namespaced symbol identifying a function,\n                 in which case the associated namespace willl be loaded and the\n                 symbol resolved.\n    - :watch-error-fn, a function receiving the exception of a failed build. May\n                       be a function value or a namespaced symbol, loaded as\n                       with :watch-fn.","end-row":3405,"filename":"cljs/closure.clj","fixed-arities":[4,3,2],"name":"watch","ns":"cljs.closure","row":3306},{"arglist-strs":["[opts]"],"end-row":3425,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"output-directory","ns":"cljs.closure","row":3424},{"arglist-strs":["[f]"],"end-row":3428,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"parse-js-ns","ns":"cljs.closure","row":3427},{"arglist-strs":["[src]","[src opts]"],"end-row":3439,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"src-file->target-file","ns":"cljs.closure","row":3430},{"arglist-strs":["[src]","[src {:keys [wrap all-provides macros-ns] :as options}]"],"end-row":3461,"filename":"cljs/closure.clj","fixed-arities":[1,2],"name":"src-file->goog-require","ns":"cljs.closure","row":3441},{"arglist-strs":["[opts]"],"end-row":3479,"filename":"cljs/closure.clj","fixed-arities":[1],"name":"compile-client-js","ns":"cljs.closure","row":3465},{"arglist-strs":["[opts file-path]"],"end-row":3487,"filename":"cljs/closure.clj","fixed-arities":[2],"name":"create-client-js-file","ns":"cljs.closure","row":3481},{"arglist-strs":["[]"],"end-row":3513,"filename":"cljs/closure.clj","fixed-arities":[0],"name":"aot-cache-core","ns":"cljs.closure","row":3491}]
[{"fixed-arities":[2],"end-row":73,"meta":{},"name-end-col":16,"index":0,"name-end-row":69,"private":true,"name-row":69,"ns":"clojure.data","name":"diff-set","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L69","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":8,"end-col":40,"arglist-strs":["[a b]"],"row":69},{"fixed-arities":[2],"end-row":20,"meta":{},"name-end-col":17,"index":0,"name-end-row":17,"private":true,"name-row":17,"ns":"clojure.data","name":"atom-diff","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L17","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":8,"end-col":38,"arglist-strs":["[a b]"],"doc":"Internal helper for diff.","row":17},{"fixed-arities":[2],"end-row":81,"meta":{},"name-end-col":16,"protocol-ns":"clojure.data","index":0,"name-end-row":81,"name-row":81,"ns":"clojure.data","name":"diff-similar","defined-by":"cljs.core/defprotocol","protocol-name":"Diff","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L81","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":3,"name-col":4,"end-col":67,"arglist-strs":["[a b]"],"doc":"Implementation detail. Subject to change.","row":81},{"end-row":77,"meta":{},"name-end-col":31,"index":0,"name-end-row":75,"name-row":75,"ns":"clojure.data","name":"EqualityPartition","defined-by":"cljs.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L75","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":14,"end-col":72,"doc":"Implementation detail. Subject to change.","row":75},{"fixed-arities":[1],"end-row":31,"meta":{},"name-end-col":17,"index":0,"name-end-row":23,"private":true,"name-row":23,"ns":"clojure.data","name":"vectorize","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L23","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":8,"end-col":10,"arglist-strs":["[m]"],"doc":"Convert an associative-by-numeric-index collection into\n   an equivalent vector, with nil for any missing keys","row":23},{"fixed-arities":[3],"end-row":47,"meta":{},"name-end-col":28,"index":0,"name-end-row":33,"private":true,"name-row":33,"ns":"clojure.data","name":"diff-associative-key","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L33","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":8,"end-col":9,"arglist-strs":["[a b k]"],"doc":"Diff associative things a and b, comparing only the key k.","row":33},{"fixed-arities":[1],"end-row":77,"meta":{},"name-end-col":22,"protocol-ns":"clojure.data","index":0,"name-end-row":77,"name-row":77,"ns":"clojure.data","name":"equality-partition","defined-by":"cljs.core/defprotocol","protocol-name":"EqualityPartition","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L77","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":3,"name-col":4,"end-col":71,"arglist-strs":["[x]"],"doc":"Implementation detail. Subject to change.","row":77},{"fixed-arities":[2],"end-row":67,"meta":{},"name-end-col":23,"index":0,"name-end-row":62,"private":true,"name-row":62,"ns":"clojure.data","name":"diff-sequential","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L62","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":8,"end-col":61,"arglist-strs":["[a b]"],"row":62},{"end-row":15,"meta":{},"name-end-col":36,"index":0,"name-end-row":15,"name-row":15,"ns":"clojure.data","name":"diff","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L15","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":32,"end-col":37,"row":15},{"fixed-arities":[2],"end-row":161,"meta":{},"name-end-col":11,"index":1,"name-end-row":144,"name-row":144,"ns":"clojure.data","name":"diff","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L144","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":7,"end-col":25,"arglist-strs":["[a b]"],"doc":"Recursively compares a and b, returning a tuple of\n  [things-only-in-a things-only-in-b things-in-both].\n  Comparison rules:\n\n  * For equal a and b, return [nil nil a].\n  * Maps are subdiffed where keys match and values differ.\n  * Sets are never subdiffed.\n  * All sequential things are treated as associative collections\n    by their indexes, with results returned as vectors.\n  * Everything else (including strings!) is treated as\n    an atom and compared for equality.","row":144},{"end-row":81,"meta":{},"name-end-col":18,"index":0,"name-end-row":79,"name-row":79,"ns":"clojure.data","name":"Diff","defined-by":"cljs.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L79","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":14,"end-col":68,"doc":"Implementation detail. Subject to change.","row":79},{"fixed-arities":[3,2],"end-row":60,"meta":{},"name-end-col":24,"index":0,"name-end-row":49,"private":true,"name-row":49,"ns":"clojure.data","name":"diff-associative","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/data.cljs#L49","lang":[],"filename":"/src/main/cljs/clojure/data.cljs","col":1,"name-col":8,"end-col":14,"arglist-strs":["[a b]","[a b ks]"],"doc":"Diff associative things a and b, comparing only keys in ks (if supplied).","row":49}]
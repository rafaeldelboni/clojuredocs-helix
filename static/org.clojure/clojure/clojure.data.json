[{"end-row":17,"meta":{},"name-end-col":14,"name-end-row":17,"name-row":17,"ns":"clojure.data","name":"diff","defined-by":"clojure.core/declare","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L17","filename":"/src/clj/clojure/data.clj","col":1,"name-col":10,"end-col":15,"row":17},{"fixed-arities":[2],"end-row":22,"meta":{},"name-end-col":17,"name-end-row":19,"private":true,"name-row":19,"ns":"clojure.data","name":"atom-diff","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L19","filename":"/src/clj/clojure/data.clj","col":1,"name-col":8,"end-col":38,"arglist-strs":["[a b]"],"doc":"Internal helper for diff.","row":19},{"fixed-arities":[1],"end-row":33,"meta":{},"name-end-col":17,"name-end-row":25,"private":true,"name-row":25,"ns":"clojure.data","name":"vectorize","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L25","filename":"/src/clj/clojure/data.clj","col":1,"name-col":8,"end-col":10,"arglist-strs":["[m]"],"doc":"Convert an associative-by-numeric-index collection into\n   an equivalent vector, with nil for any missing keys","row":25},{"fixed-arities":[3],"end-row":49,"meta":{},"name-end-col":28,"name-end-row":35,"private":true,"name-row":35,"ns":"clojure.data","name":"diff-associative-key","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L35","filename":"/src/clj/clojure/data.clj","col":1,"name-col":8,"end-col":9,"arglist-strs":["[a b k]"],"doc":"Diff associative things a and b, comparing only the key k.","row":35},{"fixed-arities":[3],"end-row":60,"meta":{},"name-end-col":24,"name-end-row":51,"private":true,"name-row":51,"ns":"clojure.data","name":"diff-associative","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L51","filename":"/src/clj/clojure/data.clj","col":1,"name-col":8,"end-col":10,"arglist-strs":["[a b ks]"],"doc":"Diff associative things a and b, comparing only keys in ks.","row":51},{"fixed-arities":[2],"end-row":67,"meta":{},"name-end-col":23,"name-end-row":62,"private":true,"name-row":62,"ns":"clojure.data","name":"diff-sequential","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L62","filename":"/src/clj/clojure/data.clj","col":1,"name-col":8,"end-col":61,"arglist-strs":["[a b]"],"row":62},{"end-row":71,"meta":{},"name-end-col":47,"name-end-row":69,"name-row":69,"ns":"clojure.data","name":"EqualityPartition","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L69","filename":"/src/clj/clojure/data.clj","col":1,"name-col":30,"end-col":88,"doc":"Implementation detail. Subject to change.","row":69},{"fixed-arities":[1],"end-row":71,"meta":{},"name-end-col":38,"protocol-ns":"clojure.data","name-end-row":71,"name-row":71,"ns":"clojure.data","name":"equality-partition","defined-by":"clojure.core/defprotocol","protocol-name":"EqualityPartition","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L71","filename":"/src/clj/clojure/data.clj","col":3,"name-col":20,"end-col":87,"arglist-strs":["[x]"],"doc":"Implementation detail. Subject to change.","row":71},{"end-row":75,"meta":{},"name-end-col":34,"name-end-row":73,"name-row":73,"ns":"clojure.data","name":"Diff","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L73","filename":"/src/clj/clojure/data.clj","col":1,"name-col":30,"end-col":84,"doc":"Implementation detail. Subject to change.","row":73},{"fixed-arities":[2],"end-row":75,"meta":{},"name-end-col":32,"protocol-ns":"clojure.data","name-end-row":75,"name-row":75,"ns":"clojure.data","name":"diff-similar","defined-by":"clojure.core/defprotocol","protocol-name":"Diff","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L75","filename":"/src/clj/clojure/data.clj","col":3,"name-col":20,"end-col":83,"arglist-strs":["[a b]"],"doc":"Implementation detail. Subject to change.","row":75},{"fixed-arities":[1],"end-row":104,"meta":{},"name-end-col":20,"name-end-row":102,"private":true,"name-row":102,"ns":"clojure.data","name":"as-set-value","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L102","filename":"/src/clj/clojure/data.clj","col":1,"name-col":8,"end-col":32,"arglist-strs":["[s]"],"row":102},{"fixed-arities":[2],"end-row":142,"meta":{},"name-end-col":11,"name-end-row":124,"name-row":124,"added":"1.3","ns":"clojure.data","name":"diff","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/data.clj#L124","filename":"/src/clj/clojure/data.clj","col":1,"name-col":7,"end-col":25,"arglist-strs":["[a b]"],"doc":"Recursively compares a and b, returning a tuple of\n  [things-only-in-a things-only-in-b things-in-both].\n  Comparison rules:\n\n  * For equal a and b, return [nil nil a].\n  * Maps are subdiffed where keys match and values differ.\n  * Sets are never subdiffed.\n  * All sequential things are treated as associative collections\n    by their indexes, with results returned as vectors.\n  * Everything else (including strings!) is treated as\n    an atom and compared for equality.","row":124}]
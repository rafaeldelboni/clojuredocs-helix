[{"doc":"Type object for a Java primitive byte array.","end-row":28,"filename":"clojure/java/io.clj","name":"byte-array-type","ns":"clojure.java.io","private":true,"row":24},{"doc":"Type object for a Java primitive char array.","end-row":33,"filename":"clojure/java/io.clj","name":"char-array-type","ns":"clojure.java.io","private":true,"row":30},{"doc":"Coerce between various 'resource-namish' things.","end-row":38,"filename":"clojure/java/io.clj","name":"Coercions","ns":"clojure.java.io","row":35},{"arglist-strs":["[x]"],"doc":"Coerce argument to a file.","end-row":37,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"as-file","ns":"clojure.java.io","row":37},{"arglist-strs":["[x]"],"doc":"Coerce argument to a URL.","end-row":38,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"as-url","ns":"clojure.java.io","row":38},{"arglist-strs":["[s]"],"end-row":42,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"escaped-utf8-urlstring->str","ns":"clojure.java.io","private":true,"row":40},{"doc":"Factory functions that create ready-to-use, buffered versions of\n   the various Java I/O stream types, on top of anything that can\n   be unequivocally converted to the requested kind of stream.\n\n   Common options include\n   \n     :append    true to open stream in append mode\n     :encoding  string name of encoding to use, e.g. \"UTF-8\".\n\n   Callers should generally prefer the higher level API provided by\n   reader, writer, input-stream, and output-stream.","end-row":84,"filename":"clojure/java/io.clj","name":"IOFactory","ns":"clojure.java.io","row":69},{"arglist-strs":["[x opts]"],"doc":"Creates a BufferedReader. See also IOFactory docs.","end-row":81,"filename":"clojure/java/io.clj","fixed-arities":[2],"name":"make-reader","ns":"clojure.java.io","row":81},{"arglist-strs":["[x opts]"],"doc":"Creates a BufferedWriter. See also IOFactory docs.","end-row":82,"filename":"clojure/java/io.clj","fixed-arities":[2],"name":"make-writer","ns":"clojure.java.io","row":82},{"arglist-strs":["[x opts]"],"doc":"Creates a BufferedInputStream. See also IOFactory docs.","end-row":83,"filename":"clojure/java/io.clj","fixed-arities":[2],"name":"make-input-stream","ns":"clojure.java.io","row":83},{"arglist-strs":["[x opts]"],"doc":"Creates a BufferedOutputStream. See also IOFactory docs.","end-row":84,"filename":"clojure/java/io.clj","fixed-arities":[2],"name":"make-output-stream","ns":"clojure.java.io","row":84},{"arglist-strs":["[x & opts]"],"doc":"Attempts to coerce its argument into an open java.io.Reader.\n   Default implementations always return a java.io.BufferedReader.\n\n   Default implementations are provided for Reader, BufferedReader,\n   InputStream, File, URI, URL, Socket, byte arrays, character arrays,\n   and String.\n\n   If argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the Reader is properly\n   closed.","end-row":102,"filename":"clojure/java/io.clj","name":"reader","ns":"clojure.java.io","row":86},{"arglist-strs":["[x & opts]"],"doc":"Attempts to coerce its argument into an open java.io.Writer.\n   Default implementations always return a java.io.BufferedWriter.\n\n   Default implementations are provided for Writer, BufferedWriter,\n   OutputStream, File, URI, URL, Socket, and String.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the Writer is properly\n   closed.","end-row":119,"filename":"clojure/java/io.clj","name":"writer","ns":"clojure.java.io","row":104},{"arglist-strs":["[x & opts]"],"doc":"Attempts to coerce its argument into an open java.io.InputStream.\n   Default implementations always return a java.io.BufferedInputStream.\n\n   Default implementations are defined for InputStream, File, URI, URL,\n   Socket, byte array, and String arguments.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the InputStream is properly\n   closed.","end-row":136,"filename":"clojure/java/io.clj","name":"input-stream","ns":"clojure.java.io","row":121},{"arglist-strs":["[x & opts]"],"doc":"Attempts to coerce its argument into an open java.io.OutputStream.\n   Default implementations always return a java.io.BufferedOutputStream.\n\n   Default implementations are defined for OutputStream, File, URI, URL,\n   Socket, and String arguments.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the OutputStream is\n   properly closed.","end-row":153,"filename":"clojure/java/io.clj","name":"output-stream","ns":"clojure.java.io","row":138},{"arglist-strs":["[opts]"],"end-row":156,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"append?","ns":"clojure.java.io","private":true,"row":155},{"arglist-strs":["[opts]"],"end-row":159,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"encoding","ns":"clojure.java.io","private":true,"row":158},{"arglist-strs":["[opts]"],"end-row":162,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"buffer-size","ns":"clojure.java.io","private":true,"row":161},{"end-row":172,"filename":"clojure/java/io.clj","name":"default-streams-impl","ns":"clojure.java.io","row":164},{"arglist-strs":["[is opts]"],"end-row":176,"filename":"clojure/java/io.clj","fixed-arities":[2],"name":"inputstream->reader","ns":"clojure.java.io","private":true,"row":174},{"arglist-strs":["[os opts]"],"end-row":180,"filename":"clojure/java/io.clj","fixed-arities":[2],"name":"outputstream->writer","ns":"clojure.java.io","private":true,"row":178},{"doc":"Internal helper for copy","end-row":300,"filename":"clojure/java/io.clj","name":"do-copy","ns":"clojure.java.io","private":true,"row":295},{"arglist-strs":["[input output & opts]"],"doc":"Copies input to output.  Returns nil or throws IOException.\n  Input may be an InputStream, Reader, File, byte[], char[], or String.\n  Output may be an OutputStream, Writer, or File.\n\n  Options are key/value pairs and may be one of\n\n    :buffer-size  buffer size to use, default is 1024.\n    :encoding     encoding to use if converting between\n                  byte and char streams.   \n\n  Does not close any streams except those it opens itself \n  (on a File).","end-row":406,"filename":"clojure/java/io.clj","name":"copy","ns":"clojure.java.io","row":391},{"arglist-strs":["[x]"],"doc":"Take an as-file-able thing and return a string if it is\n   a relative path, else IllegalArgumentException.","end-row":416,"filename":"clojure/java/io.clj","fixed-arities":[1],"name":"as-relative-path","ns":"clojure.java.io","row":408},{"arglist-strs":["[arg]","[parent child]","[parent child & more]"],"doc":"Returns a java.io.File, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent.","end-row":428,"filename":"clojure/java/io.clj","fixed-arities":[1,2],"name":"file","ns":"clojure.java.io","row":418},{"arglist-strs":["[f & [silently]]"],"doc":"Delete file f. If silently is nil or false, raise an exception on failure, else return the value of silently.","end-row":436,"filename":"clojure/java/io.clj","name":"delete-file","ns":"clojure.java.io","row":430},{"arglist-strs":["[f & more]"],"doc":"Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.","end-row":444,"filename":"clojure/java/io.clj","name":"make-parents","ns":"clojure.java.io","row":438},{"arglist-strs":["[n]","[n loader]"],"doc":"Returns the URL for a named resource. Use the context class loader\n   if no loader is specified.","end-row":451,"filename":"clojure/java/io.clj","fixed-arities":[1,2],"name":"resource","ns":"clojure.java.io","row":446}]
[{"fixed-arities":[1],"end-row":51,"meta":{},"name-end-col":10,"name-end-row":45,"name-row":45,"ns":"helix.children","name":"vec","defined-by":"cljs.core/defn","git-source":"https://github.com/lilactown/helix/blob/0.1.10/src/helix/children.cljs#L45","lang":[],"filename":"/src/helix/children.cljs","col":1,"name-col":7,"end-col":48,"arglist-strs":["[children]"],"doc":"Returns the children opaque data structure as a flat vector with keys\n  assigned to each child. Useful if you want to manipulate collections of\n  children in render, especially if you want to reorder or slice\n  (:children props) before passing it down.","row":45},{"fixed-arities":[1],"end-row":37,"meta":{},"name-end-col":12,"name-end-row":33,"name-row":33,"ns":"helix.children","name":"count","defined-by":"cljs.core/defn","git-source":"https://github.com/lilactown/helix/blob/0.1.10/src/helix/children.cljs#L33","lang":[],"filename":"/src/helix/children.cljs","col":1,"name-col":7,"end-col":36,"arglist-strs":["[children]"],"doc":"Returns the total number of components in children, equal to the number of\n  times that a callback passed to map would be invoked.","row":33},{"fixed-arities":[1],"end-row":15,"meta":{},"name-end-col":15,"name-end-row":7,"name-row":7,"ns":"helix.children","name":"children","defined-by":"cljs.core/defn","git-source":"https://github.com/lilactown/helix/blob/0.1.10/src/helix/children.cljs#L7","lang":[],"filename":"/src/helix/children.cljs","col":1,"name-col":7,"end-col":34,"arglist-strs":["[props]"],"doc":"Given a props object, returns children contained in it (if any).\n\n  Handles cases where props could be either a JS object or a CLJS structure.","row":7},{"fixed-arities":[2],"end-row":31,"meta":{},"name-end-col":10,"name-end-row":17,"name-row":17,"ns":"helix.children","name":"map","defined-by":"cljs.core/defn","git-source":"https://github.com/lilactown/helix/blob/0.1.10/src/helix/children.cljs#L17","lang":[],"filename":"/src/helix/children.cljs","col":1,"name-col":7,"end-col":36,"arglist-strs":["[f children]"],"doc":"Map children that are typically specified as `props.children`.\n\n  `f` is a function of up to 3 args:\n  - `child`: the child element\n  - `key`: the React key assigned to this element\n  - `index`: the numeric index of the element in the child collection starting at 0\n\n  If children is an array it will be traversed and the function will be called\n  for each child in the array.\n\n  If children is null or undefined, this function will return null or undefined\n  rather than an array.","row":17},{"fixed-arities":[1],"end-row":43,"meta":{},"name-end-col":11,"name-end-row":39,"name-row":39,"ns":"helix.children","name":"only","defined-by":"cljs.core/defn","git-source":"https://github.com/lilactown/helix/blob/0.1.10/src/helix/children.cljs#L39","lang":[],"filename":"/src/helix/children.cljs","col":1,"name-col":7,"end-col":35,"arglist-strs":["[children]"],"doc":"Verifies that children has only one child (a React element) and returns it.\n  Otherwise this method throws an error.","row":39}]
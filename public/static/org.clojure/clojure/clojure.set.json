[{"fixed-arities":[2],"end-row":160,"meta":{},"name-end-col":16,"name-end-row":154,"name-row":154,"added":"1.2","ns":"clojure.set","name":"superset?","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L154","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":43,"arglist-strs":["[set1 set2]"],"doc":"Is set1 a superset of set2?","row":154},{"end-row":170,"meta":{},"name-end-col":8,"name-end-row":168,"name-row":168,"ns":"clojure.set","name":"ys","defined-by":"clojure.core/def","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L168","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":6,"end-col":34,"row":168},{"fixed-arities":[2],"end-row":70,"meta":{},"name-end-col":13,"name-end-row":65,"name-row":65,"added":"1.0","ns":"clojure.set","name":"select","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L65","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":24,"arglist-strs":["[pred xset]"],"doc":"Returns a set of the elements for which pred is true","row":65},{"fixed-arities":[1,2],"end-row":62,"meta":{},"name-end-col":17,"name-end-row":49,"name-row":49,"added":"1.0","ns":"clojure.set","name":"difference","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L49","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":45,"arglist-strs":["[s1]","[s1 s2]","[s1 s2 & sets]"],"varargs-min-arity":2,"doc":"Return a set that is the first set without elements of the remaining sets","row":49},{"fixed-arities":[2],"end-row":87,"meta":{},"name-end-col":18,"name-end-row":78,"name-row":78,"added":"1.0","ns":"clojure.set","name":"rename-keys","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L78","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":43,"arglist-strs":["[map kmap]"],"doc":"Returns the map with the keys in kmap renamed to the vals in kmap","row":78},{"fixed-arities":[2],"end-row":93,"meta":{},"name-end-col":13,"name-end-row":89,"name-row":89,"added":"1.0","ns":"clojure.set","name":"rename","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L89","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":66,"arglist-strs":["[xrel kmap]"],"doc":"Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap","row":89},{"fixed-arities":[1],"end-row":113,"meta":{},"name-end-col":17,"name-end-row":106,"name-row":106,"added":"1.0","ns":"clojure.set","name":"map-invert","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L106","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":20,"arglist-strs":["[m]"],"doc":"Returns the map with the vals mapped to the keys.","row":106},{"fixed-arities":[2],"end-row":152,"meta":{},"name-end-col":14,"name-end-row":146,"name-row":146,"added":"1.2","ns":"clojure.set","name":"subset?","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L146","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":43,"arglist-strs":["[set1 set2]"],"doc":"Is set1 a subset of set2?","row":146},{"end-row":166,"meta":{},"name-end-col":8,"name-end-row":164,"name-row":164,"ns":"clojure.set","name":"xs","defined-by":"clojure.core/def","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L164","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":6,"end-col":39,"row":164},{"fixed-arities":[2],"end-row":76,"meta":{},"name-end-col":14,"name-end-row":72,"name-row":72,"added":"1.0","ns":"clojure.set","name":"project","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L72","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":64,"arglist-strs":["[xrel ks]"],"doc":"Returns a rel of the elements of xrel with only the keys in ks","row":72},{"fixed-arities":[0,1,2],"end-row":31,"meta":{},"name-end-col":12,"name-end-row":20,"name-row":20,"added":"1.0","ns":"clojure.set","name":"union","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L20","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":65,"arglist-strs":["[]","[s1]","[s1 s2]","[s1 s2 & sets]"],"varargs-min-arity":2,"doc":"Return a set that is the union of the input sets","row":20},{"fixed-arities":[2],"end-row":18,"meta":{},"name-end-col":22,"name-end-row":13,"private":true,"name-row":13,"ns":"clojure.set","name":"bubble-max-key","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L13","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":8,"end-col":51,"arglist-strs":["[k coll]"],"doc":"Move a maximal element of coll according to fn k (which returns a\n  number) to the front of coll.","row":13},{"fixed-arities":[1,2],"end-row":47,"meta":{},"name-end-col":19,"name-end-row":33,"name-row":33,"added":"1.0","ns":"clojure.set","name":"intersection","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L33","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":73,"arglist-strs":["[s1]","[s1 s2]","[s1 s2 & sets]"],"varargs-min-arity":2,"doc":"Return a set that is the intersection of the input sets","row":33},{"fixed-arities":[3,2],"end-row":144,"meta":{},"name-end-col":11,"name-end-row":115,"name-row":115,"added":"1.0","ns":"clojure.set","name":"join","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L115","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":23,"arglist-strs":["[xrel yrel]","[xrel yrel km]"],"doc":"When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.","row":115},{"fixed-arities":[2],"end-row":104,"meta":{},"name-end-col":12,"name-end-row":95,"name-row":95,"added":"1.0","ns":"clojure.set","name":"index","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/set.clj#L95","lang":[],"filename":"/src/clj/clojure/set.clj","col":1,"name-col":7,"end-col":15,"arglist-strs":["[xrel ks]"],"doc":"Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks.","row":95}]
[{"fixed-arities":[2],"end-row":18,"private":true,"ns":"clojure.set","name":"bubble-max-key","filename":"clojure/set.clj","arglist-strs":["[k coll]"],"doc":"Move a maximal element of coll according to fn k (which returns a\n  number) to the front of coll.","row":13},{"arglist-strs":["[]","[s1]","[s1 s2]","[s1 s2 & sets]"],"doc":"Return a set that is the union of the input sets","end-row":31,"filename":"clojure/set.clj","fixed-arities":[0,1,2],"name":"union","ns":"clojure.set","row":20},{"arglist-strs":["[s1]","[s1 s2]","[s1 s2 & sets]"],"doc":"Return a set that is the intersection of the input sets","end-row":47,"filename":"clojure/set.clj","fixed-arities":[1,2],"name":"intersection","ns":"clojure.set","row":33},{"arglist-strs":["[s1]","[s1 s2]","[s1 s2 & sets]"],"doc":"Return a set that is the first set without elements of the remaining sets","end-row":62,"filename":"clojure/set.clj","fixed-arities":[1,2],"name":"difference","ns":"clojure.set","row":49},{"arglist-strs":["[pred xset]"],"doc":"Returns a set of the elements for which pred is true","end-row":70,"filename":"clojure/set.clj","fixed-arities":[2],"name":"select","ns":"clojure.set","row":65},{"arglist-strs":["[xrel ks]"],"doc":"Returns a rel of the elements of xrel with only the keys in ks","end-row":76,"filename":"clojure/set.clj","fixed-arities":[2],"name":"project","ns":"clojure.set","row":72},{"arglist-strs":["[map kmap]"],"doc":"Returns the map with the keys in kmap renamed to the vals in kmap","end-row":87,"filename":"clojure/set.clj","fixed-arities":[2],"name":"rename-keys","ns":"clojure.set","row":78},{"arglist-strs":["[xrel kmap]"],"doc":"Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap","end-row":93,"filename":"clojure/set.clj","fixed-arities":[2],"name":"rename","ns":"clojure.set","row":89},{"arglist-strs":["[xrel ks]"],"doc":"Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks.","end-row":104,"filename":"clojure/set.clj","fixed-arities":[2],"name":"index","ns":"clojure.set","row":95},{"arglist-strs":["[m]"],"doc":"Returns the map with the vals mapped to the keys.","end-row":113,"filename":"clojure/set.clj","fixed-arities":[1],"name":"map-invert","ns":"clojure.set","row":106},{"arglist-strs":["[xrel yrel]","[xrel yrel km]"],"doc":"When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.","end-row":144,"filename":"clojure/set.clj","fixed-arities":[3,2],"name":"join","ns":"clojure.set","row":115},{"arglist-strs":["[set1 set2]"],"doc":"Is set1 a subset of set2?","end-row":152,"filename":"clojure/set.clj","fixed-arities":[2],"name":"subset?","ns":"clojure.set","row":146},{"arglist-strs":["[set1 set2]"],"doc":"Is set1 a superset of set2?","end-row":160,"filename":"clojure/set.clj","fixed-arities":[2],"name":"superset?","ns":"clojure.set","row":154},{"end-row":166,"filename":"clojure/set.clj","name":"xs","ns":"clojure.set","row":164},{"end-row":170,"filename":"clojure/set.clj","name":"ys","ns":"clojure.set","row":168}]
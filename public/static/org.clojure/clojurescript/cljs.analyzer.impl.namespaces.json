[{"fixed-arities":[1],"end-row":29,"meta":{},"name-end-col":32,"index":0,"name-end-row":11,"name-row":11,"ns":"cljs.analyzer.impl.namespaces","name":"check-and-remove-as-alias","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/analyzer/impl/namespaces.cljc#L11","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/analyzer/impl/namespaces.cljc","col":1,"name-col":7,"end-col":31,"arglist-strs":["[libspec]"],"doc":"Given a libspec return a map of :as-alias alias, if was present. Return the\n   libspec with :as-alias elided. If the libspec was *only* :as-alias do not\n   return it.","row":11},{"fixed-arities":[1],"end-row":68,"meta":{},"name-end-col":34,"index":0,"name-end-row":55,"name-row":55,"ns":"cljs.analyzer.impl.namespaces","name":"elide-aliases-from-ns-specs","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/analyzer/impl/namespaces.cljc#L55","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/analyzer/impl/namespaces.cljc","col":1,"name-col":7,"end-col":22,"arglist-strs":["[ns-specs]"],"row":55},{"fixed-arities":[2],"end-row":36,"meta":{},"name-end-col":32,"index":0,"name-end-row":31,"name-row":31,"ns":"cljs.analyzer.impl.namespaces","name":"check-as-alias-duplicates","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/analyzer/impl/namespaces.cljc#L31","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/analyzer/impl/namespaces.cljc","col":1,"name-col":7,"end-col":35,"arglist-strs":["[as-aliases new-as-aliases]"],"row":31},{"fixed-arities":[1,2],"end-row":53,"meta":{},"name-end-col":34,"index":0,"name-end-row":38,"name-row":38,"ns":"cljs.analyzer.impl.namespaces","name":"elide-aliases-from-libspecs","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/analyzer/impl/namespaces.cljc#L38","lang":["clj","cljs"],"filename":"/src/main/clojure/cljs/analyzer/impl/namespaces.cljc","col":1,"name-col":7,"end-col":24,"arglist-strs":["[libspecs]","[libspecs as-aliases]"],"doc":"Given libspecs, elide all :as-alias. Return a map of :libspecs (filtered)\n   and :as-aliases.","row":38}]
[{"end-row":20,"filename":"clojure/browser/net.cljs","name":"*timeout*","ns":"clojure.browser.net","row":20},{"end-row":29,"filename":"clojure/browser/net.cljs","name":"event-types","ns":"clojure.browser.net","row":22},{"end-row":43,"filename":"clojure/browser/net.cljs","name":"IConnection","ns":"clojure.browser.net","row":31},{"arglist-strs":["[this]","[this opt1]","[this opt1 opt2]","[this opt1 opt2 opt3]"],"end-row":36,"filename":"clojure/browser/net.cljs","fixed-arities":[1,4,3,2],"name":"connect","ns":"clojure.browser.net","row":32},{"arglist-strs":["[this opt]","[this opt opt2]","[this opt opt2 opt3]","[this opt opt2 opt3 opt4]","[this opt opt2 opt3 opt4 opt5]"],"end-row":42,"filename":"clojure/browser/net.cljs","fixed-arities":[4,6,3,2,5],"name":"transmit","ns":"clojure.browser.net","row":37},{"arglist-strs":["[this]"],"end-row":43,"filename":"clojure/browser/net.cljs","fixed-arities":[1],"name":"close","ns":"clojure.browser.net","row":43},{"end-row":80,"filename":"clojure/browser/net.cljs","name":"xpc-config-fields","ns":"clojure.browser.net","row":74},{"arglist-strs":["[]"],"doc":"Returns an XhrIo connection","end-row":85,"filename":"clojure/browser/net.cljs","fixed-arities":[0],"name":"xhr-connection","ns":"clojure.browser.net","row":82},{"end-row":88,"filename":"clojure/browser/net.cljs","name":"ICrossPageChannel","ns":"clojure.browser.net","row":87},{"arglist-strs":["[this service-name fn]","[this service-name fn encode-json?]"],"end-row":88,"filename":"clojure/browser/net.cljs","fixed-arities":[4,3],"name":"register-service","ns":"clojure.browser.net","row":88},{"arglist-strs":["[]","[config]"],"doc":"When passed with a config hash-map, returns a parent\n  CrossPageChannel object. Keys in the config hash map are downcased\n  versions of the goog.net.xpc.CfgFields enum keys,\n  e.g. goog.net.xpc.CfgFields.PEER_URI becomes :peer_uri in the config\n  hash.\n\n  When passed with no args, creates a child CrossPageChannel object,\n  and the config is automatically taken from the URL param 'xpc', as\n  per the CrossPageChannel API.","end-row":139,"filename":"clojure/browser/net.cljs","fixed-arities":[0,1],"name":"xpc-connection","ns":"clojure.browser.net","row":117},{"end-row":145,"filename":"clojure/browser/net.cljs","name":"IWebSocket","ns":"clojure.browser.net","row":144},{"arglist-strs":["[this]"],"end-row":145,"filename":"clojure/browser/net.cljs","fixed-arities":[1],"name":"open?","ns":"clojure.browser.net","row":145},{"arglist-strs":["[]","[auto-reconnect?]","[auto-reconnect? next-reconnect-fn]"],"end-row":181,"filename":"clojure/browser/net.cljs","fixed-arities":[0,1,2],"name":"websocket-connection","ns":"clojure.browser.net","row":175}]
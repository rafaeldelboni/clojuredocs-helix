[{"end-row":20,"name-end-col":15,"name-end-row":20,"name-row":20,"ns":"clojure.browser.net","name":"*timeout*","defined-by":"cljs.core/def","filename":"clojure/browser/net.cljs","col":1,"name-col":6,"end-col":22,"row":20},{"end-row":29,"name-end-col":17,"name-end-row":22,"name-row":22,"ns":"clojure.browser.net","name":"event-types","defined-by":"cljs.core/def","filename":"clojure/browser/net.cljs","col":1,"name-col":6,"end-col":34,"row":22},{"end-row":43,"name-end-col":25,"name-end-row":31,"name-row":31,"ns":"clojure.browser.net","name":"IConnection","defined-by":"cljs.core/defprotocol","filename":"clojure/browser/net.cljs","col":1,"name-col":14,"end-col":18,"row":31},{"fixed-arities":[1,4,3,2],"end-row":36,"name-end-col":11,"protocol-ns":"clojure.browser.net","name-end-row":32,"name-row":32,"ns":"clojure.browser.net","name":"connect","defined-by":"cljs.core/defprotocol","protocol-name":"IConnection","filename":"clojure/browser/net.cljs","col":3,"name-col":4,"end-col":27,"arglist-strs":["[this]","[this opt1]","[this opt1 opt2]","[this opt1 opt2 opt3]"],"row":32},{"fixed-arities":[4,6,3,2,5],"end-row":42,"name-end-col":12,"protocol-ns":"clojure.browser.net","name-end-row":37,"name-row":37,"ns":"clojure.browser.net","name":"transmit","defined-by":"cljs.core/defprotocol","protocol-name":"IConnection","filename":"clojure/browser/net.cljs","col":3,"name-col":4,"end-col":36,"arglist-strs":["[this opt]","[this opt opt2]","[this opt opt2 opt3]","[this opt opt2 opt3 opt4]","[this opt opt2 opt3 opt4 opt5]"],"row":37},{"fixed-arities":[1],"end-row":43,"name-end-col":9,"protocol-ns":"clojure.browser.net","name-end-row":43,"name-row":43,"ns":"clojure.browser.net","name":"close","defined-by":"cljs.core/defprotocol","protocol-name":"IConnection","filename":"clojure/browser/net.cljs","col":3,"name-col":4,"end-col":17,"arglist-strs":["[this]"],"row":43},{"end-row":80,"name-end-col":23,"name-end-row":74,"name-row":74,"ns":"clojure.browser.net","name":"xpc-config-fields","defined-by":"cljs.core/def","filename":"clojure/browser/net.cljs","col":1,"name-col":6,"end-col":32,"row":74},{"fixed-arities":[0],"end-row":85,"name-end-col":21,"name-end-row":82,"name-row":82,"ns":"clojure.browser.net","name":"xhr-connection","defined-by":"cljs.core/defn","filename":"clojure/browser/net.cljs","col":1,"name-col":7,"end-col":12,"arglist-strs":["[]"],"doc":"Returns an XhrIo connection","row":82},{"end-row":88,"name-end-col":31,"name-end-row":87,"name-row":87,"ns":"clojure.browser.net","name":"ICrossPageChannel","defined-by":"cljs.core/defprotocol","filename":"clojure/browser/net.cljs","col":1,"name-col":14,"end-col":81,"row":87},{"fixed-arities":[4,3],"end-row":88,"name-end-col":20,"protocol-ns":"clojure.browser.net","name-end-row":88,"name-row":88,"ns":"clojure.browser.net","name":"register-service","defined-by":"cljs.core/defprotocol","protocol-name":"ICrossPageChannel","filename":"clojure/browser/net.cljs","col":3,"name-col":4,"end-col":80,"arglist-strs":["[this service-name fn]","[this service-name fn encode-json?]"],"row":88},{"fixed-arities":[0,1],"end-row":139,"name-end-col":21,"name-end-row":117,"name-row":117,"ns":"clojure.browser.net","name":"xpc-connection","defined-by":"cljs.core/defn","filename":"clojure/browser/net.cljs","col":1,"name-col":7,"end-col":25,"arglist-strs":["[]","[config]"],"doc":"When passed with a config hash-map, returns a parent\n  CrossPageChannel object. Keys in the config hash map are downcased\n  versions of the goog.net.xpc.CfgFields enum keys,\n  e.g. goog.net.xpc.CfgFields.PEER_URI becomes :peer_uri in the config\n  hash.\n\n  When passed with no args, creates a child CrossPageChannel object,\n  and the config is automatically taken from the URL param 'xpc', as\n  per the CrossPageChannel API.","row":117},{"end-row":145,"name-end-col":24,"name-end-row":144,"name-row":144,"ns":"clojure.browser.net","name":"IWebSocket","defined-by":"cljs.core/defprotocol","filename":"clojure/browser/net.cljs","col":1,"name-col":14,"end-col":18,"row":144},{"fixed-arities":[1],"end-row":145,"name-end-col":9,"protocol-ns":"clojure.browser.net","name-end-row":145,"name-row":145,"ns":"clojure.browser.net","name":"open?","defined-by":"cljs.core/defprotocol","protocol-name":"IWebSocket","filename":"clojure/browser/net.cljs","col":3,"name-col":4,"end-col":17,"arglist-strs":["[this]"],"row":145},{"fixed-arities":[0,1,2],"end-row":181,"name-end-col":27,"name-end-row":175,"name-row":175,"ns":"clojure.browser.net","name":"websocket-connection","defined-by":"cljs.core/defn","filename":"clojure/browser/net.cljs","col":1,"name-col":7,"end-col":54,"arglist-strs":["[]","[auto-reconnect?]","[auto-reconnect? next-reconnect-fn]"],"row":175}]
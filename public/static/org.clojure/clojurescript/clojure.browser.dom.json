[{"end-row":15,"meta":null,"name-end-col":13,"name-end-row":13,"name-row":13,"ns":"clojure.browser.dom","name":"append","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":10,"arglist-strs":["[parent & children]"],"varargs-min-arity":1,"row":13},{"end-row":18,"meta":null,"name-end-col":24,"name-end-row":17,"name-row":17,"ns":"clojure.browser.dom","name":"DOMBuilder","defined-by":"cljs.core/defprotocol","filename":"clojure/browser/dom.cljs","col":1,"name-col":14,"end-col":68,"row":17},{"fixed-arities":[1,3,2],"end-row":18,"meta":null,"name-end-col":12,"protocol-ns":"clojure.browser.dom","name-end-row":18,"name-row":18,"ns":"clojure.browser.dom","name":"-element","defined-by":"cljs.core/defprotocol","protocol-name":"DOMBuilder","filename":"clojure/browser/dom.cljs","col":3,"name-col":4,"end-col":67,"arglist-strs":["[this]","[this attrs-or-children]","[this attrs children]"],"row":18},{"end-row":21,"meta":null,"name-end-col":10,"name-end-row":20,"name-row":20,"ns":"clojure.browser.dom","name":"log","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":41,"arglist-strs":["[& args]"],"varargs-min-arity":0,"row":20},{"fixed-arities":[1],"end-row":24,"meta":null,"name-end-col":14,"name-end-row":23,"name-row":23,"ns":"clojure.browser.dom","name":"log-obj","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":25,"arglist-strs":["[obj]"],"row":23},{"fixed-arities":[1],"end-row":90,"meta":null,"name-end-col":14,"name-end-row":81,"name-row":81,"ns":"clojure.browser.dom","name":"element","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":41,"arglist-strs":["[tag-or-text]","[tag & children]"],"varargs-min-arity":1,"row":81},{"fixed-arities":[1],"end-row":96,"meta":null,"name-end-col":22,"name-end-row":92,"name-row":92,"ns":"clojure.browser.dom","name":"remove-children","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":40,"arglist-strs":["[id]"],"doc":"Remove all children from the element with the passed id.","row":92},{"fixed-arities":[1],"end-row":99,"meta":null,"name-end-col":18,"name-end-row":98,"name-row":98,"ns":"clojure.browser.dom","name":"get-element","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":31,"arglist-strs":["[id]"],"row":98},{"fixed-arities":[1],"end-row":102,"meta":null,"name-end-col":16,"name-end-row":101,"name-row":101,"ns":"clojure.browser.dom","name":"html->dom","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":35,"arglist-strs":["[s]"],"row":101},{"fixed-arities":[3],"end-row":105,"meta":null,"name-end-col":16,"name-end-row":104,"name-row":104,"ns":"clojure.browser.dom","name":"insert-at","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":43,"arglist-strs":["[parent child index]"],"row":104},{"fixed-arities":[1],"end-row":112,"meta":null,"name-end-col":21,"name-end-row":107,"name-row":107,"ns":"clojure.browser.dom","name":"ensure-element","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":18,"arglist-strs":["[e]"],"doc":"Coerce the argument to a dom element if possible.","row":107},{"fixed-arities":[2],"end-row":122,"meta":null,"name-end-col":19,"name-end-row":114,"name-row":114,"ns":"clojure.browser.dom","name":"replace-node","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":15,"arglist-strs":["[old-node new-node]"],"doc":"Replace old-node with new-node. old-node can be an element or a\n   keyword which is the id of the node to replace.  new-node can be an\n   element or an html string.","row":114},{"fixed-arities":[2],"end-row":129,"meta":null,"name-end-col":15,"name-end-row":124,"name-row":124,"ns":"clojure.browser.dom","name":"set-text","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":46,"arglist-strs":["[e s]"],"doc":"Set the text content for the passed element returning the\n  element. If a keyword is passed in the place of e, the element with\n  that id will be used and returned.","row":124},{"fixed-arities":[1],"end-row":134,"meta":null,"name-end-col":16,"name-end-row":131,"name-row":131,"ns":"clojure.browser.dom","name":"get-value","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":32,"arglist-strs":["[e]"],"doc":"Get the value of an element.","row":131},{"fixed-arities":[2],"end-row":140,"meta":null,"name-end-col":21,"name-end-row":136,"name-row":136,"ns":"clojure.browser.dom","name":"set-properties","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":78,"arglist-strs":["[e m]"],"doc":"Set properties on an element","row":136},{"fixed-arities":[2],"end-row":145,"meta":null,"name-end-col":16,"name-end-row":142,"name-row":142,"ns":"clojure.browser.dom","name":"set-value","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":34,"arglist-strs":["[e v]"],"doc":"Set the value property for an element.","row":142},{"fixed-arities":[1],"end-row":149,"meta":null,"name-end-col":20,"name-end-row":147,"name-row":147,"ns":"clojure.browser.dom","name":"click-element","defined-by":"cljs.core/defn","filename":"clojure/browser/dom.cljs","col":1,"name-col":7,"end-col":34,"arglist-strs":["[e]"],"row":147}]
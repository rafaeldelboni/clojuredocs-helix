[{"fixed-arities":[2],"end-row":29,"meta":{},"name-end-col":21,"name-end-row":17,"private":true,"name-row":17,"ns":"cljs.repl.reflect","name":"dissoc-unless","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L17","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":8,"end-col":23,"arglist-strs":["[m key-set]"],"doc":"Dissoc all keys from map that do not appear in key-set.\n\n    (dissoc-unless {:foo 1 :bar 2} #{:foo})\n    => {:foo 1}","row":17},{"fixed-arities":[1],"end-row":38,"meta":{},"name-end-col":16,"name-end-row":31,"private":true,"name-row":31,"ns":"cljs.repl.reflect","name":"get-meta","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L31","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":8,"end-col":58,"arglist-strs":["[sym]"],"row":31},{"fixed-arities":[1],"end-row":46,"meta":{},"name-end-col":18,"name-end-row":40,"name-row":40,"ns":"cljs.repl.reflect","name":"macroexpand","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L40","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":7,"end-col":29,"arglist-strs":["[form]"],"doc":"Fully expands a cljs macro form.","row":40},{"end-row":49,"meta":{},"name-end-col":18,"name-end-row":48,"private":true,"name-row":48,"ns":"cljs.repl.reflect","name":"url-decode","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L48","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":8,"end-col":62,"arglist-strs":["[encoded & [encoding]]"],"varargs-min-arity":1,"row":48},{"end-row":51,"meta":{},"name-end-col":21,"name-end-row":51,"name-row":51,"ns":"cljs.repl.reflect","name":"read-url-string","defined-by":"clojure.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L51","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":6,"end-col":52,"row":51},{"fixed-arities":[1],"end-row":59,"meta":{},"name-end-col":18,"name-end-row":53,"name-row":53,"ns":"cljs.repl.reflect","name":"parse-param","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L53","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":7,"end-col":25,"arglist-strs":["[path]"],"doc":"Parses the query parameter of a path of the form \"/reflect?var=foo\"\n  into the vector [\"var\" \"foo\"].","row":53},{"fixed-arities":[2],"end-row":67,"meta":{},"name-end-col":26,"name-end-row":61,"private":true,"name-row":61,"ns":"cljs.repl.reflect","name":"compile-and-return","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L61","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":8,"end-col":60,"arglist-strs":["[conn form]"],"doc":"Compiles a form to javascript and returns it on conn.","row":61},{"end-row":69,"meta":{},"name-end-col":31,"name-end-row":69,"name-row":69,"ns":"cljs.repl.reflect","name":"handle-reflect-query","defined-by":"clojure.core/defmulti","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/repl/reflect.clj#L69","filename":"/src/main/clojure/cljs/repl/reflect.clj","col":1,"name-col":11,"end-col":59,"row":69}]
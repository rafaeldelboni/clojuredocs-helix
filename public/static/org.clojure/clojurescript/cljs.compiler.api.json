[{"fixed-arities":[0,1,3,2],"end-row":47,"meta":{},"name-end-col":21,"name-end-row":35,"name-row":35,"ns":"cljs.compiler.api","name":"with-core-cljs","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L35","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":43,"arglist-strs":["[]","[opts]","[opts body]","[state opts body]"],"doc":"Ensure that core.cljs has been loaded.","row":35},{"fixed-arities":[4,3,2],"end-row":57,"meta":{},"name-end-col":28,"name-end-row":49,"name-row":49,"ns":"cljs.compiler.api","name":"requires-compilation?","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L49","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":54,"arglist-strs":["[src dest]","[src dest opts]","[state src dest opts]"],"doc":"Return true if the src file requires compilation.","row":49},{"fixed-arities":[1],"end-row":86,"meta":{},"name-end-col":20,"name-end-row":83,"name-row":83,"ns":"cljs.compiler.api","name":"cljs-files-in","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L83","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":28,"arglist-strs":["[dir]"],"doc":"Return a sequence of all .cljs and .cljc files in the given directory.","row":83},{"fixed-arities":[1,4,3,2],"end-row":101,"meta":{},"name-end-col":19,"name-end-row":88,"name-row":88,"ns":"cljs.compiler.api","name":"compile-root","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L88","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":55,"arglist-strs":["[src-dir]","[src-dir target-dir]","[src-dir target-dir opts]","[state src-dir target-dir opts]"],"doc":"Looks recursively in src-dir for .cljs files and compiles them to\n   .js files. If target-dir is provided, output will go into this\n   directory mirroring the source directory structure. Returns a list\n   of maps containing information about each file which was compiled\n   in dependency order.","row":88},{"fixed-arities":[1,4,3,2],"end-row":81,"meta":{},"name-end-col":19,"name-end-row":59,"name-row":59,"ns":"cljs.compiler.api","name":"compile-file","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L59","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":45,"arglist-strs":["[src]","[src dest]","[src dest opts]","[state src dest opts]"],"doc":"Compiles src to a file of the same name, but with a .js extension,\n   in the src file's directory.\n\n   With dest argument, write file to provided location. If the dest\n   argument is a file outside the source tree, missing parent\n   directories will be created. The src file will only be compiled if\n   the dest file has an older modification time.\n\n   Both src and dest may be either a String or a File.\n\n   Returns a map containing {:ns .. :provides .. :requires .. :file ..}.\n   If the file was not compiled returns only {:file ...}","row":59},{"fixed-arities":[1,2],"end-row":33,"meta":{},"name-end-col":11,"name-end-row":26,"name-row":26,"ns":"cljs.compiler.api","name":"emit","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L26","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":27,"arglist-strs":["[ast]","[state ast]"],"doc":"Given an AST node generated by the analyzer emit JavaScript as a string.","row":26},{"fixed-arities":[1],"end-row":24,"meta":{},"name-end-col":12,"name-end-row":21,"name-row":21,"ns":"cljs.compiler.api","name":"munge","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/compiler/api.clj#L21","lang":[],"filename":"/src/main/clojure/cljs/compiler/api.clj","col":1,"name-col":7,"end-col":18,"arglist-strs":["[s]"],"doc":"Munge a symbol or string. Preserves the original type.","row":21}]
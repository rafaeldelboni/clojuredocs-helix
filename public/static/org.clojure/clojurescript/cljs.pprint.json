[{"end-row":25,"meta":{},"name-end-col":29,"name-end-row":18,"name-row":18,"ns":"cljs.pprint","name":"with-pretty-writer","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L18","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":37,"arglist-strs":["[base-writer & body]"],"varargs-min-arity":1,"row":18},{"fixed-arities":[1],"end-row":31,"meta":{},"name-end-col":15,"name-end-row":28,"name-row":28,"ns":"cljs.pprint","name":"getf","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L28","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":20,"arglist-strs":["[sym]"],"doc":"Get the value of the field a named by the argument (which should be a keyword).","row":28},{"fixed-arities":[2],"end-row":38,"meta":{},"name-end-col":15,"name-end-row":35,"name-row":35,"ns":"cljs.pprint","name":"setf","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L35","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":40,"arglist-strs":["[sym new-val]"],"doc":"Set the value of the field SYM to NEW-VAL","row":35},{"end-row":49,"meta":{},"name-end-col":18,"name-end-row":40,"name-row":40,"ns":"cljs.pprint","name":"deftype","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L40","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":91,"arglist-strs":["[type-name & fields]"],"varargs-min-arity":1,"row":40},{"fixed-arities":[2],"end-row":56,"meta":{},"name-end-col":24,"name-end-row":51,"private":true,"name-row":51,"ns":"cljs.pprint","name":"parse-lb-options","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L51","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","col":1,"name-col":8,"end-col":37,"arglist-strs":["[opts body]"],"row":51},{"end-row":80,"meta":{},"name-end-col":31,"name-end-row":58,"name-row":58,"ns":"cljs.pprint","name":"pprint-logical-block","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L58","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":16,"arglist-strs":["[& args]"],"varargs-min-arity":0,"doc":"Execute the body as a pretty printing logical block with output to *out* which\n  must be a pretty printing writer. When used from pprint or cl-format, this can be\n  assumed.\n\n  This function is intended for use when writing custom dispatch functions.\n\n  Before the body, the caller can optionally specify options: :prefix, :per-line-prefix\n  and :suffix.","row":58},{"fixed-arities":[3],"end-row":100,"meta":{},"name-end-col":20,"name-end-row":90,"private":true,"name-row":90,"ns":"cljs.pprint","name":"pll-mod-body","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L90","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","col":1,"name-col":8,"end-col":38,"arglist-strs":["[env var-sym body]"],"row":90},{"end-row":111,"meta":{},"name-end-col":28,"name-end-row":102,"name-row":102,"ns":"cljs.pprint","name":"print-length-loop","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L102","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":46,"arglist-strs":["[bindings & body]"],"varargs-min-arity":1,"doc":"A version of loop that iterates at most *print-length* times. This is designed\n  for use in pretty-printer dispatch functions.","row":102},{"fixed-arities":[1],"end-row":119,"meta":{},"name-end-col":39,"name-end-row":113,"private":true,"name-row":113,"ns":"cljs.pprint","name":"process-directive-table-element","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L113","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","col":1,"name-col":8,"end-col":65,"arglist-strs":["[[char params flags bracket-info & generator-fn]]"],"row":113},{"end-row":125,"meta":{},"name-end-col":16,"name-end-row":122,"private":true,"name-row":122,"ns":"cljs.pprint","name":"defdirectives","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L121","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":3,"end-col":93,"arglist-strs":["[& directives]"],"varargs-min-arity":0,"row":121},{"fixed-arities":[1],"end-row":141,"meta":{},"name-end-col":20,"name-end-row":127,"name-row":127,"ns":"cljs.pprint","name":"formatter","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L127","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":46,"arglist-strs":["[format-in]"],"doc":"Makes a function which can directly run format-in. The function is\nfn [stream & args] ... and returns nil unless the stream is nil (meaning\noutput to a string) in which case it returns the resulting string.\n\nformat-in can be either a control string or a previously compiled format.","row":127},{"fixed-arities":[1],"end-row":155,"meta":{},"name-end-col":24,"name-end-row":143,"name-row":143,"ns":"cljs.pprint","name":"formatter-out","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L143","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":57,"arglist-strs":["[format-in]"],"doc":"Makes a function which can directly run format-in. The function is\nfn [& args] ... and returns nil. This version of the formatter macro is\ndesigned to be used with *out* set to an appropriate Writer. In particular,\nthis is meant to be used as part of a pretty printer dispatch method.\n\nformat-in can be either a control string or a previously compiled format.","row":143},{"end-row":161,"meta":{},"name-end-col":31,"name-end-row":157,"name-row":157,"ns":"cljs.pprint","name":"with-pprint-dispatch","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L157","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":14,"arglist-strs":["[function & body]"],"varargs-min-arity":1,"doc":"Execute body with the pretty print dispatch function bound to function.","row":157},{"fixed-arities":[0],"end-row":167,"meta":{},"name-end-col":13,"name-end-row":163,"name-row":163,"added":"1.2","ns":"cljs.pprint","name":"pp","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L163","lang":"clj","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":31,"arglist-strs":["[]"],"doc":"A convenience macro that pretty prints the last thing output. This is\nexactly equivalent to (pprint *1).","row":163},{"end-row":25,"meta":{},"name-end-col":29,"name-end-row":18,"name-row":18,"ns":"cljs.pprint","name":"with-pretty-writer","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L18","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":37,"arglist-strs":["[base-writer & body]"],"varargs-min-arity":1,"row":18},{"fixed-arities":[1],"end-row":31,"meta":{},"name-end-col":15,"name-end-row":28,"name-row":28,"ns":"cljs.pprint","name":"getf","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L28","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":20,"arglist-strs":["[sym]"],"doc":"Get the value of the field a named by the argument (which should be a keyword).","row":28},{"fixed-arities":[2],"end-row":38,"meta":{},"name-end-col":15,"name-end-row":35,"name-row":35,"ns":"cljs.pprint","name":"setf","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L35","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":40,"arglist-strs":["[sym new-val]"],"doc":"Set the value of the field SYM to NEW-VAL","row":35},{"end-row":49,"meta":{},"name-end-col":18,"name-end-row":40,"name-row":40,"ns":"cljs.pprint","name":"deftype","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L40","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":91,"arglist-strs":["[type-name & fields]"],"varargs-min-arity":1,"row":40},{"fixed-arities":[2],"end-row":56,"meta":{},"name-end-col":24,"name-end-row":51,"private":true,"name-row":51,"ns":"cljs.pprint","name":"parse-lb-options","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L51","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","col":1,"name-col":8,"end-col":37,"arglist-strs":["[opts body]"],"row":51},{"end-row":80,"meta":{},"name-end-col":31,"name-end-row":58,"name-row":58,"ns":"cljs.pprint","name":"pprint-logical-block","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L58","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":16,"arglist-strs":["[& args]"],"varargs-min-arity":0,"doc":"Execute the body as a pretty printing logical block with output to *out* which\n  must be a pretty printing writer. When used from pprint or cl-format, this can be\n  assumed.\n\n  This function is intended for use when writing custom dispatch functions.\n\n  Before the body, the caller can optionally specify options: :prefix, :per-line-prefix\n  and :suffix.","row":58},{"fixed-arities":[2],"end-row":88,"meta":{},"name-end-col":21,"name-end-row":83,"name-row":83,"ns":"cljs.pprint","name":"macroexpand","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L83","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","col":4,"name-col":10,"end-col":18,"arglist-strs":["[env form]"],"row":83},{"fixed-arities":[3],"end-row":100,"meta":{},"name-end-col":20,"name-end-row":90,"private":true,"name-row":90,"ns":"cljs.pprint","name":"pll-mod-body","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L90","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","col":1,"name-col":8,"end-col":38,"arglist-strs":["[env var-sym body]"],"row":90},{"end-row":111,"meta":{},"name-end-col":28,"name-end-row":102,"name-row":102,"ns":"cljs.pprint","name":"print-length-loop","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L102","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":46,"arglist-strs":["[bindings & body]"],"varargs-min-arity":1,"doc":"A version of loop that iterates at most *print-length* times. This is designed\n  for use in pretty-printer dispatch functions.","row":102},{"fixed-arities":[1],"end-row":119,"meta":{},"name-end-col":39,"name-end-row":113,"private":true,"name-row":113,"ns":"cljs.pprint","name":"process-directive-table-element","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L113","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","col":1,"name-col":8,"end-col":65,"arglist-strs":["[[char params flags bracket-info & generator-fn]]"],"row":113},{"end-row":125,"meta":{},"name-end-col":16,"name-end-row":122,"private":true,"name-row":122,"ns":"cljs.pprint","name":"defdirectives","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L121","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":3,"end-col":93,"arglist-strs":["[& directives]"],"varargs-min-arity":0,"row":121},{"fixed-arities":[1],"end-row":141,"meta":{},"name-end-col":20,"name-end-row":127,"name-row":127,"ns":"cljs.pprint","name":"formatter","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L127","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":46,"arglist-strs":["[format-in]"],"doc":"Makes a function which can directly run format-in. The function is\nfn [stream & args] ... and returns nil unless the stream is nil (meaning\noutput to a string) in which case it returns the resulting string.\n\nformat-in can be either a control string or a previously compiled format.","row":127},{"fixed-arities":[1],"end-row":155,"meta":{},"name-end-col":24,"name-end-row":143,"name-row":143,"ns":"cljs.pprint","name":"formatter-out","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L143","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":57,"arglist-strs":["[format-in]"],"doc":"Makes a function which can directly run format-in. The function is\nfn [& args] ... and returns nil. This version of the formatter macro is\ndesigned to be used with *out* set to an appropriate Writer. In particular,\nthis is meant to be used as part of a pretty printer dispatch method.\n\nformat-in can be either a control string or a previously compiled format.","row":143},{"end-row":161,"meta":{},"name-end-col":31,"name-end-row":157,"name-row":157,"ns":"cljs.pprint","name":"with-pprint-dispatch","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L157","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":14,"arglist-strs":["[function & body]"],"varargs-min-arity":1,"doc":"Execute body with the pretty print dispatch function bound to function.","row":157},{"fixed-arities":[0],"end-row":167,"meta":{},"name-end-col":13,"name-end-row":163,"name-row":163,"added":"1.2","ns":"cljs.pprint","name":"pp","defined-by":"cljs.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljc#L163","lang":"cljs","filename":"/src/main/cljs/cljs/pprint.cljc","macro":true,"col":1,"name-col":11,"end-col":31,"arglist-strs":["[]"],"doc":"A convenience macro that pretty prints the last thing output. This is\nexactly equivalent to (pprint *1).","row":163},{"end-row":26,"meta":{},"name-end-col":13,"name-end-row":25,"private":true,"name-row":25,"ns":"cljs.pprint","name":"print","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L25","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":41,"arglist-strs":["[& more]"],"varargs-min-arity":0,"row":25},{"end-row":30,"meta":{},"name-end-col":15,"name-end-row":28,"private":true,"name-row":28,"ns":"cljs.pprint","name":"println","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L28","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":27,"arglist-strs":["[& more]"],"varargs-min-arity":0,"row":28},{"fixed-arities":[1],"end-row":42,"meta":{},"name-end-col":18,"name-end-row":32,"private":true,"name-row":32,"ns":"cljs.pprint","name":"print-char","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L32","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":34,"arglist-strs":["[c]"],"row":32},{"end-row":45,"meta":{},"name-end-col":20,"name-end-row":44,"private":true,"name-row":44,"ns":"cljs.pprint","name":"pr","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L44","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":18,"end-col":38,"arglist-strs":["[& more]"],"varargs-min-arity":0,"row":44},{"end-row":49,"meta":{},"name-end-col":11,"name-end-row":47,"private":true,"name-row":47,"ns":"cljs.pprint","name":"prn","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L47","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":27,"arglist-strs":["[& more]"],"varargs-min-arity":0,"row":47},{"fixed-arities":[1],"end-row":61,"meta":{},"name-end-col":13,"name-end-row":55,"name-row":55,"ns":"cljs.pprint","name":"float?","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L55","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":57,"arglist-strs":["[n]"],"doc":"Returns true if n is an float.","row":55},{"fixed-arities":[1],"end-row":69,"meta":{},"name-end-col":16,"name-end-row":63,"name-row":63,"ns":"cljs.pprint","name":"char-code","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L63","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":81,"arglist-strs":["[c]"],"doc":"Convert char to int","row":63},{"fixed-arities":[3],"end-row":84,"meta":{},"name-end-col":27,"name-end-row":75,"private":true,"name-row":75,"ns":"cljs.pprint","name":"map-passing-context","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L75","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":60,"arglist-strs":["[func initial-context lis]"],"row":75},{"fixed-arities":[2],"end-row":92,"meta":{},"name-end-col":15,"name-end-row":86,"private":true,"name-row":86,"ns":"cljs.pprint","name":"consume","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L86","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":50,"arglist-strs":["[func initial-context]"],"row":86},{"fixed-arities":[2],"end-row":100,"meta":{},"name-end-col":21,"name-end-row":94,"private":true,"name-row":94,"ns":"cljs.pprint","name":"consume-while","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L94","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":50,"arglist-strs":["[func initial-context]"],"row":94},{"fixed-arities":[1],"end-row":107,"meta":{},"name-end-col":17,"name-end-row":102,"private":true,"name-row":102,"ns":"cljs.pprint","name":"unzip-map","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L102","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":44,"arglist-strs":["[m]"],"row":102},{"fixed-arities":[2],"end-row":111,"meta":{},"name-end-col":17,"name-end-row":109,"private":true,"name-row":109,"ns":"cljs.pprint","name":"tuple-map","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L109","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":40,"arglist-strs":["[m v1]"],"row":109},{"fixed-arities":[2],"end-row":122,"meta":{},"name-end-col":13,"name-end-row":113,"private":true,"name-row":113,"ns":"cljs.pprint","name":"rtrim","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L113","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":11,"arglist-strs":["[s c]"],"row":113},{"fixed-arities":[2],"end-row":132,"meta":{},"name-end-col":13,"name-end-row":124,"private":true,"name-row":124,"ns":"cljs.pprint","name":"ltrim","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L124","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":11,"arglist-strs":["[s c]"],"row":124},{"fixed-arities":[2],"end-row":142,"meta":{},"name-end-col":20,"name-end-row":134,"private":true,"name-row":134,"ns":"cljs.pprint","name":"prefix-count","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L134","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":30,"arglist-strs":["[aseq val]"],"row":134},{"end-row":146,"meta":{},"name-end-col":26,"name-end-row":145,"name-row":145,"ns":"cljs.pprint","name":"IPrettyFlush","defined-by":"cljs.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L145","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":14,"end-col":19,"row":145},{"fixed-arities":[1],"end-row":146,"meta":{},"name-end-col":12,"protocol-ns":"cljs.pprint","name-end-row":146,"name-row":146,"ns":"cljs.pprint","name":"-ppflush","defined-by":"cljs.core/defprotocol","protocol-name":"IPrettyFlush","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L146","filename":"/src/main/cljs/cljs/pprint.cljs","col":3,"name-col":4,"end-col":18,"arglist-strs":["[pp]"],"row":146},{"end-row":152,"meta":{},"name-end-col":53,"name-end-row":152,"private":true,"name-row":152,"ns":"cljs.pprint","name":"*default-page-width*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L152","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":57,"row":152},{"fixed-arities":[2],"end-row":155,"meta":{},"name-end-col":17,"name-end-row":154,"private":true,"name-row":154,"ns":"cljs.pprint","name":"get-field","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L154","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[this sym]"],"row":154},{"fixed-arities":[3],"end-row":158,"meta":{},"name-end-col":17,"name-end-row":157,"private":true,"name-row":157,"ns":"cljs.pprint","name":"set-field","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L157","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":35,"arglist-strs":["[this sym new-val]"],"row":157},{"fixed-arities":[1],"end-row":161,"meta":{},"name-end-col":18,"name-end-row":160,"private":true,"name-row":160,"ns":"cljs.pprint","name":"get-column","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L160","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":25,"arglist-strs":["[this]"],"row":160},{"fixed-arities":[1],"end-row":164,"meta":{},"name-end-col":16,"name-end-row":163,"private":true,"name-row":163,"ns":"cljs.pprint","name":"get-line","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L163","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":26,"arglist-strs":["[this]"],"row":163},{"fixed-arities":[1],"end-row":167,"meta":{},"name-end-col":22,"name-end-row":166,"private":true,"name-row":166,"ns":"cljs.pprint","name":"get-max-column","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L166","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":25,"arglist-strs":["[this]"],"row":166},{"fixed-arities":[2],"end-row":171,"meta":{},"name-end-col":22,"name-end-row":169,"private":true,"name-row":169,"ns":"cljs.pprint","name":"set-max-column","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L169","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":7,"arglist-strs":["[this new-max]"],"row":169},{"fixed-arities":[1],"end-row":174,"meta":{},"name-end-col":18,"name-end-row":173,"private":true,"name-row":173,"ns":"cljs.pprint","name":"get-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L173","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":26,"arglist-strs":["[this]"],"row":173},{"fixed-arities":[2],"end-row":183,"meta":{},"name-end-col":20,"name-end-row":177,"private":true,"name-row":177,"ns":"cljs.pprint","name":"c-write-char","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L177","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":37,"arglist-strs":["[this c]"],"row":177},{"fixed-arities":[1,2],"end-row":215,"meta":{},"name-end-col":21,"name-end-row":185,"private":true,"name-row":185,"ns":"cljs.pprint","name":"column-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L185","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":39,"arglist-strs":["[writer]","[writer max-columns]"],"row":185},{"end-row":225,"meta":{},"name-end-col":48,"name-end-row":225,"name-row":225,"ns":"cljs.pprint","name":"get-miser-width","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L225","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":49,"row":225},{"end-row":235,"meta":{},"name-end-col":42,"name-end-row":231,"private":true,"name-row":231,"ns":"cljs.pprint","name":"logical-block","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L231","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":29,"end-col":28,"row":231},{"fixed-arities":[10],"end-row":235,"meta":{},"name-end-col":42,"name-end-row":231,"private":true,"name-row":231,"ns":"cljs.pprint","name":"->logical-block","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L231","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":29,"end-col":28,"arglist-strs":["[parent section start-col indent done-nl intra-block-nl prefix per-line-prefix suffix logical-block-callback]"],"row":231},{"fixed-arities":[1],"end-row":235,"meta":{},"name-end-col":42,"name-end-row":231,"private":true,"name-row":231,"ns":"cljs.pprint","name":"map->logical-block","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L231","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":29,"end-col":28,"arglist-strs":["[m]"],"row":231},{"fixed-arities":[2],"end-row":242,"meta":{},"name-end-col":17,"name-end-row":237,"private":true,"name-row":237,"ns":"cljs.pprint","name":"ancestor?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L237","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":39,"arglist-strs":["[parent child]"],"row":237},{"fixed-arities":[1],"end-row":248,"meta":{},"name-end-col":21,"name-end-row":244,"private":true,"name-row":244,"ns":"cljs.pprint","name":"buffer-length","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L244","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":11,"arglist-strs":["[l]"],"row":244},{"fixed-arities":[0],"end-row":262,"meta":{},"name-end-col":26,"name-end-row":262,"private":true,"name-row":262,"ns":"cljs.pprint","name":"pp-newline","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L262","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":16,"end-col":40,"arglist-strs":["[]"],"row":262},{"end-row":264,"meta":{},"name-end-col":17,"name-end-row":264,"name-row":264,"ns":"cljs.pprint","name":"emit-nl","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L264","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":10,"end-col":18,"row":264},{"end-row":266,"meta":{},"name-end-col":39,"name-end-row":266,"private":true,"name-row":266,"ns":"cljs.pprint","name":"write-token","defined-by":"cljs.core/defmulti","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L266","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":28,"end-col":56,"row":266},{"fixed-arities":[3],"end-row":312,"meta":{},"name-end-col":20,"name-end-row":302,"private":true,"name-row":302,"ns":"cljs.pprint","name":"write-tokens","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L302","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":45,"arglist-strs":["[this tokens force-trailing-whitespace]"],"row":302},{"fixed-arities":[2],"end-row":323,"meta":{},"name-end-col":19,"name-end-row":319,"private":true,"name-row":319,"ns":"cljs.pprint","name":"tokens-fit?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L319","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":73,"arglist-strs":["[this tokens]"],"row":319},{"fixed-arities":[3],"end-row":327,"meta":{},"name-end-col":18,"name-end-row":325,"private":true,"name-row":325,"ns":"cljs.pprint","name":"linear-nl?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L325","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":41,"arglist-strs":["[this lb section]"],"row":325},{"fixed-arities":[3],"end-row":334,"meta":{},"name-end-col":17,"name-end-row":329,"private":true,"name-row":329,"ns":"cljs.pprint","name":"miser-nl?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L329","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":41,"arglist-strs":["[this lb section]"],"row":329},{"end-row":336,"meta":{},"name-end-col":36,"name-end-row":336,"private":true,"name-row":336,"ns":"cljs.pprint","name":"emit-nl?","defined-by":"cljs.core/defmulti","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L336","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":28,"end-col":62,"row":336},{"fixed-arities":[1],"end-row":364,"meta":{},"name-end-col":19,"name-end-row":359,"private":true,"name-row":359,"ns":"cljs.pprint","name":"get-section","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L359","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":58,"arglist-strs":["[buffer]"],"row":359},{"fixed-arities":[1],"end-row":372,"meta":{},"name-end-col":23,"name-end-row":366,"private":true,"name-row":366,"ns":"cljs.pprint","name":"get-sub-section","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L366","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":14,"arglist-strs":["[buffer]"],"row":366},{"fixed-arities":[1],"end-row":381,"meta":{},"name-end-col":23,"name-end-row":374,"private":true,"name-row":374,"ns":"cljs.pprint","name":"update-nl-state","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L374","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":35,"arglist-strs":["[lb]"],"row":374},{"fixed-arities":[2],"end-row":392,"meta":{},"name-end-col":15,"name-end-row":383,"private":true,"name-row":383,"ns":"cljs.pprint","name":"emit-nl","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L383","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":27,"arglist-strs":["[this nl]"],"row":383},{"fixed-arities":[1],"end-row":396,"meta":{},"name-end-col":24,"name-end-row":394,"private":true,"name-row":394,"ns":"cljs.pprint","name":"split-at-newline","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L394","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":44,"arglist-strs":["[tokens]"],"row":394},{"fixed-arities":[2],"end-row":422,"meta":{},"name-end-col":26,"name-end-row":400,"private":true,"name-row":400,"ns":"cljs.pprint","name":"write-token-string","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L400","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":22,"arglist-strs":["[this tokens]"],"row":400},{"fixed-arities":[1],"end-row":430,"meta":{},"name-end-col":18,"name-end-row":424,"private":true,"name-row":424,"ns":"cljs.pprint","name":"write-line","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L424","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":34,"arglist-strs":["[this]"],"row":424},{"fixed-arities":[2],"end-row":437,"meta":{},"name-end-col":21,"name-end-row":434,"private":true,"name-row":434,"ns":"cljs.pprint","name":"add-to-buffer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L434","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":24,"arglist-strs":["[this token]"],"row":434},{"fixed-arities":[1],"end-row":445,"meta":{},"name-end-col":29,"name-end-row":440,"private":true,"name-row":440,"ns":"cljs.pprint","name":"write-buffered-output","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L440","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":27,"arglist-strs":["[this]"],"row":440},{"fixed-arities":[1],"end-row":450,"meta":{},"name-end-col":25,"name-end-row":447,"private":true,"name-row":447,"ns":"cljs.pprint","name":"write-white-space","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L447","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":39,"arglist-strs":["[this]"],"row":447},{"fixed-arities":[2],"end-row":477,"meta":{},"name-end-col":27,"name-end-row":454,"private":true,"name-row":454,"ns":"cljs.pprint","name":"write-initial-lines","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L454","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":25,"arglist-strs":["[this s]"],"row":454},{"fixed-arities":[2],"end-row":489,"meta":{},"name-end-col":20,"name-end-row":479,"private":true,"name-row":479,"ns":"cljs.pprint","name":"p-write-char","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L479","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":79,"arglist-strs":["[this c]"],"row":479},{"fixed-arities":[3],"end-row":546,"meta":{},"name-end-col":21,"name-end-row":495,"private":true,"name-row":495,"ns":"cljs.pprint","name":"pretty-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L495","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":10,"arglist-strs":["[writer max-columns miser-width]"],"row":495},{"fixed-arities":[4],"end-row":570,"meta":{},"name-end-col":19,"name-end-row":552,"private":true,"name-row":552,"ns":"cljs.pprint","name":"start-block","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L552","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":71,"arglist-strs":["[this prefix per-line-prefix suffix]"],"row":552},{"fixed-arities":[1],"end-row":585,"meta":{},"name-end-col":17,"name-end-row":572,"private":true,"name-row":572,"ns":"cljs.pprint","name":"end-block","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L572","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":42,"arglist-strs":["[this]"],"row":572},{"fixed-arities":[2],"end-row":590,"meta":{},"name-end-col":10,"name-end-row":587,"private":true,"name-row":587,"ns":"cljs.pprint","name":"nl","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L587","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":75,"arglist-strs":["[this type]"],"row":587},{"fixed-arities":[3],"end-row":602,"meta":{},"name-end-col":14,"name-end-row":592,"private":true,"name-row":592,"ns":"cljs.pprint","name":"indent","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L592","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":79,"arglist-strs":["[this relative-to offset]"],"row":592},{"fixed-arities":[1],"end-row":605,"meta":{},"name-end-col":23,"name-end-row":604,"private":true,"name-row":604,"ns":"cljs.pprint","name":"get-miser-width","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L604","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":23,"arglist-strs":["[this]"],"row":604},{"end-row":618,"meta":{},"name-end-col":16,"name-end-row":618,"name-row":618,"ns":"cljs.pprint","name":"*print-pretty*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L616","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":2,"end-col":22,"doc":"Bind to true if you want write to use pretty printing","row":616},{"end-row":624,"meta":{},"name-end-col":25,"name-end-row":624,"name-row":624,"added":"1.2","ns":"cljs.pprint","name":"*print-pprint-dispatch*","defined-by":"cljs.core/defonce","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L620","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":2,"end-col":30,"doc":"The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.","row":620},{"end-row":631,"meta":{},"name-end-col":22,"name-end-row":631,"name-row":631,"added":"1.2","ns":"cljs.pprint","name":"*print-right-margin*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L626","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":2,"end-col":26,"doc":"Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.","row":626},{"end-row":638,"meta":{},"name-end-col":21,"name-end-row":638,"name-row":638,"added":"1.2","ns":"cljs.pprint","name":"*print-miser-width*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L633","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":2,"end-col":25,"doc":"The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.","row":633},{"end-row":644,"meta":{},"name-end-col":14,"name-end-row":644,"private":true,"name-row":644,"ns":"cljs.pprint","name":"*print-lines*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L641","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":19,"doc":"Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)","row":641},{"end-row":650,"meta":{},"name-end-col":15,"name-end-row":650,"private":true,"name-row":650,"ns":"cljs.pprint","name":"*print-circle*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L647","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":20,"doc":"Mark circular structures (N.B. This is not yet used)","row":647},{"end-row":656,"meta":{},"name-end-col":15,"name-end-row":656,"private":true,"name-row":656,"ns":"cljs.pprint","name":"*print-shared*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L653","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":20,"doc":"Mark repeated structures rather than repeat them (N.B. This is not yet used)","row":653},{"end-row":662,"meta":{},"name-end-col":28,"name-end-row":662,"name-row":662,"added":"1.2","ns":"cljs.pprint","name":"*print-suppress-namespaces*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L658","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":33,"doc":"Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions","row":658},{"end-row":671,"meta":{},"name-end-col":14,"name-end-row":671,"name-row":671,"added":"1.2","ns":"cljs.pprint","name":"*print-radix*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L666","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":19,"doc":"Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ","row":666},{"end-row":676,"meta":{},"name-end-col":13,"name-end-row":676,"name-row":676,"added":"1.2","ns":"cljs.pprint","name":"*print-base*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L673","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":17,"doc":"The base to use for printing integers and rationals.","row":673},{"end-row":683,"meta":{},"name-end-col":48,"name-end-row":683,"private":true,"name-row":683,"ns":"cljs.pprint","name":"*current-level*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L683","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":51,"row":683},{"end-row":685,"meta":{},"name-end-col":49,"name-end-row":685,"private":true,"name-row":685,"ns":"cljs.pprint","name":"*current-length*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L685","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":54,"row":685},{"end-row":691,"meta":{},"name-end-col":50,"name-end-row":691,"name-row":691,"ns":"cljs.pprint","name":"format-simple-number","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L691","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":30,"end-col":51,"row":691},{"fixed-arities":[2],"end-row":716,"meta":{},"name-end-col":17,"name-end-row":713,"private":true,"name-row":713,"ns":"cljs.pprint","name":"table-ize","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L713","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":25,"arglist-strs":["[t m]"],"row":713},{"fixed-arities":[1],"end-row":720,"meta":{},"name-end-col":22,"name-end-row":718,"private":true,"name-row":718,"ns":"cljs.pprint","name":"pretty-writer?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L718","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":56,"arglist-strs":["[x]"],"doc":"Return true iff x is a PrettyWriter","row":718},{"fixed-arities":[3],"end-row":725,"meta":{},"name-end-col":26,"name-end-row":722,"private":true,"name-row":722,"ns":"cljs.pprint","name":"make-pretty-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L722","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":56,"arglist-strs":["[base-writer right-margin miser-width]"],"doc":"Wrap base-writer in a PrettyWriter with the specified right-margin and miser-width","row":722},{"fixed-arities":[1],"end-row":749,"meta":{},"name-end-col":16,"name-end-row":727,"name-row":727,"ns":"cljs.pprint","name":"write-out","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L727","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":21,"arglist-strs":["[object]"],"doc":"Write an object to *out* subject to the current bindings of the printer control\nvariables. Use the kw-args argument to override individual variables for this call (and\nany recursive calls).\n\n*out* must be a PrettyWriter if pretty printing is enabled. This is the responsibility\nof the caller.\n\nThis method is primarily intended for use by pretty print dispatch functions that\nalready know that the pretty printer will have set up their environment appropriately.\nNormal library clients should use the standard \"write\" interface. ","row":727},{"end-row":812,"meta":{},"name-end-col":12,"name-end-row":751,"name-row":751,"ns":"cljs.pprint","name":"write","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L751","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":27,"arglist-strs":["[object & kw-args]"],"varargs-min-arity":1,"doc":"Write an object subject to the current bindings of the printer control variables.\nUse the kw-args argument to override individual variables for this call (and any\nrecursive calls). Returns the string result if :stream is nil or nil otherwise.\n\nThe following keyword arguments can be passed with values:\n  Keyword              Meaning                              Default value\n  :stream              Writer for output or nil             true (indicates *out*)\n  :base                Base to use for writing rationals    Current value of *print-base*\n  :circle*             If true, mark circular structures    Current value of *print-circle*\n  :length              Maximum elements to show in sublists Current value of *print-length*\n  :level               Maximum depth                        Current value of *print-level*\n  :lines*              Maximum lines of output              Current value of *print-lines*\n  :miser-width         Width to enter miser mode            Current value of *print-miser-width*\n  :dispatch            The pretty print dispatch function   Current value of *print-pprint-dispatch*\n  :pretty              If true, do pretty printing          Current value of *print-pretty*\n  :radix               If true, prepend a radix specifier   Current value of *print-radix*\n  :readably*           If true, print readably              Current value of *print-readably*\n  :right-margin        The column for the right margin      Current value of *print-right-margin*\n  :suppress-namespaces If true, no namespaces in symbols    Current value of *print-suppress-namespaces*\n\n  * = not yet supported\n","row":751},{"fixed-arities":[1,2],"end-row":825,"meta":{},"name-end-col":13,"name-end-row":814,"name-row":814,"ns":"cljs.pprint","name":"pprint","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L814","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":53,"arglist-strs":["[object]","[object writer]"],"row":814},{"fixed-arities":[1],"end-row":830,"meta":{},"name-end-col":26,"name-end-row":827,"name-row":827,"ns":"cljs.pprint","name":"set-pprint-dispatch","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L827","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":7,"arglist-strs":["[function]"],"row":827},{"fixed-arities":[2],"end-row":839,"meta":{},"name-end-col":28,"name-end-row":836,"private":true,"name-row":836,"ns":"cljs.pprint","name":"check-enumerated-arg","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L836","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":84,"arglist-strs":["[arg choices]"],"row":836},{"fixed-arities":[0],"end-row":842,"meta":{},"name-end-col":22,"name-end-row":841,"private":true,"name-row":841,"ns":"cljs.pprint","name":"level-exceeded","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L841","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":58,"arglist-strs":["[]"],"row":841},{"fixed-arities":[1],"end-row":853,"meta":{},"name-end-col":21,"name-end-row":844,"name-row":844,"ns":"cljs.pprint","name":"pprint-newline","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L844","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":19,"arglist-strs":["[kind]"],"doc":"Print a conditional newline to a pretty printing stream. kind specifies if the\n  newline is :linear, :miser, :fill, or :mandatory.\n\n  This function is intended for use when writing custom dispatch functions.\n\n  Output is sent to *out* which must be a pretty printing writer.","row":844},{"fixed-arities":[2],"end-row":866,"meta":{},"name-end-col":20,"name-end-row":855,"name-row":855,"ns":"cljs.pprint","name":"pprint-indent","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L855","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":32,"arglist-strs":["[relative-to n]"],"doc":"Create an indent at this point in the pretty printing stream. This defines how\nfollowing lines are indented. relative-to can be either :block or :current depending\nwhether the indent should be computed relative to the start of the logical block or\nthe current column position. n is an offset.\n\nThis function is intended for use when writing custom dispatch functions.\n\nOutput is sent to *out* which must be a pretty printing writer.","row":855},{"fixed-arities":[3],"end-row":884,"meta":{},"name-end-col":17,"name-end-row":869,"name-row":869,"added":"1.2","ns":"cljs.pprint","name":"pprint-tab","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L869","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":59,"arglist-strs":["[kind colnum colinc]"],"doc":"Tab at this point in the pretty printing stream. kind specifies whether the tab\nis :line, :section, :line-relative, or :section-relative.\n\nColnum and colinc specify the target column and the increment to move the target\nforward if the output is already past the original target.\n\nThis function is intended for use when writing custom dispatch functions.\n\nOutput is sent to *out* which must be a pretty printing writer.\n\nTHIS FUNCTION IS NOT YET IMPLEMENTED.","row":869},{"end-row":891,"meta":{},"name-end-col":53,"name-end-row":891,"name-row":891,"ns":"cljs.pprint","name":"compile-format","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L891","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":39,"end-col":54,"row":891},{"end-row":892,"meta":{},"name-end-col":75,"name-end-row":892,"name-row":892,"ns":"cljs.pprint","name":"execute-format","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L892","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":61,"end-col":76,"row":892},{"end-row":893,"meta":{},"name-end-col":44,"name-end-row":893,"name-row":893,"ns":"cljs.pprint","name":"init-navigator","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L893","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":30,"end-col":45,"row":893},{"end-row":931,"meta":{},"name-end-col":16,"name-end-row":896,"name-row":896,"ns":"cljs.pprint","name":"cl-format","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L896","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":56,"arglist-strs":["[writer format-in & args]"],"varargs-min-arity":2,"doc":"An implementation of a Common Lisp compatible format function. cl-format formats its\narguments to an output stream or string based on the format control string given. It\nsupports sophisticated formatting of structured data.\n\nWriter satisfies IWriter, true to output via *print-fn* or nil to output\nto a string, format-in is the format control string and the remaining arguments\nare the data to be formatted.\n\nThe format control string is a string to be output with embedded 'format directives'\ndescribing how to format the various arguments passed in.\n\nIf writer is nil, cl-format returns the formatted result string. Otherwise, cl-format\nreturns nil.\n\nFor example:\n (let [results [46 38 22]]\n        (cl-format true \"There ~[are~;is~:;are~]~:* ~d result~:p: ~{~d~^, ~}~%\"\n                   (count results) results))\n\nPrints via *print-fn*:\n There are 3 results: 46, 38, 22\n\nDetailed documentation on format control strings is available in the \"Common Lisp the\nLanguage, 2nd edition\", Chapter 22 (available online at:\nhttp://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000)\nand in the Common Lisp HyperSpec at\nhttp://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm","row":896},{"end-row":933,"meta":{},"name-end-col":45,"name-end-row":933,"private":true,"name-row":933,"ns":"cljs.pprint","name":"*format-str*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L933","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":50,"row":933},{"fixed-arities":[2],"end-row":938,"meta":{},"name-end-col":20,"name-end-row":935,"private":true,"name-row":935,"ns":"cljs.pprint","name":"format-error","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L935","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":38,"arglist-strs":["[message offset]"],"row":935},{"end-row":947,"meta":{},"name-end-col":16,"name-end-row":947,"private":true,"name-row":947,"ns":"cljs.pprint","name":"arg-navigator","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L946","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":32,"row":946},{"fixed-arities":[3],"end-row":947,"meta":{},"name-end-col":16,"name-end-row":947,"private":true,"name-row":947,"ns":"cljs.pprint","name":"->arg-navigator","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L946","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":32,"arglist-strs":["[seq rest pos]"],"row":946},{"fixed-arities":[1],"end-row":947,"meta":{},"name-end-col":16,"name-end-row":947,"private":true,"name-row":947,"ns":"cljs.pprint","name":"map->arg-navigator","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L946","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":32,"arglist-strs":["[m]"],"row":946},{"fixed-arities":[1],"end-row":954,"meta":{"skip-wiki":true},"name-end-col":22,"name-end-row":949,"private":true,"name-row":949,"ns":"cljs.pprint","name":"init-navigator","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L949","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":29,"arglist-strs":["[s]"],"doc":"Create a new arg-navigator from the sequence with the position set to 0","row":949},{"fixed-arities":[1],"end-row":961,"meta":{},"name-end-col":16,"name-end-row":957,"private":true,"name-row":957,"ns":"cljs.pprint","name":"next-arg","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L957","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":73,"arglist-strs":["[navigator]"],"row":957},{"fixed-arities":[1],"end-row":967,"meta":{},"name-end-col":23,"name-end-row":963,"private":true,"name-row":963,"ns":"cljs.pprint","name":"next-arg-or-nil","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L963","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":25,"arglist-strs":["[navigator]"],"row":963},{"fixed-arities":[1],"end-row":975,"meta":{},"name-end-col":22,"name-end-row":970,"private":true,"name-row":970,"ns":"cljs.pprint","name":"get-format-arg","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L970","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":34,"arglist-strs":["[navigator]"],"row":970},{"end-row":977,"meta":{},"name-end-col":29,"name-end-row":977,"name-row":977,"ns":"cljs.pprint","name":"relative-reposition","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L977","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":10,"end-col":30,"row":977},{"fixed-arities":[2],"end-row":982,"meta":{},"name-end-col":27,"name-end-row":979,"private":true,"name-row":979,"ns":"cljs.pprint","name":"absolute-reposition","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L979","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":82,"arglist-strs":["[navigator position]"],"row":979},{"fixed-arities":[2],"end-row":988,"meta":{},"name-end-col":27,"name-end-row":984,"private":true,"name-row":984,"ns":"cljs.pprint","name":"relative-reposition","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L984","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":84,"arglist-strs":["[navigator position]"],"row":984},{"end-row":991,"meta":{},"name-end-col":21,"name-end-row":991,"private":true,"name-row":991,"ns":"cljs.pprint","name":"compiled-directive","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L990","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":47,"row":990},{"fixed-arities":[4],"end-row":991,"meta":{},"name-end-col":21,"name-end-row":991,"private":true,"name-row":991,"ns":"cljs.pprint","name":"->compiled-directive","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L990","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":47,"arglist-strs":["[func def params offset]"],"row":990},{"fixed-arities":[1],"end-row":991,"meta":{},"name-end-col":21,"name-end-row":991,"private":true,"name-row":991,"ns":"cljs.pprint","name":"map->compiled-directive","defined-by":"cljs.core/defrecord","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L990","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":47,"arglist-strs":["[m]"],"row":990},{"fixed-arities":[2],"end-row":1015,"meta":{},"name-end-col":25,"name-end-row":1001,"private":true,"name-row":1001,"ns":"cljs.pprint","name":"realize-parameter","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1001","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":50,"arglist-strs":["[[param [raw-val offset]] navigator]"],"row":1001},{"fixed-arities":[2],"end-row":1020,"meta":{},"name-end-col":30,"name-end-row":1017,"private":true,"name-row":1017,"ns":"cljs.pprint","name":"realize-parameter-list","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1017","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":38,"arglist-strs":["[parameter-map navigator]"],"row":1017},{"end-row":1030,"meta":{},"name-end-col":49,"name-end-row":1030,"name-row":1030,"ns":"cljs.pprint","name":"opt-base-str","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1030","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":37,"end-col":50,"row":1030},{"end-row":1033,"meta":{},"name-end-col":24,"name-end-row":1033,"private":true,"name-row":1033,"ns":"cljs.pprint","name":"special-radix-markers","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1032","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":49,"row":1032},{"fixed-arities":[1],"end-row":1043,"meta":{},"name-end-col":28,"name-end-row":1035,"private":true,"name-row":1035,"ns":"cljs.pprint","name":"format-simple-number","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1035","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[n]"],"row":1035},{"fixed-arities":[4],"end-row":1061,"meta":{},"name-end-col":20,"name-end-row":1045,"private":true,"name-row":1045,"ns":"cljs.pprint","name":"format-ascii","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1045","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":20,"arglist-strs":["[print-func params arg-navigator offsets]"],"row":1045},{"fixed-arities":[1],"end-row":1076,"meta":{},"name-end-col":17,"name-end-row":1068,"private":true,"name-row":1068,"ns":"cljs.pprint","name":"integral?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1068","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":18,"arglist-strs":["[x]"],"doc":"returns true if a number is actually an integer (that is, has no fractional part)","row":1068},{"fixed-arities":[2],"end-row":1086,"meta":{},"name-end-col":18,"name-end-row":1078,"private":true,"name-row":1078,"ns":"cljs.pprint","name":"remainders","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1078","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":23,"arglist-strs":["[base val]"],"doc":"Return the list of remainders (essentially the 'digits') of val in the given base","row":1078},{"fixed-arities":[2],"end-row":1102,"meta":{},"name-end-col":16,"name-end-row":1090,"private":true,"name-row":1090,"ns":"cljs.pprint","name":"base-str","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1090","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":42,"arglist-strs":["[base val]"],"doc":"Return val as a string in the given base","row":1090},{"end-row":1106,"meta":{},"name-end-col":26,"name-end-row":1106,"private":true,"name-row":1106,"ns":"cljs.pprint","name":"javascript-base-formats","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1105","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":54,"row":1105},{"fixed-arities":[2],"end-row":1111,"meta":{},"name-end-col":20,"name-end-row":1108,"private":true,"name-row":1108,"ns":"cljs.pprint","name":"opt-base-str","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1108","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":23,"arglist-strs":["[base val]"],"doc":"Return val as a string in the given base. No cljs format, so no improved performance.","row":1108},{"fixed-arities":[2],"end-row":1116,"meta":{},"name-end-col":17,"name-end-row":1113,"private":true,"name-row":1113,"ns":"cljs.pprint","name":"group-by*","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1113","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":94,"arglist-strs":["[unit lis]"],"row":1113},{"fixed-arities":[4],"end-row":1142,"meta":{},"name-end-col":22,"name-end-row":1118,"private":true,"name-row":1118,"ns":"cljs.pprint","name":"format-integer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1118","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":20,"arglist-strs":["[base params arg-navigator offsets]"],"row":1118},{"end-row":1152,"meta":{},"name-end-col":28,"name-end-row":1149,"private":true,"name-row":1149,"ns":"cljs.pprint","name":"english-cardinal-units","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1148","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":62,"row":1148},{"end-row":1158,"meta":{},"name-end-col":27,"name-end-row":1155,"private":true,"name-row":1155,"ns":"cljs.pprint","name":"english-ordinal-units","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1154","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":72,"row":1154},{"end-row":1162,"meta":{},"name-end-col":27,"name-end-row":1161,"private":true,"name-row":1161,"ns":"cljs.pprint","name":"english-cardinal-tens","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1160","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":84,"row":1160},{"end-row":1167,"meta":{},"name-end-col":26,"name-end-row":1165,"private":true,"name-row":1165,"ns":"cljs.pprint","name":"english-ordinal-tens","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1164","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":56,"row":1164},{"end-row":1179,"meta":{},"name-end-col":27,"name-end-row":1174,"private":true,"name-row":1174,"ns":"cljs.pprint","name":"english-scale-numbers","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1173","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":56,"row":1173},{"fixed-arities":[1],"end-row":1197,"meta":{},"name-end-col":30,"name-end-row":1181,"private":true,"name-row":1181,"ns":"cljs.pprint","name":"format-simple-cardinal","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1181","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":84,"arglist-strs":["[num]"],"doc":"Convert a number less than 1000 to a cardinal english string","row":1181},{"fixed-arities":[2],"end-row":1220,"meta":{},"name-end-col":26,"name-end-row":1199,"private":true,"name-row":1199,"ns":"cljs.pprint","name":"add-english-scales","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1199","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":32,"arglist-strs":["[parts offset]"],"doc":"Take a sequence of parts, add scale numbers (e.g., million) and combine into a string\n  offset is a factor of 10^3 to multiply by","row":1199},{"fixed-arities":[3],"end-row":1237,"meta":{},"name-end-col":31,"name-end-row":1222,"private":true,"name-row":1222,"ns":"cljs.pprint","name":"format-cardinal-english","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1222","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1222},{"fixed-arities":[1],"end-row":1259,"meta":{},"name-end-col":29,"name-end-row":1239,"private":true,"name-row":1239,"ns":"cljs.pprint","name":"format-simple-ordinal","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1239","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":38,"arglist-strs":["[num]"],"doc":"Convert a number less than 1000 to a ordinal english string\n  Note this should only be used for the last one in the sequence","row":1239},{"fixed-arities":[3],"end-row":1291,"meta":{},"name-end-col":30,"name-end-row":1261,"private":true,"name-row":1261,"ns":"cljs.pprint","name":"format-ordinal-english","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1261","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1261},{"end-row":1302,"meta":{},"name-end-col":21,"name-end-row":1298,"private":true,"name-row":1298,"ns":"cljs.pprint","name":"old-roman-table","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1297","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":26,"row":1297},{"end-row":1309,"meta":{},"name-end-col":21,"name-end-row":1305,"private":true,"name-row":1305,"ns":"cljs.pprint","name":"new-roman-table","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1304","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":26,"row":1304},{"fixed-arities":[4],"end-row":1333,"meta":{},"name-end-col":20,"name-end-row":1311,"private":true,"name-row":1311,"ns":"cljs.pprint","name":"format-roman","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1311","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[table params navigator offsets]"],"doc":"Format a roman numeral using the specified look-up table","row":1311},{"fixed-arities":[3],"end-row":1336,"meta":{},"name-end-col":24,"name-end-row":1335,"private":true,"name-row":1335,"ns":"cljs.pprint","name":"format-old-roman","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1335","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":59,"arglist-strs":["[params navigator offsets]"],"row":1335},{"fixed-arities":[3],"end-row":1339,"meta":{},"name-end-col":24,"name-end-row":1338,"private":true,"name-row":1338,"ns":"cljs.pprint","name":"format-new-roman","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1338","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":59,"arglist-strs":["[params navigator offsets]"],"row":1338},{"end-row":1346,"meta":{},"name-end-col":19,"name-end-row":1346,"private":true,"name-row":1346,"ns":"cljs.pprint","name":"special-chars","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1345","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":84,"row":1345},{"fixed-arities":[3],"end-row":1360,"meta":{},"name-end-col":24,"name-end-row":1348,"private":true,"name-row":1348,"ns":"cljs.pprint","name":"pretty-character","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1348","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1348},{"fixed-arities":[3],"end-row":1368,"meta":{},"name-end-col":26,"name-end-row":1362,"private":true,"name-row":1362,"ns":"cljs.pprint","name":"readable-character","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1362","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1362},{"fixed-arities":[3],"end-row":1373,"meta":{},"name-end-col":23,"name-end-row":1370,"private":true,"name-row":1370,"ns":"cljs.pprint","name":"plain-character","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1370","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1370},{"fixed-arities":[1],"end-row":1379,"meta":{},"name-end-col":14,"name-end-row":1377,"private":true,"name-row":1377,"ns":"cljs.pprint","name":"abort?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1377","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":57,"arglist-strs":["[context]"],"row":1377},{"fixed-arities":[3],"end-row":1393,"meta":{},"name-end-col":26,"name-end-row":1382,"private":true,"name-row":1382,"ns":"cljs.pprint","name":"execute-sub-format","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1382","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[format args base-args]"],"row":1382},{"fixed-arities":[1],"end-row":1412,"meta":{},"name-end-col":24,"name-end-row":1400,"private":true,"name-row":1400,"ns":"cljs.pprint","name":"float-parts-base","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1400","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":73,"arglist-strs":["[f]"],"doc":"Produce string parts for the mantissa (normalize 1-9) and exponent","row":1400},{"fixed-arities":[1],"end-row":1424,"meta":{},"name-end-col":19,"name-end-row":1414,"private":true,"name-row":1414,"ns":"cljs.pprint","name":"float-parts","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1414","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":43,"arglist-strs":["[f]"],"doc":"Take care of leading and trailing zeros in decomposed floats","row":1414},{"fixed-arities":[1],"end-row":1440,"meta":{},"name-end-col":13,"name-end-row":1426,"private":true,"name-row":1426,"ns":"cljs.pprint","name":"inc-s","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1426","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":51,"arglist-strs":["[s]"],"doc":"Assumption: The input string consists of one or more decimal digits,\n  and no other characters. Return a string containing one or more\n  decimal digits containing a decimal number one larger than the input\n  string. The output string will always be the same length as the input\n  string, or one character longer.","row":1426},{"fixed-arities":[4],"end-row":1486,"meta":{},"name-end-col":17,"name-end-row":1442,"private":true,"name-row":1442,"ns":"cljs.pprint","name":"round-str","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1442","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":18,"arglist-strs":["[m e d w]"],"row":1442},{"fixed-arities":[3],"end-row":1496,"meta":{},"name-end-col":20,"name-end-row":1488,"private":true,"name-row":1488,"ns":"cljs.pprint","name":"expand-fixed","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1488","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":12,"arglist-strs":["[m e d]"],"row":1488},{"fixed-arities":[2],"end-row":1504,"meta":{},"name-end-col":22,"name-end-row":1498,"private":true,"name-row":1498,"ns":"cljs.pprint","name":"insert-decimal","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1498","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":47,"arglist-strs":["[m e]"],"doc":"Insert the decimal point at the right spot in the number to match an exponent","row":1498},{"fixed-arities":[3],"end-row":1507,"meta":{},"name-end-col":17,"name-end-row":1506,"private":true,"name-row":1506,"ns":"cljs.pprint","name":"get-fixed","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1506","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":43,"arglist-strs":["[m e d]"],"row":1506},{"fixed-arities":[2],"end-row":1514,"meta":{},"name-end-col":29,"name-end-row":1509,"private":true,"name-row":1509,"ns":"cljs.pprint","name":"insert-scaled-decimal","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1509","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":40,"arglist-strs":["[m k]"],"doc":"Insert the decimal point at the right spot in the number to match an exponent","row":1509},{"fixed-arities":[1],"end-row":1518,"meta":{},"name-end-col":21,"name-end-row":1517,"private":true,"name-row":1517,"ns":"cljs.pprint","name":"convert-ratio","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1517","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":5,"arglist-strs":["[x]"],"row":1517},{"fixed-arities":[3],"end-row":1564,"meta":{},"name-end-col":19,"name-end-row":1522,"private":true,"name-row":1522,"ns":"cljs.pprint","name":"fixed-float","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1522","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1522},{"fixed-arities":[3],"end-row":1636,"meta":{},"name-end-col":25,"name-end-row":1569,"private":true,"name-row":1569,"ns":"cljs.pprint","name":"exponential-float","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1569","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offset]"],"row":1569},{"fixed-arities":[3],"end-row":1662,"meta":{},"name-end-col":21,"name-end-row":1643,"private":true,"name-row":1643,"ns":"cljs.pprint","name":"general-float","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1643","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":54,"arglist-strs":["[params navigator offsets]"],"row":1643},{"fixed-arities":[3],"end-row":1682,"meta":{},"name-end-col":20,"name-end-row":1666,"private":true,"name-row":1666,"ns":"cljs.pprint","name":"dollar-float","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1666","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1666},{"fixed-arities":[3],"end-row":1701,"meta":{},"name-end-col":26,"name-end-row":1692,"private":true,"name-row":1692,"ns":"cljs.pprint","name":"choice-conditional","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1692","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":19,"arglist-strs":["[params arg-navigator offsets]"],"row":1692},{"fixed-arities":[3],"end-row":1712,"meta":{},"name-end-col":27,"name-end-row":1704,"private":true,"name-row":1704,"ns":"cljs.pprint","name":"boolean-conditional","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1704","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":19,"arglist-strs":["[params arg-navigator offsets]"],"row":1704},{"fixed-arities":[3],"end-row":1724,"meta":{},"name-end-col":29,"name-end-row":1716,"private":true,"name-row":1716,"ns":"cljs.pprint","name":"check-arg-conditional","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1716","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":19,"arglist-strs":["[params arg-navigator offsets]"],"row":1716},{"fixed-arities":[3],"end-row":1754,"meta":{},"name-end-col":23,"name-end-row":1733,"private":true,"name-row":1733,"ns":"cljs.pprint","name":"iterate-sublist","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1733","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":62,"arglist-strs":["[params navigator offsets]"],"row":1733},{"fixed-arities":[3],"end-row":1777,"meta":{},"name-end-col":32,"name-end-row":1758,"private":true,"name-row":1758,"ns":"cljs.pprint","name":"iterate-list-of-sublists","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1758","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":54,"arglist-strs":["[params navigator offsets]"],"row":1758},{"fixed-arities":[3],"end-row":1801,"meta":{},"name-end-col":25,"name-end-row":1781,"private":true,"name-row":1781,"ns":"cljs.pprint","name":"iterate-main-list","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1781","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":62,"arglist-strs":["[params navigator offsets]"],"row":1781},{"fixed-arities":[3],"end-row":1821,"meta":{},"name-end-col":29,"name-end-row":1805,"private":true,"name-row":1805,"ns":"cljs.pprint","name":"iterate-main-sublists","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1805","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":48,"arglist-strs":["[params navigator offsets]"],"row":1805},{"end-row":1836,"meta":{},"name-end-col":73,"name-end-row":1836,"name-row":1836,"ns":"cljs.pprint","name":"format-logical-block","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1836","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":53,"end-col":74,"row":1836},{"end-row":1837,"meta":{},"name-end-col":68,"name-end-row":1837,"name-row":1837,"ns":"cljs.pprint","name":"justify-clauses","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1837","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":53,"end-col":69,"row":1837},{"fixed-arities":[3],"end-row":1842,"meta":{},"name-end-col":32,"name-end-row":1839,"private":true,"name-row":1839,"ns":"cljs.pprint","name":"logical-block-or-justify","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1839","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":49,"arglist-strs":["[params navigator offsets]"],"row":1839},{"fixed-arities":[3],"end-row":1861,"meta":{},"name-end-col":22,"name-end-row":1848,"private":true,"name-row":1848,"ns":"cljs.pprint","name":"render-clauses","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1848","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":72,"arglist-strs":["[clauses navigator base-navigator]"],"row":1848},{"fixed-arities":[3],"end-row":1909,"meta":{},"name-end-col":23,"name-end-row":1864,"private":true,"name-row":1864,"ns":"cljs.pprint","name":"justify-clauses","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1864","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":1864},{"fixed-arities":[1],"end-row":1938,"meta":{},"name-end-col":23,"name-end-row":1919,"private":true,"name-row":1919,"ns":"cljs.pprint","name":"downcase-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1919","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":60,"arglist-strs":["[writer]"],"doc":"Returns a proxy that wraps writer, converting all characters to lower case","row":1919},{"fixed-arities":[1],"end-row":1959,"meta":{},"name-end-col":21,"name-end-row":1940,"private":true,"name-row":1940,"ns":"cljs.pprint","name":"upcase-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1940","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":60,"arglist-strs":["[writer]"],"doc":"Returns a proxy that wraps writer, converting all characters to upper case","row":1940},{"fixed-arities":[2],"end-row":1982,"meta":{},"name-end-col":25,"name-end-row":1961,"private":true,"name-row":1961,"ns":"cljs.pprint","name":"capitalize-string","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1961","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":22,"arglist-strs":["[s first?]"],"doc":"Capitalizes the words in a string. If first? is false, don't capitalize the\n                                      first character of the string even if it's a letter.","row":1961},{"fixed-arities":[1],"end-row":2008,"meta":{},"name-end-col":30,"name-end-row":1984,"private":true,"name-row":1984,"ns":"cljs.pprint","name":"capitalize-word-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L1984","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":83,"arglist-strs":["[writer]"],"doc":"Returns a proxy that wraps writer, capitalizing all words","row":1984},{"fixed-arities":[1],"end-row":2043,"meta":{},"name-end-col":23,"name-end-row":2010,"private":true,"name-row":2010,"ns":"cljs.pprint","name":"init-cap-writer","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2010","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":59,"arglist-strs":["[writer]"],"doc":"Returns a proxy that wraps writer, capitalizing the first word","row":2010},{"fixed-arities":[4],"end-row":2048,"meta":{},"name-end-col":19,"name-end-row":2045,"private":true,"name-row":2045,"ns":"cljs.pprint","name":"modify-case","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2045","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":67,"arglist-strs":["[make-writer params navigator offsets]"],"row":2045},{"fixed-arities":[1],"end-row":2090,"meta":{},"name-end-col":24,"name-end-row":2055,"name-row":2055,"ns":"cljs.pprint","name":"get-pretty-writer","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2055","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":70,"arglist-strs":["[writer]"],"doc":"Returns the IWriter passed in wrapped in a pretty writer proxy, unless it's\nalready a pretty writer. Generally, it is unnecessary to call this function, since pprint,\nwrite, and cl-format all call it if they need to. However if you want the state to be\npreserved across calls, you will want to wrap them with this.\n\nFor example, when you want to generate column-aware output with multiple calls to cl-format,\ndo it like in this example:\n\n    (defn print-table [aseq column-width]\n      (binding [*out* (get-pretty-writer *out*)]\n        (doseq [row aseq]\n          (doseq [col row]\n            (cl-format true \"~4D~7,vT\" col column-width))\n          (prn))))\n\nNow when you run:\n\n    user> (print-table (map #(vector % (* % %) (* % % %)) (range 1 11)) 8)\n\nIt prints a table of squares and cubes for the numbers from 1 to 10:\n\n       1      1       1\n       2      4       8\n       3      9      27\n       4     16      64\n       5     25     125\n       6     36     216\n       7     49     343\n       8     64     512\n       9     81     729\n      10    100    1000","row":2055},{"fixed-arities":[0],"end-row":2103,"meta":{},"name-end-col":17,"name-end-row":2096,"name-row":2096,"ns":"cljs.pprint","name":"fresh-line","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2096","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":12,"arglist-strs":["[]"],"doc":"Make a newline if *out* is not already at the beginning of the line. If *out* is\nnot a pretty writer (which keeps track of columns), this function always outputs a newline.","row":2096},{"fixed-arities":[3],"end-row":2114,"meta":{},"name-end-col":27,"name-end-row":2105,"private":true,"name-row":2105,"ns":"cljs.pprint","name":"absolute-tabulation","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2105","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":13,"arglist-strs":["[params navigator offsets]"],"row":2105},{"fixed-arities":[3],"end-row":2123,"meta":{},"name-end-col":27,"name-end-row":2116,"private":true,"name-row":2116,"ns":"cljs.pprint","name":"relative-tabulation","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2116","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":13,"arglist-strs":["[params navigator offsets]"],"row":2116},{"fixed-arities":[3],"end-row":2147,"meta":{},"name-end-col":28,"name-end-row":2131,"private":true,"name-row":2131,"ns":"cljs.pprint","name":"format-logical-block","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2131","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":2131},{"fixed-arities":[3],"end-row":2152,"meta":{},"name-end-col":18,"name-end-row":2149,"private":true,"name-row":2149,"ns":"cljs.pprint","name":"set-indent","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2149","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":2149},{"fixed-arities":[3],"end-row":2160,"meta":{},"name-end-col":27,"name-end-row":2155,"private":true,"name-row":2155,"ns":"cljs.pprint","name":"conditional-newline","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2155","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[params navigator offsets]"],"row":2155},{"end-row":2450,"meta":{},"name-end-col":19,"name-end-row":2450,"private":true,"name-row":2450,"ns":"cljs.pprint","name":"param-pattern","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2449","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":55,"row":2449},{"end-row":2453,"meta":{},"name-end-col":20,"name-end-row":2453,"private":true,"name-row":2453,"ns":"cljs.pprint","name":"special-params","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2452","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":66,"row":2452},{"fixed-arities":[1],"end-row":2467,"meta":{},"name-end-col":21,"name-end-row":2455,"private":true,"name-row":2455,"ns":"cljs.pprint","name":"extract-param","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2455","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":29,"arglist-strs":["[[s offset saw-comma]]"],"row":2455},{"fixed-arities":[2],"end-row":2470,"meta":{},"name-end-col":22,"name-end-row":2469,"private":true,"name-row":2469,"ns":"cljs.pprint","name":"extract-params","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2469","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":44,"arglist-strs":["[s offset]"],"row":2469},{"fixed-arities":[1],"end-row":2482,"meta":{},"name-end-col":23,"name-end-row":2472,"private":true,"name-row":2472,"ns":"cljs.pprint","name":"translate-param","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2472","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":12,"arglist-strs":["[[p offset]]"],"doc":"Translate the string representation of a param to the internalized\n                                      representation","row":2472},{"end-row":2485,"meta":{},"name-end-col":15,"name-end-row":2485,"private":true,"name-row":2485,"ns":"cljs.pprint","name":"flag-defs","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2484","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":36,"row":2484},{"fixed-arities":[2],"end-row":2500,"meta":{},"name-end-col":21,"name-end-row":2487,"private":true,"name-row":2487,"ns":"cljs.pprint","name":"extract-flags","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2487","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":20,"arglist-strs":["[s offset]"],"row":2487},{"fixed-arities":[2],"end-row":2513,"meta":{},"name-end-col":19,"name-end-row":2502,"private":true,"name-row":2502,"ns":"cljs.pprint","name":"check-flags","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2502","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":73,"arglist-strs":["[def flags]"],"row":2502},{"fixed-arities":[4],"end-row":2543,"meta":{},"name-end-col":18,"name-end-row":2515,"private":true,"name-row":2515,"ns":"cljs.pprint","name":"map-params","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2515","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":12,"arglist-strs":["[def params flags offset]"],"doc":"Takes a directive definition and the list of actual parameters and\na map of flags and returns a map of the parameters and flags with defaults\nfilled in. We check to make sure that there are the right types and number\nof parameters as well.","row":2515},{"fixed-arities":[2],"end-row":2563,"meta":{},"name-end-col":25,"name-end-row":2545,"private":true,"name-row":2545,"ns":"cljs.pprint","name":"compile-directive","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2545","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":30,"arglist-strs":["[s offset]"],"row":2545},{"fixed-arities":[2],"end-row":2566,"meta":{},"name-end-col":26,"name-end-row":2565,"private":true,"name-row":2565,"ns":"cljs.pprint","name":"compile-raw-string","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2565","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":73,"arglist-strs":["[s offset]"],"row":2565},{"fixed-arities":[1],"end-row":2568,"meta":{},"name-end-col":21,"name-end-row":2568,"private":true,"name-row":2568,"ns":"cljs.pprint","name":"right-bracket","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2568","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":66,"arglist-strs":["[this]"],"row":2568},{"fixed-arities":[1],"end-row":2570,"meta":{},"name-end-col":18,"name-end-row":2570,"private":true,"name-row":2570,"ns":"cljs.pprint","name":"separator?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2570","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":67,"arglist-strs":["[this]"],"row":2570},{"fixed-arities":[1],"end-row":2574,"meta":{},"name-end-col":23,"name-end-row":2572,"private":true,"name-row":2572,"ns":"cljs.pprint","name":"else-separator?","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2572","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":33,"arglist-strs":["[this]"],"row":2572},{"end-row":2576,"meta":{},"name-end-col":73,"name-end-row":2576,"name-row":2576,"ns":"cljs.pprint","name":"collect-clauses","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2576","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":58,"end-col":74,"row":2576},{"fixed-arities":[2],"end-row":2585,"meta":{},"name-end-col":23,"name-end-row":2578,"private":true,"name-row":2578,"ns":"cljs.pprint","name":"process-bracket","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2578","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":18,"arglist-strs":["[this remainder]"],"row":2578},{"fixed-arities":[3],"end-row":2609,"meta":{},"name-end-col":22,"name-end-row":2587,"private":true,"name-row":2587,"ns":"cljs.pprint","name":"process-clause","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2587","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[bracket-info offset remainder]"],"row":2587},{"fixed-arities":[3],"end-row":2658,"meta":{},"name-end-col":23,"name-end-row":2611,"private":true,"name-row":2611,"ns":"cljs.pprint","name":"collect-clauses","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2611","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":41,"arglist-strs":["[bracket-info offset remainder]"],"row":2611},{"fixed-arities":[1],"end-row":2673,"meta":{},"name-end-col":23,"name-end-row":2660,"private":true,"name-row":2660,"ns":"cljs.pprint","name":"process-nesting","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2660","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[format]"],"doc":"Take a linearly compiled format and process the bracket directives to give it\n   the appropriate tree structure","row":2660},{"fixed-arities":[1],"end-row":2693,"meta":{},"name-end-col":22,"name-end-row":2675,"private":true,"name-row":2675,"ns":"cljs.pprint","name":"compile-format","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2675","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":30,"arglist-strs":["[format-str]"],"doc":"Compiles format-str into a compiled format which can be used as an argument\nto cl-format just like a plain format string. Use this function for improved\nperformance when you're using the same format string repeatedly","row":2675},{"fixed-arities":[1],"end-row":2706,"meta":{},"name-end-col":20,"name-end-row":2695,"private":true,"name-row":2695,"ns":"cljs.pprint","name":"needs-pretty","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2695","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":34,"arglist-strs":["[format]"],"doc":"determine whether a given compiled format has any directives that depend on the\ncolumn number or pretty printing","row":2695},{"fixed-arities":[3,2],"end-row":2754,"meta":{"skip-wiki":true},"name-end-col":22,"name-end-row":2720,"private":true,"name-row":2720,"ns":"cljs.pprint","name":"execute-format","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2720","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":9,"arglist-strs":["[stream format args]","[format args]"],"doc":"Executes the format with the arguments.","row":2720},{"end-row":2758,"meta":{},"name-end-col":37,"name-end-row":2758,"private":true,"name-row":2758,"ns":"cljs.pprint","name":"cached-compile","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2758","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":23,"end-col":63,"row":2758},{"fixed-arities":[3],"end-row":2767,"meta":{},"name-end-col":18,"name-end-row":2764,"private":true,"name-row":2764,"ns":"cljs.pprint","name":"use-method","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2764","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":43,"arglist-strs":["[multifn dispatch-val func]"],"doc":"Installs a function as a new method of multimethod associated with dispatch-value. ","row":2764},{"end-row":2795,"meta":{},"name-end-col":36,"name-end-row":2789,"private":true,"name-row":2789,"ns":"cljs.pprint","name":"reader-macros","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2789","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":23,"end-col":28,"row":2789},{"fixed-arities":[1],"end-row":2802,"meta":{},"name-end-col":27,"name-end-row":2797,"private":true,"name-row":2797,"ns":"cljs.pprint","name":"pprint-reader-macro","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2797","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":14,"arglist-strs":["[alis]"],"row":2797},{"fixed-arities":[1],"end-row":2822,"meta":{},"name-end-col":26,"name-end-row":2814,"private":true,"name-row":2814,"ns":"cljs.pprint","name":"pprint-simple-list","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2814","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":35,"arglist-strs":["[alis]"],"row":2814},{"fixed-arities":[1],"end-row":2826,"meta":{},"name-end-col":19,"name-end-row":2824,"private":true,"name-row":2824,"ns":"cljs.pprint","name":"pprint-list","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2824","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":32,"arglist-strs":["[alis]"],"row":2824},{"fixed-arities":[1],"end-row":2837,"meta":{},"name-end-col":21,"name-end-row":2829,"private":true,"name-row":2829,"ns":"cljs.pprint","name":"pprint-vector","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2829","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":35,"arglist-strs":["[avec]"],"row":2829},{"end-row":2839,"meta":{},"name-end-col":35,"name-end-row":2839,"private":true,"name-row":2839,"ns":"cljs.pprint","name":"pprint-array","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2839","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":23,"end-col":80,"row":2839},{"fixed-arities":[1],"end-row":2861,"meta":{},"name-end-col":18,"name-end-row":2842,"private":true,"name-row":2842,"ns":"cljs.pprint","name":"pprint-map","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2842","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":38,"arglist-strs":["[amap]"],"row":2842},{"fixed-arities":[1],"end-row":2865,"meta":{},"name-end-col":29,"name-end-row":2863,"private":true,"name-row":2863,"ns":"cljs.pprint","name":"pprint-simple-default","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2863","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":31,"arglist-strs":["[obj]"],"row":2863},{"end-row":2867,"meta":{},"name-end-col":16,"name-end-row":2867,"name-row":2867,"ns":"cljs.pprint","name":"pprint-set","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2867","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":6,"end-col":61,"row":2867},{"end-row":2871,"meta":{},"name-end-col":9,"name-end-row":2870,"private":true,"name-row":2870,"ns":"cljs.pprint","name":"type-map","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2869","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":1,"end-col":37,"row":2869},{"fixed-arities":[1],"end-row":2878,"meta":{},"name-end-col":20,"name-end-row":2873,"private":true,"name-row":2873,"ns":"cljs.pprint","name":"map-ref-type","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2873","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":11,"arglist-strs":["[name]"],"doc":"Map ugly type names to something simpler","row":2873},{"fixed-arities":[1],"end-row":2889,"meta":{},"name-end-col":21,"name-end-row":2880,"private":true,"name-row":2880,"ns":"cljs.pprint","name":"pprint-ideref","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2880","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":18,"arglist-strs":["[o]"],"row":2880},{"end-row":2891,"meta":{},"name-end-col":36,"name-end-row":2891,"private":true,"name-row":2891,"ns":"cljs.pprint","name":"pprint-pqueue","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2891","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":23,"end-col":83,"row":2891},{"fixed-arities":[1],"end-row":2903,"meta":{},"name-end-col":23,"name-end-row":2893,"private":true,"name-row":2893,"ns":"cljs.pprint","name":"type-dispatcher","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2893","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":24,"arglist-strs":["[obj]"],"row":2893},{"end-row":2907,"meta":{},"name-end-col":26,"name-end-row":2905,"name-row":2905,"ns":"cljs.pprint","name":"simple-dispatch","defined-by":"cljs.core/defmulti","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2905","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":11,"end-col":19,"doc":"The pretty print dispatch function for simple data structure format.","row":2905},{"end-row":2922,"meta":{},"name-end-col":56,"name-end-row":2922,"name-row":2922,"ns":"cljs.pprint","name":"pprint-simple-code-list","defined-by":"cljs.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2922","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":57,"row":2922},{"fixed-arities":[1],"end-row":2935,"meta":{},"name-end-col":16,"name-end-row":2930,"private":true,"name-row":2930,"ns":"cljs.pprint","name":"brackets","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2930","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":16,"arglist-strs":["[form]"],"doc":"Figure out which kind of brackets to use","row":2930},{"fixed-arities":[1],"end-row":2969,"meta":{},"name-end-col":27,"name-end-row":2937,"private":true,"name-row":2937,"ns":"cljs.pprint","name":"pprint-ns-reference","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2937","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":28,"arglist-strs":["[reference]"],"doc":"Pretty print a single reference (import, use, etc.) from a namespace decl","row":2937},{"fixed-arities":[1],"end-row":2995,"meta":{},"name-end-col":17,"name-end-row":2971,"private":true,"name-row":2971,"ns":"cljs.pprint","name":"pprint-ns","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L2971","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":23,"arglist-strs":["[alis]"],"doc":"The pretty print dispatch chunk for the ns macro","row":2971},{"end-row":3002,"meta":{},"name-end-col":40,"name-end-row":3002,"private":true,"name-row":3002,"ns":"cljs.pprint","name":"pprint-hold-first","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3002","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":23,"end-col":93,"row":3002},{"fixed-arities":[2],"end-row":3015,"meta":{},"name-end-col":19,"name-end-row":3009,"private":true,"name-row":3009,"ns":"cljs.pprint","name":"single-defn","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3009","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":46,"arglist-strs":["[alis has-doc-str?]"],"row":3009},{"fixed-arities":[2],"end-row":3020,"meta":{},"name-end-col":18,"name-end-row":3018,"private":true,"name-row":3018,"ns":"cljs.pprint","name":"multi-defn","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3018","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":46,"arglist-strs":["[alis has-doc-str?]"],"row":3018},{"fixed-arities":[1],"end-row":3043,"meta":{},"name-end-col":19,"name-end-row":3024,"private":true,"name-row":3024,"ns":"cljs.pprint","name":"pprint-defn","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3024","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":37,"arglist-strs":["[alis]"],"row":3024},{"fixed-arities":[1],"end-row":3062,"meta":{},"name-end-col":27,"name-end-row":3049,"private":true,"name-row":3049,"ns":"cljs.pprint","name":"pprint-binding-form","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3049","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":45,"arglist-strs":["[binding-vec]"],"row":3049},{"fixed-arities":[1],"end-row":3072,"meta":{},"name-end-col":18,"name-end-row":3064,"private":true,"name-row":3064,"ns":"cljs.pprint","name":"pprint-let","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3064","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":43,"arglist-strs":["[alis]"],"row":3064},{"end-row":3078,"meta":{},"name-end-col":32,"name-end-row":3078,"private":true,"name-row":3078,"ns":"cljs.pprint","name":"pprint-if","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3078","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":23,"end-col":81,"row":3078},{"fixed-arities":[1],"end-row":3098,"meta":{},"name-end-col":19,"name-end-row":3080,"private":true,"name-row":3080,"ns":"cljs.pprint","name":"pprint-cond","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3080","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":45,"arglist-strs":["[alis]"],"row":3080},{"fixed-arities":[1],"end-row":3117,"meta":{},"name-end-col":20,"name-end-row":3100,"private":true,"name-row":3100,"ns":"cljs.pprint","name":"pprint-condp","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3100","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":37,"arglist-strs":["[alis]"],"row":3100},{"end-row":3120,"meta":{},"name-end-col":45,"name-end-row":3120,"private":true,"name-row":3120,"ns":"cljs.pprint","name":"*symbol-map*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3120","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":49,"row":3120},{"fixed-arities":[1],"end-row":3134,"meta":{},"name-end-col":24,"name-end-row":3122,"private":true,"name-row":3122,"ns":"cljs.pprint","name":"pprint-anon-func","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3122","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":40,"arglist-strs":["[alis]"],"row":3122},{"fixed-arities":[1],"end-row":3153,"meta":{},"name-end-col":31,"name-end-row":3144,"private":true,"name-row":3144,"ns":"cljs.pprint","name":"pprint-simple-code-list","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3144","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":35,"arglist-strs":["[alis]"],"row":3144},{"fixed-arities":[1],"end-row":3162,"meta":{},"name-end-col":17,"name-end-row":3157,"private":true,"name-row":3157,"ns":"cljs.pprint","name":"two-forms","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3157","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":55,"arglist-strs":["[amap]"],"row":3157},{"fixed-arities":[1],"end-row":3171,"meta":{},"name-end-col":19,"name-end-row":3164,"private":true,"name-row":3164,"ns":"cljs.pprint","name":"add-core-ns","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3164","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":17,"arglist-strs":["[amap]"],"row":3164},{"end-row":3188,"meta":{},"name-end-col":45,"name-end-row":3173,"private":true,"name-row":3173,"ns":"cljs.pprint","name":"*code-table*","defined-by":"cljs.core/def","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3173","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":33,"end-col":12,"row":3173},{"fixed-arities":[1],"end-row":3194,"meta":{},"name-end-col":24,"name-end-row":3190,"private":true,"name-row":3190,"ns":"cljs.pprint","name":"pprint-code-list","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3190","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":40,"arglist-strs":["[alis]"],"row":3190},{"fixed-arities":[1],"end-row":3201,"meta":{},"name-end-col":26,"name-end-row":3196,"private":true,"name-row":3196,"ns":"cljs.pprint","name":"pprint-code-symbol","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3196","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":18,"arglist-strs":["[sym]"],"row":3196},{"end-row":3207,"meta":{"arglists":["quote",[["object"]]]},"name-end-col":16,"name-end-row":3204,"name-row":3204,"added":"1.2","ns":"cljs.pprint","name":"code-dispatch","defined-by":"cljs.core/defmulti","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3203","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":3,"end-col":19,"doc":"The pretty print dispatch function for pretty printing Clojure code.","row":3203},{"fixed-arities":[2],"end-row":3300,"meta":{},"name-end-col":19,"name-end-row":3298,"private":true,"name-row":3298,"ns":"cljs.pprint","name":"add-padding","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3298","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":8,"end-col":66,"arglist-strs":["[width s]"],"row":3298},{"fixed-arities":[1,2],"end-row":3325,"meta":{},"name-end-col":18,"name-end-row":3302,"name-row":3302,"added":"1.3","ns":"cljs.pprint","name":"print-table","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/cljs/pprint.cljs#L3302","filename":"/src/main/cljs/cljs/pprint.cljs","col":1,"name-col":7,"end-col":51,"arglist-strs":["[ks rows]","[rows]"],"doc":"Prints a collection of maps in a textual table. Prints table headings\n   ks, and then a line of output for each row, corresponding to the keys\n   in ks. If ks are not specified, use the keys of the first item in rows.","row":3302}]
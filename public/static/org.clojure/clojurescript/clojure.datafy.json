[{"fixed-arities":[1],"end-row":29,"meta":{},"name-end-col":13,"name-end-row":14,"name-row":14,"ns":"clojure.datafy","name":"datafy","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/datafy.cljs#L14","filename":"/src/main/cljs/clojure/datafy.cljs","col":1,"name-col":7,"end-col":14,"arglist-strs":["[x]"],"doc":"Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x.","row":14},{"fixed-arities":[3],"end-row":38,"meta":{},"name-end-col":10,"name-end-row":31,"name-row":31,"ns":"clojure.datafy","name":"nav","defined-by":"cljs.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/datafy.cljs#L31","filename":"/src/main/cljs/clojure/datafy.cljs","col":1,"name-col":7,"end-col":20,"arglist-strs":["[coll k v]"],"doc":"Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav.","row":31},{"fixed-arities":[1],"end-row":41,"meta":{},"name-end-col":18,"name-end-row":40,"private":true,"name-row":40,"ns":"clojure.datafy","name":"datify-ref","defined-by":"cljs.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/cljs/clojure/datafy.cljs#L40","filename":"/src/main/cljs/clojure/datafy.cljs","col":1,"name-col":8,"end-col":36,"arglist-strs":["[r]"],"row":40}]
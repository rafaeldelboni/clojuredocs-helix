[{"end-row":103,"meta":{},"name-end-col":24,"index":0,"name-end-row":79,"name-row":79,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"PushbackReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L79","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":33,"row":79},{"fixed-arities":[1],"end-row":26,"meta":{},"name-end-col":13,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":25,"name-row":25,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"read-char","defined-by":"clojure.core/defprotocol","protocol-name":"Reader","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L25","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":88,"arglist-strs":["[reader]"],"doc":"Returns the next char from the Reader, nil if the end of stream has been reached","row":25},{"fixed-arities":[1],"end-row":40,"meta":{},"name-end-col":17,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":39,"name-row":39,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"get-file-name","defined-by":"clojure.core/defprotocol","protocol-name":"IndexingReader","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L39","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":64,"arglist-strs":["[reader]"],"doc":"Returns the file name the reader is reading from, or nil","row":39},{"fixed-arities":[1],"end-row":198,"meta":{},"name-end-col":10,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":198,"name-row":198,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"to-rdr","defined-by":"clojure.core/defprotocol","protocol-name":"ReaderCoercer","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L198","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":17,"arglist-strs":["[rdr]"],"row":198},{"fixed-arities":[2],"end-row":18,"meta":{},"name-end-col":28,"index":0,"name-end-row":17,"private":true,"name-row":17,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"update!","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L17","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","macro":true,"col":1,"name-col":21,"end-col":35,"arglist-strs":["[what f]"],"row":17},{"fixed-arities":[4],"end-row":103,"meta":{},"name-end-col":24,"index":0,"name-end-row":79,"name-row":79,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"->PushbackReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L79","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":33,"arglist-strs":["[rdr buf buf-len buf-pos]"],"row":79},{"end-row":56,"meta":{},"name-end-col":22,"index":0,"name-end-row":46,"name-row":46,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"StringReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L46","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":23,"row":46},{"fixed-arities":[1,3,2],"end-row":399,"meta":{},"name-end-col":49,"index":0,"name-end-row":381,"name-row":381,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"source-logging-push-back-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L381","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":18,"end-col":13,"arglist-strs":["[s-or-rdr]","[s-or-rdr buf-len]","[s-or-rdr buf-len file-name]"],"doc":"Creates a SourceLoggingPushbackReader from a given string or PushbackReader","row":381},{"fixed-arities":[1,2],"end-row":357,"meta":{},"name-end-col":41,"index":0,"name-end-row":352,"name-row":352,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"string-push-back-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L352","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":18,"end-col":50,"arglist-strs":["[s]","[s buf-len]"],"doc":"Creates a PushbackReader from a given string","row":352},{"fixed-arities":[3],"end-row":56,"meta":{},"name-end-col":22,"index":0,"name-end-row":46,"name-row":46,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"->StringReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L46","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":23,"arglist-strs":["[s s-len s-pos]"],"row":46},{"end-row":425,"meta":{},"name-end-col":21,"index":0,"name-end-row":418,"name-row":418,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"log-source","defined-by":"clojure.core/defmacro","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L418","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","macro":true,"col":1,"name-col":11,"end-col":19,"arglist-strs":["[reader & body]"],"varargs-min-arity":1,"doc":"If reader is a SourceLoggingPushbackReader, execute body in a source\n  logging context. Otherwise, execute body, returning the result.","row":418},{"fixed-arities":[2],"end-row":77,"meta":{},"name-end-col":27,"index":0,"name-end-row":58,"name-row":58,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"->InputStreamReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L58","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":18,"arglist-strs":["[is buf]"],"row":58},{"fixed-arities":[1,3,2],"end-row":379,"meta":{},"name-end-col":43,"index":0,"name-end-row":371,"name-row":371,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"indexing-push-back-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L371","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":18,"end-col":64,"arglist-strs":["[s-or-rdr]","[s-or-rdr buf-len]","[s-or-rdr buf-len file-name]"],"doc":"Creates an IndexingPushbackReader from a given string or PushbackReader","row":371},{"fixed-arities":[1],"end-row":362,"meta":{},"name-end-col":37,"index":0,"name-end-row":359,"name-row":359,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"input-stream-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L359","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":18,"end-col":31,"arglist-strs":["[is]"],"doc":"Creates an InputStreamReader from an InputStream","row":359},{"fixed-arities":[1],"end-row":38,"meta":{},"name-end-col":21,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":37,"name-row":37,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"get-column-number","defined-by":"clojure.core/defprotocol","protocol-name":"IndexingReader","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L37","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":82,"arglist-strs":["[reader]"],"doc":"Returns the column number of the next character to be read from the stream","row":37},{"fixed-arities":[2],"end-row":216,"meta":{},"name-end-col":10,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":216,"name-row":216,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"to-pbr","defined-by":"clojure.core/defprotocol","protocol-name":"PushbackReaderCoercer","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L216","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":25,"arglist-strs":["[rdr buf-len]"],"row":216},{"fixed-arities":[0,1],"end-row":412,"meta":{},"name-end-col":16,"index":0,"name-end-row":401,"name-row":401,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"read-line","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L401","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":52,"arglist-strs":["[]","[rdr]"],"doc":"Reads a line from the reader or from *in* if no reader is specified","row":401},{"end-row":77,"meta":{},"name-end-col":27,"index":0,"name-end-row":58,"name-row":58,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"InputStreamReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L58","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":18,"row":58},{"fixed-arities":[1,2],"end-row":350,"meta":{},"name-end-col":34,"index":0,"name-end-row":347,"name-row":347,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"push-back-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L347","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":18,"end-col":89,"arglist-strs":["[rdr]","[rdr buf-len]"],"doc":"Creates a PushbackReader from a given reader or string","row":347},{"end-row":200,"meta":{},"name-end-col":40,"index":1,"name-end-row":200,"name-row":200,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"push-back-reader","defined-by":"clojure.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L200","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":24,"end-col":41,"row":200},{"end-row":32,"meta":{},"name-end-col":29,"index":0,"name-end-row":30,"name-row":30,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"IPushbackReader","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L30","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":14,"end-col":56,"row":30},{"fixed-arities":[2],"end-row":325,"meta":{},"name-end-col":18,"index":0,"name-end-row":316,"name-row":316,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"log-source*","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L316","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":19,"arglist-strs":["[reader f]"],"row":316},{"end-row":198,"meta":{},"name-end-col":27,"index":0,"name-end-row":197,"name-row":197,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"ReaderCoercer","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L197","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":14,"end-col":18,"row":197},{"end-row":40,"meta":{},"name-end-col":28,"index":0,"name-end-row":34,"name-row":34,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"IndexingReader","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L34","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":14,"end-col":65,"row":34},{"end-row":314,"meta":{},"name-end-col":37,"index":0,"name-end-row":263,"name-row":263,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"SourceLoggingPushbackReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L263","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":33,"row":263},{"fixed-arities":[2],"end-row":254,"meta":{},"name-end-col":23,"index":0,"name-end-row":250,"private":true,"name-row":250,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"log-source-char","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L250","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":8,"end-col":28,"arglist-strs":["[source-log-frames char]"],"doc":"Logs `char` to all currently active source logging frames.","row":250},{"fixed-arities":[1],"end-row":248,"meta":{},"name-end-col":23,"index":0,"name-end-row":243,"private":true,"name-row":243,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"peek-source-log","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L243","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":8,"end-col":82,"arglist-strs":["[source-log-frames]"],"doc":"Returns a string containing the contents of the top most source\n  logging frame.","row":243},{"end-row":28,"meta":{},"name-end-col":20,"index":0,"name-end-row":24,"name-row":24,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"Reader","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L24","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":14,"end-col":89,"row":24},{"fixed-arities":[1],"end-row":28,"meta":{},"name-end-col":13,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":27,"name-row":27,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"peek-char","defined-by":"clojure.core/defprotocol","protocol-name":"Reader","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L27","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":88,"arglist-strs":["[reader]"],"doc":"Returns the next char from the Reader without removing it from the reader stream","row":27},{"fixed-arities":[1,2],"end-row":369,"meta":{},"name-end-col":47,"index":0,"name-end-row":364,"name-row":364,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"input-stream-push-back-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L364","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":18,"end-col":57,"arglist-strs":["[is]","[is buf-len]"],"doc":"Creates a PushbackReader from a given InputStream","row":364},{"fixed-arities":[1],"end-row":340,"meta":{},"name-end-col":23,"index":0,"name-end-row":332,"name-row":332,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"indexing-reader?","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L332","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":56,"arglist-strs":["[rdr]"],"doc":"Returns true if the reader satisfies IndexingReader","row":332},{"fixed-arities":[1],"end-row":261,"meta":{},"name-end-col":29,"index":0,"name-end-row":256,"private":true,"name-row":256,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"drop-last-logged-char","defined-by":"clojure.core/defn-","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L256","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":8,"end-col":52,"arglist-strs":["[source-log-frames]"],"doc":"Removes the last logged character from all currently active source\n  logging frames. Called when pushing a character back.","row":256},{"fixed-arities":[9],"end-row":314,"meta":{},"name-end-col":37,"index":0,"name-end-row":263,"name-row":263,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"->SourceLoggingPushbackReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L263","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":33,"arglist-strs":["[rdr line column line-start? prev prev-column file-name source-log-frames normalize?]"],"row":263},{"fixed-arities":[1],"end-row":416,"meta":{},"name-end-col":29,"index":0,"name-end-row":414,"name-row":414,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"source-logging-reader?","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L414","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":47,"arglist-strs":["[rdr]"],"row":414},{"fixed-arities":[8],"end-row":169,"meta":{},"name-end-col":32,"index":0,"name-end-row":105,"name-row":105,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"->IndexingPushbackReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L105","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":33,"arglist-strs":["[rdr line column line-start? prev prev-column file-name normalize?]"],"row":105},{"fixed-arities":[1],"end-row":36,"meta":{},"name-end-col":19,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":35,"name-row":35,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"get-line-number","defined-by":"clojure.core/defprotocol","protocol-name":"IndexingReader","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L35","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":80,"arglist-strs":["[reader]"],"doc":"Returns the line number of the next character to be read from the stream","row":35},{"fixed-arities":[2],"end-row":32,"meta":{},"name-end-col":10,"protocol-ns":"cljs.vendor.clojure.tools.reader.reader-types","index":0,"name-end-row":31,"name-row":31,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"unread","defined-by":"clojure.core/defprotocol","protocol-name":"IPushbackReader","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L31","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":3,"name-col":4,"end-col":55,"arglist-strs":["[reader ch]"],"doc":"Pushes back a single character on to the stream","row":31},{"fixed-arities":[2],"end-row":241,"meta":{},"name-end-col":17,"index":0,"name-end-row":236,"name-row":236,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"merge-meta","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L236","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":59,"arglist-strs":["[obj m]"],"doc":"Returns an object of the same type and value as `obj`, with its\n  metadata merged over `m`.","row":236},{"fixed-arities":[1],"end-row":431,"meta":{},"name-end-col":18,"index":0,"name-end-row":427,"name-row":427,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"line-start?","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L427","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":43,"arglist-strs":["[rdr]"],"doc":"Returns true if rdr is an IndexingReader and the current char starts a new line","row":427},{"end-row":216,"meta":{},"name-end-col":35,"index":0,"name-end-row":215,"name-row":215,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"PushbackReaderCoercer","defined-by":"clojure.core/defprotocol","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L215","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":14,"end-col":26,"row":215},{"end-row":169,"meta":{},"name-end-col":32,"index":0,"name-end-row":105,"name-row":105,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"IndexingPushbackReader","defined-by":"clojure.core/deftype","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L105","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":33,"row":105},{"fixed-arities":[1],"end-row":345,"meta":{},"name-end-col":20,"index":0,"name-end-row":342,"name-row":342,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"string-reader","defined-by":"clojure.core/defn","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L342","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":7,"end-col":35,"arglist-strs":["[s]"],"doc":"Creates a StringReader from a given string","row":342},{"end-row":200,"meta":{},"name-end-col":23,"index":1,"name-end-row":200,"name-row":200,"ns":"cljs.vendor.clojure.tools.reader.reader-types","name":"string-reader","defined-by":"clojure.core/declare","git-source":"https://github.com/clojure/clojurescript/blob/r1.11.60/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj#L200","lang":[],"filename":"/src/main/clojure/cljs/vendor/clojure/tools/reader/reader_types.clj","col":1,"name-col":10,"end-col":41,"row":200}]
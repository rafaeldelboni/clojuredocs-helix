[{"fixed-arities":[1],"end-row":23,"ns":"cljs.spec.gen.alpha","name":"dynaload","lang":"clj","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[[quote s]]"],"row":14},{"end-row":30,"ns":"cljs.spec.gen.alpha","name":"delay","lang":"clj","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[& body]"],"doc":"given body that returns a generator, returns a\n  generator that delegates to that, but delays\n  creation until used.","row":25},{"fixed-arities":[1],"end-row":41,"ns":"cljs.spec.gen.alpha","name":"lazy-combinator","lang":"clj","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[s]"],"doc":"Implementation macro, do not call directly.","row":32},{"end-row":49,"ns":"cljs.spec.gen.alpha","name":"lazy-combinators","lang":"clj","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[& syms]"],"doc":"Implementation macro, do not call directly.","row":43},{"fixed-arities":[1],"end-row":60,"ns":"cljs.spec.gen.alpha","name":"lazy-prim","lang":"clj","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[s]"],"doc":"Implementation macro, do not call directly.","row":51},{"end-row":68,"ns":"cljs.spec.gen.alpha","name":"lazy-prims","lang":"clj","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[& syms]"],"doc":"Implementation macro, do not call directly.","row":62},{"fixed-arities":[1],"end-row":23,"ns":"cljs.spec.gen.alpha","name":"dynaload","lang":"cljs","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[[quote s]]"],"row":14},{"end-row":30,"ns":"cljs.spec.gen.alpha","name":"delay","lang":"cljs","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[& body]"],"doc":"given body that returns a generator, returns a\n  generator that delegates to that, but delays\n  creation until used.","row":25},{"fixed-arities":[1],"end-row":41,"ns":"cljs.spec.gen.alpha","name":"lazy-combinator","lang":"cljs","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[s]"],"doc":"Implementation macro, do not call directly.","row":32},{"end-row":49,"ns":"cljs.spec.gen.alpha","name":"lazy-combinators","lang":"cljs","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[& syms]"],"doc":"Implementation macro, do not call directly.","row":43},{"fixed-arities":[1],"end-row":60,"ns":"cljs.spec.gen.alpha","name":"lazy-prim","lang":"cljs","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[s]"],"doc":"Implementation macro, do not call directly.","row":51},{"end-row":68,"ns":"cljs.spec.gen.alpha","name":"lazy-prims","lang":"cljs","filename":"cljs/spec/gen/alpha.cljc","macro":true,"arglist-strs":["[& syms]"],"doc":"Implementation macro, do not call directly.","row":62},{"end-row":25,"filename":"cljs/spec/gen/alpha.cljs","name":"LazyVar","ns":"cljs.spec.gen.alpha","row":17},{"arglist-strs":["[f cached]"],"end-row":25,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[2],"name":"->LazyVar","ns":"cljs.spec.gen.alpha","row":17},{"end-row":28,"filename":"cljs/spec/gen/alpha.cljs","name":"quick-check-ref","ns":"cljs.spec.gen.alpha","private":true,"row":27},{"arglist-strs":["[& args]"],"end-row":32,"filename":"cljs/spec/gen/alpha.cljs","name":"quick-check","ns":"cljs.spec.gen.alpha","row":30},{"end-row":35,"filename":"cljs/spec/gen/alpha.cljs","name":"for-all*-ref","ns":"cljs.spec.gen.alpha","private":true,"row":34},{"arglist-strs":["[& args]"],"doc":"Dynamically loaded clojure.test.check.properties/for-all*.","end-row":40,"filename":"cljs/spec/gen/alpha.cljs","name":"for-all*","ns":"cljs.spec.gen.alpha","row":37},{"arglist-strs":["[x]"],"end-row":47,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[1],"name":"generator?","ns":"cljs.spec.gen.alpha","private":true,"row":45},{"arglist-strs":["[gfn]"],"end-row":50,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[1],"name":"generator","ns":"cljs.spec.gen.alpha","private":true,"row":48},{"arglist-strs":["[generator]"],"doc":"Generate a single value using generator.","end-row":54,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[1],"name":"generate","ns":"cljs.spec.gen.alpha","row":51},{"arglist-strs":["[gfnd]"],"end-row":60,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[1],"name":"delay-impl","ns":"cljs.spec.gen.alpha","row":56},{"arglist-strs":["[& gens]"],"doc":"Returns a generator of a sequence catenated from results of\ngens, each of which should generate something sequential.","end-row":83,"filename":"cljs/spec/gen/alpha.cljs","name":"cat","ns":"cljs.spec.gen.alpha","row":78},{"arglist-strs":["[ident]"],"end-row":85,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[1],"name":"qualified?","ns":"cljs.spec.gen.alpha","private":true,"row":85},{"end-row":142,"filename":"cljs/spec/gen/alpha.cljs","name":"gen-builtins","ns":"cljs.spec.gen.alpha","private":true,"row":87},{"arglist-strs":["[pred]"],"doc":"Given a predicate, returns a built-in generator if one exists.","end-row":149,"filename":"cljs/spec/gen/alpha.cljs","fixed-arities":[1],"name":"gen-for-pred","ns":"cljs.spec.gen.alpha","row":144}]